






Started logging.

<<<
Content-Length: 3206

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":9364,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\vantr\\AppData\\Local\\Temp\\.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r\\sketch_mar11a","rootUri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a","name":"sketch_mar11a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 563

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino","languageId":"cpp","version":169,"text":"void setup() {\n  // put your setup code here, to run once:\n  pinMode(16, OUTPUT);\n  pinMode(0, INPUT);\n  digitalWrite(16, LOW);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  if(digitalRead(0) == LOW) {\n    digitalWrite(16, HIGH);\n  }\n  else {\n    digitalWrite(16, LOW);\n  }\n}\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino"},"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"context":{"diagnostics":[]}}}Content-Length: 248

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino"},"position":{"line":3,"character":19}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 311

{"id":2,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":10,"character":19},"end":{"line":10,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/71","percentage":2.816901408450704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/71","percentage":4.225352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/71","percentage":4.225352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/71","percentage":5.633802816901408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/71","percentage":5.633802816901408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/71","percentage":7.042253521126761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/71","percentage":7.042253521126761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/71","percentage":8.450704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/71","percentage":8.450704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/71","percentage":9.859154929577464,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/71","percentage":9.859154929577464,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/71","percentage":11.267605633802816,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/71","percentage":11.267605633802816,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/71","percentage":12.67605633802817,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/71","percentage":12.67605633802817,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/71","percentage":14.084507042253522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/71","percentage":14.084507042253522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/71","percentage":15.492957746478874,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/71","percentage":15.492957746478874,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/71","percentage":16.901408450704224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/71","percentage":18.309859154929576,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/71","percentage":19.718309859154928,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/71","percentage":21.12676056338028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/71","percentage":21.12676056338028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/71","percentage":22.535211267605632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/71","percentage":22.535211267605632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/71","percentage":23.943661971830984,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/71","percentage":25.35211267605634,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/71","percentage":26.760563380281692,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/71","percentage":26.760563380281692,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/71","percentage":28.169014084507044,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/71","percentage":28.169014084507044,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/71","percentage":29.577464788732396,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/71","percentage":29.577464788732396,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/71","percentage":30.985915492957748,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/71","percentage":30.985915492957748,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/71","percentage":32.394366197183096,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/71","percentage":33.80281690140845,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/71","percentage":33.80281690140845,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/71","percentage":35.2112676056338,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/71","percentage":35.2112676056338,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/71","percentage":36.61971830985915,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/71","percentage":36.61971830985915,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/71","percentage":38.028169014084504,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/71","percentage":39.436619718309856,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/71","percentage":39.436619718309856,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/71","percentage":40.84507042253521,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/71","percentage":40.84507042253521,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/71","percentage":42.25352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/71","percentage":42.25352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/71","percentage":43.66197183098591,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/71","percentage":43.66197183098591,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/71","percentage":45.070422535211264,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/71","percentage":45.070422535211264,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/71","percentage":46.478873239436616,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/71","percentage":46.478873239436616,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/71","percentage":47.88732394366197,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/71","percentage":47.88732394366197,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/71","percentage":49.29577464788732,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/71","percentage":50.70422535211268,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/71","percentage":50.70422535211268,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/71","percentage":52.11267605633803,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/71","percentage":52.11267605633803,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/71","percentage":53.521126760563384,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/71","percentage":53.521126760563384,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/71","percentage":54.929577464788736,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/71","percentage":54.929577464788736,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/71","percentage":56.33802816901409,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/71","percentage":56.33802816901409,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/71","percentage":57.74647887323944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/71","percentage":59.15492957746479,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/71","percentage":60.563380281690144,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/71","percentage":60.563380281690144,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/71","percentage":61.971830985915496,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/71","percentage":61.971830985915496,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/71","percentage":63.38028169014085,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/71","percentage":63.38028169014085,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/71","percentage":64.78873239436619,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/71","percentage":64.78873239436619,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/71","percentage":66.19718309859155,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/71","percentage":66.19718309859155,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/71","percentage":67.6056338028169,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/71","percentage":67.6056338028169,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/71","percentage":69.01408450704226,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/71","percentage":70.4225352112676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/71","percentage":71.83098591549296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/71","percentage":73.2394366197183,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/71","percentage":73.2394366197183,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/71","percentage":74.64788732394366,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/71","percentage":74.64788732394366,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/71","percentage":76.05633802816901,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/71","percentage":76.05633802816901,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/71","percentage":77.46478873239437,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/71","percentage":77.46478873239437,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/71","percentage":78.87323943661971,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/71","percentage":78.87323943661971,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/71","percentage":80.28169014084507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/71","percentage":80.28169014084507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/71","percentage":81.69014084507042,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/71","percentage":81.69014084507042,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/71","percentage":83.09859154929578,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/71","percentage":83.09859154929578,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/71","percentage":84.50704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/71","percentage":84.50704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/71","percentage":85.91549295774648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/71","percentage":85.91549295774648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/71","percentage":87.32394366197182,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/71","percentage":87.32394366197182,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/71","percentage":88.73239436619718,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/71","percentage":88.73239436619718,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/71","percentage":90.14084507042253,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/71","percentage":90.14084507042253,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"65/71","percentage":91.54929577464789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"66/71","percentage":92.95774647887323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"67/71","percentage":94.36619718309859,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"67/71","percentage":94.36619718309859,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"68/71","percentage":95.77464788732394,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"69/71","percentage":97.1830985915493,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"70/71","percentage":98.59154929577464,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino"},"range":{"start":{"line":10,"character":27},"end":{"line":10,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino"},"position":{"line":8,"character":5}}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 259

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino"},"position":{"line":8,"character":5}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino"},"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/vantr/AppData/Local/Temp/.arduinoIDE-unsaved2021211-7092-xlwffz.58s8r/sketch_mar11a/sketch_mar11a.ino","version":169}}}






Started logging.

<<<
Content-Length: 3098

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":9772,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"d:\\TRAINING-PROJECT\\IoT-K15\\Module-2\\SRC\\giu_nut_dao_led","rootUri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led","name":"giu_nut_dao_led"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 618

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","languageId":"cpp","version":164,"text":"void setup() {\n  // put your setup code here, to run once:\n  pinMode(16, OUTPUT);\n  pinMode(0, INPUT);\n  digitalWrite(16, LOW);\n}\n\nboolean status = true;\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  if(digitalRead(0) == LOW) {\n    delay(50);\n    while(digitalRead(0) == 0);\n    delay(50);\n    // dao led\n    status = !status;\n    digitalWrite(16, status);\n  }\n}\n"}}}Content-Length: 289

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":29},"end":{"line":17,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/71","percentage":2.816901408450704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/71","percentage":4.225352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/71","percentage":4.225352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/71","percentage":5.633802816901408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/71","percentage":7.042253521126761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/71","percentage":7.042253521126761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/71","percentage":8.450704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/71","percentage":9.859154929577464,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/71","percentage":9.859154929577464,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/71","percentage":11.267605633802816,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/71","percentage":12.67605633802817,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/71","percentage":12.67605633802817,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/71","percentage":14.084507042253522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/71","percentage":15.492957746478874,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/71","percentage":15.492957746478874,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/71","percentage":16.901408450704224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/71","percentage":16.901408450704224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/71","percentage":18.309859154929576,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/71","percentage":18.309859154929576,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/71","percentage":19.718309859154928,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/71","percentage":19.718309859154928,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/71","percentage":21.12676056338028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/71","percentage":21.12676056338028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/71","percentage":22.535211267605632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/71","percentage":22.535211267605632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/71","percentage":23.943661971830984,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/71","percentage":23.943661971830984,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/71","percentage":25.35211267605634,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/71","percentage":25.35211267605634,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/71","percentage":26.760563380281692,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/71","percentage":26.760563380281692,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/71","percentage":28.169014084507044,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/71","percentage":28.169014084507044,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/71","percentage":29.577464788732396,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/71","percentage":29.577464788732396,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/71","percentage":30.985915492957748,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/71","percentage":30.985915492957748,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/71","percentage":32.394366197183096,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/71","percentage":32.394366197183096,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/71","percentage":33.80281690140845,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/71","percentage":33.80281690140845,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/71","percentage":35.2112676056338,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/71","percentage":35.2112676056338,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/71","percentage":36.61971830985915,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/71","percentage":36.61971830985915,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/71","percentage":38.028169014084504,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/71","percentage":38.028169014084504,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/71","percentage":39.436619718309856,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/71","percentage":40.84507042253521,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/71","percentage":40.84507042253521,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/71","percentage":42.25352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/71","percentage":42.25352112676056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/71","percentage":43.66197183098591,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/71","percentage":43.66197183098591,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/71","percentage":45.070422535211264,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/71","percentage":45.070422535211264,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/71","percentage":46.478873239436616,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/71","percentage":46.478873239436616,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/71","percentage":47.88732394366197,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/71","percentage":47.88732394366197,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/71","percentage":49.29577464788732,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/71","percentage":49.29577464788732,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/71","percentage":50.70422535211268,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/71","percentage":50.70422535211268,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/71","percentage":52.11267605633803,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/71","percentage":52.11267605633803,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/71","percentage":53.521126760563384,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/71","percentage":53.521126760563384,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/71","percentage":54.929577464788736,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/71","percentage":54.929577464788736,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/71","percentage":56.33802816901409,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/71","percentage":57.74647887323944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/71","percentage":59.15492957746479,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/71","percentage":59.15492957746479,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/71","percentage":60.563380281690144,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/71","percentage":60.563380281690144,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/71","percentage":61.971830985915496,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/71","percentage":61.971830985915496,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/71","percentage":63.38028169014085,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/71","percentage":63.38028169014085,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/71","percentage":64.78873239436619,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/71","percentage":64.78873239436619,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/71","percentage":66.19718309859155,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/71","percentage":67.6056338028169,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/71","percentage":67.6056338028169,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/71","percentage":69.01408450704226,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/71","percentage":70.4225352112676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/71","percentage":70.4225352112676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/71","percentage":71.83098591549296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/71","percentage":71.83098591549296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/71","percentage":73.2394366197183,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/71","percentage":73.2394366197183,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/71","percentage":74.64788732394366,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/71","percentage":74.64788732394366,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/71","percentage":76.05633802816901,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/71","percentage":76.05633802816901,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/71","percentage":77.46478873239437,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/71","percentage":77.46478873239437,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/71","percentage":78.87323943661971,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/71","percentage":78.87323943661971,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/71","percentage":80.28169014084507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/71","percentage":80.28169014084507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/71","percentage":81.69014084507042,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/71","percentage":83.09859154929578,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/71","percentage":83.09859154929578,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/71","percentage":84.50704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/71","percentage":84.50704225352112,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/71","percentage":85.91549295774648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/71","percentage":85.91549295774648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/71","percentage":87.32394366197182,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/71","percentage":87.32394366197182,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/71","percentage":88.73239436619718,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/71","percentage":88.73239436619718,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/71","percentage":90.14084507042253,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/71","percentage":90.14084507042253,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"65/71","percentage":91.54929577464789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"65/71","percentage":91.54929577464789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"66/71","percentage":92.95774647887323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"66/71","percentage":92.95774647887323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"67/71","percentage":94.36619718309859,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"67/71","percentage":94.36619718309859,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"68/71","percentage":95.77464788732394,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"69/71","percentage":97.1830985915493,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"70/71","percentage":98.59154929577464,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":7}}}
>>>
Content-Length: 318

{"id":2,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":165},"contentChanges":[{"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":4}},"rangeLength":0,"text":"// "}]}}Content-Length: 289

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":165}}}Content-Length: 215

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":15}}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":23}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 305

{"id":6,"result":{"contents":{"kind":"markdown","value":"### variable `status`  \n\n---\nType: `boolean`  \nValue = `true`  \nPassed as val (converted to uint8_t)  \n\n---\n```cpp\nboolean status = true\n```"},"range":{"start":{"line":24,"character":21},"end":{"line":24,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":23}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 289

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 210

{"id":7,"result":[{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":14}},"kind":1},{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":27}},"kind":2}],"jsonrpc":"2.0"}Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":166},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":27}},"rangeLength":6,"text":"!"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":23}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 459

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":23}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":166}}}Content-Length: 460

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":23}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":167},"contentChanges":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"rangeLength":0,"text":"d"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":11,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":23},"context":{"triggerKind":1}}}
>>>
Content-Length: 28278

{"id":11,"result":{"isIncomplete":true,"items":[{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","sortText":"3efdffd9digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":" decltype(expression)","kind":15,"sortText":"3f000000decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"decltype(${0:expression})"}},{"label":" delete expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"delete ${0:expression}"}},{"label":" delete [] expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"delete [] ${0:expression}"}},{"label":" double","kind":14,"sortText":"3f000000double","filterText":"double","insertText":"double","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"double"}},{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","sortText":"3f05ef7ddigitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":" delay(unsigned long)","kind":3,"detail":"void","sortText":"3f52aa78delay","filterText":"delay","insertText":"delay(${1:unsigned long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"delay(${1:unsigned long})"}},{"label":"â€¢diprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bdiprintf","filterText":"diprintf","insertText":"diprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"diprintf()"}},{"label":"â€¢div()","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv","filterText":"div","insertText":"div()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"div()"}},{"label":"â€¢div_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"div_t"}},{"label":"â€¢double_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bdouble_t","filterText":"double_t","insertText":"double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"double_t"}},{"label":"â€¢dprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bdprintf","filterText":"dprintf","insertText":"dprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dprintf()"}},{"label":"â€¢drand48()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdrand48","filterText":"drand48","insertText":"drand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"drand48()"}},{"label":"â€¢drem()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bdrem","filterText":"drem","insertText":"drem()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"drem()"}},{"label":"â€¢dremf()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bdremf","filterText":"dremf","insertText":"dremf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dremf()"}},{"label":"â€¢dtoa()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdtoa","filterText":"dtoa","insertText":"dtoa()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dtoa()"}},{"label":"â€¢dtostrf(double val, signed char width, unsigned char prec, char *s)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib_noniso.h\"`"},"sortText":"403f858bdtostrf","filterText":"dtostrf","insertText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dhcp_status"}},{"label":"â€¢daddr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"405d8e68daddr_t","filterText":"daddr_t","insertText":"daddr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"daddr_t"}},{"label":" delayMicroseconds(unsigned int us)","kind":3,"detail":"void","sortText":"405d8e68delayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":" detachInterrupt(uint8_t pin)","kind":3,"detail":"void","sortText":"405d8e68detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"detachInterrupt(${1:uint8_t pin})"}},{"label":"â€¢dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"405d8e68dev_t","filterText":"dev_t","insertText":"dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dev_t"}},{"label":"â€¢difftime()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fdifftime","filterText":"difftime","insertText":"difftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"difftime()"}},{"label":"â€¢disable_extra4k_at_link_time()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fdisable_extra4k_at_link_time","filterText":"disable_extra4k_at_link_time","insertText":"disable_extra4k_at_link_time()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"disable_extra4k_at_link_time()"}},{"label":"â€¢D0","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D0","filterText":"D0","insertText":"D0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D0"}},{"label":"â€¢D1","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D1","filterText":"D1","insertText":"D1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D1"}},{"label":"â€¢D10","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D10","filterText":"D10","insertText":"D10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D10"}},{"label":"â€¢D2","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D2","filterText":"D2","insertText":"D2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D2"}},{"label":"â€¢D3","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D3","filterText":"D3","insertText":"D3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D3"}},{"label":"â€¢D4","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D4","filterText":"D4","insertText":"D4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D4"}},{"label":"â€¢D5","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D5","filterText":"D5","insertText":"D5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D5"}},{"label":"â€¢D6","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D6","filterText":"D6","insertText":"D6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D6"}},{"label":"â€¢D7","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D7","filterText":"D7","insertText":"D7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D7"}},{"label":"â€¢D8","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D8","filterText":"D8","insertText":"D8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D8"}},{"label":"â€¢D9","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D9","filterText":"D9","insertText":"D9","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"D9"}},{"label":"â€¢dup()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066dup","filterText":"dup","insertText":"dup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dup()"}},{"label":"â€¢dup2()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066dup2","filterText":"dup2","insertText":"dup2()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dup2()"}},{"label":"â€¢Dir","kind":18,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"40766322Dir","filterText":"Dir","insertText":"Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"Dir"}},{"label":"â€¢fs::Dir","kind":7,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4079c6cfDir","filterText":"Dir","insertText":"fs::Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"fs::Dir"}},{"label":"â€¢fs::DirImpl","kind":7,"documentation":{"kind":"markdown","value":"From `\"FSImpl.h\"`"},"sortText":"4083b5beDirImpl","filterText":"DirImpl","insertText":"fs::DirImpl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"fs::DirImpl"}},{"label":"â€¢fs::DirImplPtr","kind":8,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4083b5beDirImplPtr","filterText":"DirImplPtr","insertText":"fs::DirImplPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"fs::DirImplPtr"}},{"label":"â€¢esp8266::polledTimeout::YieldPolicy::DoNothing","kind":22,"documentation":{"kind":"markdown","value":"From `\"PolledTimeout.h\"`"},"sortText":"4083b5beDoNothing","filterText":"DoNothing","insertText":"esp8266::polledTimeout::YieldPolicy::DoNothing","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"esp8266::polledTimeout::YieldPolicy::DoNothing"}},{"label":"â€¢DHCP_STARTED","kind":20,"detail":"dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137DHCP_STARTED","filterText":"DHCP_STARTED","insertText":"DHCP_STARTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DHCP_STARTED"}},{"label":"â€¢DHCP_STOPPED","kind":20,"detail":"dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137DHCP_STOPPED","filterText":"DHCP_STOPPED","insertText":"DHCP_STOPPED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DHCP_STOPPED"}},{"label":"â€¢dhcps_lease","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137dhcps_lease","filterText":"dhcps_lease","insertText":"dhcps_lease","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dhcps_lease"}},{"label":"â€¢dhcps_offer_option","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137dhcps_offer_option","filterText":"dhcps_offer_option","insertText":"dhcps_offer_option","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"dhcps_offer_option"}},{"label":" digitalPinToBitMask(pin)","kind":1,"sortText":"40a27c5fdigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalPinToBitMask(${1:pin})"}},{"label":" digitalPinToPort(pin)","kind":1,"sortText":"40a27c5fdigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalPinToPort(${1:pin})"}},{"label":" digitalPinToTimer(pin)","kind":1,"sortText":"40a27c5fdigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalPinToTimer(${1:pin})"}},{"label":"â€¢std::double_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \ntypes"},"sortText":"40a8609bdouble_t","filterText":"double_t","insertText":"std::double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::double_t"}},{"label":"â€¢std::decay\u003ctypename _Tp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \ndecay"},"sortText":"40b198efdecay","filterText":"decay","insertText":"std::decay\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::decay\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::declval\u003ctypename _Tp\u003e()","kind":3,"detail":"typename add_rvalue_reference\u003c_Tp\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n@brief Utility to simplify expressions used in unevaluated operands  \n@ingroup utilities"},"sortText":"40b198efdeclval","filterText":"declval","insertText":"std::declval\u003c${1:typename _Tp}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::declval\u003c${1:typename _Tp}\u003e()"}},{"label":"â€¢std::denorm_absent","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nThe type does not allow denormalized values."},"sortText":"40b198efdenorm_absent","filterText":"denorm_absent","insertText":"std::denorm_absent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::denorm_absent"}},{"label":"â€¢std::denorm_indeterminate","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nIndeterminate at compile time whether denormalized values are allowed."},"sortText":"40b198efdenorm_indeterminate","filterText":"denorm_indeterminate","insertText":"std::denorm_indeterminate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::denorm_indeterminate"}},{"label":"â€¢std::denorm_present","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nThe type allows denormalized values."},"sortText":"40b198efdenorm_present","filterText":"denorm_present","insertText":"std::denorm_present","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::denorm_present"}},{"label":"â€¢std::div(long __i, long __j)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40b198efdiv","filterText":"div","insertText":"std::div(${1:long __i}, ${2:long __j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::div(${1:long __i}, ${2:long __j})"}},{"label":"â€¢std::domain_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown by the library, or by you, to report domain errors (domain in the mathematical sense)."},"sortText":"40b198efdomain_error","filterText":"domain_error","insertText":"std::domain_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::domain_error"}},{"label":"â€¢std::default_delete\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nPrimary template, default_delete."},"sortText":"40b86274default_delete","filterText":"default_delete","insertText":"std::default_delete\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::default_delete\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::default_random_engine","kind":8,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`"},"sortText":"40b86274default_random_engine","filterText":"default_random_engine","insertText":"std::default_random_engine","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::default_random_engine"}},{"label":"â€¢std::discard_block_engine\u003ctypename _RandomNumberEngine, size_t __p, size_t __r\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \nProduces random numbers from some base engine by discarding blocks of data.  \n0 \u003c= @p \\_\\_r \u003c= @p \\_\\_p"},"sortText":"40b86274discard_block_engine","filterText":"discard_block_engine","insertText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e"}},{"label":"â€¢std::discrete_distribution\u003ctypename _IntType\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \n@brief A discrete_distribution random number distribution.  \nThe formula for the discrete probability mass function is"},"sortText":"40b86274discrete_distribution","filterText":"discrete_distribution","insertText":"std::discrete_distribution\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::discrete_distribution\u003c\u003e"}},{"label":"â€¢std::distance(_InputIterator __first, _InputIterator __last)","kind":3,"detail":"typename iterator_traits\u003c_InputIterator\u003e::difference_type","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief A generalization of pointer arithmetic.  \n@param \\_\\_first An input iterator.  \n@param \\_\\_last An input iterator.  \n@return The distance between them.  \nReturns @c n such that \\_\\_first + n == \\_\\_last. This requires that @p \\_\\_last must be reachable from @p \\_\\_first. Note that @c n may be negative.  \nFor random access iterators, this uses their @c + and @c - operations and are constant time. For other %iterator classes they are linear time."},"sortText":"40b86274distance","filterText":"distance","insertText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})"}},{"label":"â€¢std::divides\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link arithmetic_functors math functors@endlink."},"sortText":"40b86274divides","filterText":"divides","insertText":"std::divides\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::divides\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::dynamic_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nThe seemingly equivalent code:  \nshared_ptr\u003c\\_Tp, \\_Lp\u003e(dynamic_cast\u003c\\_Tp\\*\u003e(\\_\\_r.get())) will eventually result in undefined behaviour, attempting to delete the same object twice.  \ndynamic_pointer_cast"},"sortText":"40b86274dynamic_pointer_cast","filterText":"dynamic_pointer_cast","insertText":"std::dynamic_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::dynamic_pointer_cast($0)"}},{"label":"â€¢std::div","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv","filterText":"div","insertText":"std::div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::div"}},{"label":"â€¢std::div_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv_t","filterText":"div_t","insertText":"std::div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"std::div_t"}},{"label":" digitalPinHasPWM(p)","kind":1,"sortText":"40d057aedigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":" digitalPinToInterrupt(p)","kind":1,"sortText":"40d057aedigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":"â€¢DOMAIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"40d1050aDOMAIN","filterText":"DOMAIN","insertText":"DOMAIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DOMAIN"}},{"label":" DEFAULT","kind":1,"sortText":"40ec52eaDEFAULT","filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DEFAULT"}},{"label":" DEG_TO_RAD","kind":1,"sortText":"40ec52eaDEG_TO_RAD","filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DEG_TO_RAD"}},{"label":" DISPLAY","kind":1,"sortText":"40ec52eaDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DISPLAY"}},{"label":" degrees(rad)","kind":1,"sortText":"40ec52eadegrees","filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"degrees(${1:rad})"}},{"label":"â€¢DEBUGV(...)","kind":1,"documentation":{"kind":"markdown","value":"From `\"debug.h\"`"},"sortText":"40f66322DEBUGV","filterText":"DEBUGV","insertText":"DEBUGV(${1:...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DEBUGV(${1:...})"}},{"label":"â€¢DEC","kind":1,"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"sortText":"40f66322DEC","filterText":"DEC","insertText":"DEC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DEC"}},{"label":"â€¢DMEM_ATTR","kind":1,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`"},"sortText":"41263cddDMEM_ATTR","filterText":"DMEM_ATTR","insertText":"DMEM_ATTR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"DMEM_ATTR"}},{"label":" TIM_DIV256","kind":20,"detail":"TIM_DIV_ENUM","sortText":"80000000TIM_DIV256","filterText":"TIM_DIV256","insertText":"TIM_DIV256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"TIM_DIV256"}},{"label":" TIM_DIV265","kind":6,"detail":"const int","sortText":"80000000TIM_DIV265","filterText":"TIM_DIV265","insertText":"TIM_DIV265","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"TIM_DIV265"}},{"label":" TIM_DIV_ENUM","kind":13,"sortText":"80000000TIM_DIV_ENUM","filterText":"TIM_DIV_ENUM","insertText":"TIM_DIV_ENUM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":23}},"newText":"TIM_DIV_ENUM"}}]},"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":168},"contentChanges":[{"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":23}},"rangeLength":0,"text":"i"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":12,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":24},"context":{"triggerKind":3}}}
>>>
Content-Length: 11015

{"id":12,"result":{"isIncomplete":false,"items":[{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","sortText":"3ef411eddigitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","sortText":"3efdffd9digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":"â€¢diprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bdiprintf","filterText":"diprintf","insertText":"diprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"diprintf()"}},{"label":"â€¢div()","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv","filterText":"div","insertText":"div()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"div()"}},{"label":"â€¢div_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"div_t"}},{"label":" TIM_DIV256","kind":20,"detail":"TIM_DIV_ENUM","sortText":"40651eb8TIM_DIV256","filterText":"TIM_DIV256","insertText":"TIM_DIV256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"TIM_DIV256"}},{"label":" TIM_DIV_ENUM","kind":13,"sortText":"40651eb8TIM_DIV_ENUM","filterText":"TIM_DIV_ENUM","insertText":"TIM_DIV_ENUM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"TIM_DIV_ENUM"}},{"label":"â€¢difftime()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fdifftime","filterText":"difftime","insertText":"difftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"difftime()"}},{"label":"â€¢disable_extra4k_at_link_time()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fdisable_extra4k_at_link_time","filterText":"disable_extra4k_at_link_time","insertText":"disable_extra4k_at_link_time()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"disable_extra4k_at_link_time()"}},{"label":"â€¢Dir","kind":18,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"40766322Dir","filterText":"Dir","insertText":"Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"Dir"}},{"label":"â€¢fs::Dir","kind":7,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4079c6cfDir","filterText":"Dir","insertText":"fs::Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"fs::Dir"}},{"label":"â€¢fs::DirImpl","kind":7,"documentation":{"kind":"markdown","value":"From `\"FSImpl.h\"`"},"sortText":"4083b5beDirImpl","filterText":"DirImpl","insertText":"fs::DirImpl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"fs::DirImpl"}},{"label":"â€¢fs::DirImplPtr","kind":8,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4083b5beDirImplPtr","filterText":"DirImplPtr","insertText":"fs::DirImplPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"fs::DirImplPtr"}},{"label":" detachInterrupt(uint8_t pin)","kind":3,"detail":"void","sortText":"408c559bdetachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"detachInterrupt(${1:uint8_t pin})"}},{"label":" digitalPinToBitMask(pin)","kind":1,"sortText":"40a27c5fdigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalPinToBitMask(${1:pin})"}},{"label":" digitalPinToPort(pin)","kind":1,"sortText":"40a27c5fdigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalPinToPort(${1:pin})"}},{"label":" digitalPinToTimer(pin)","kind":1,"sortText":"40a27c5fdigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalPinToTimer(${1:pin})"}},{"label":"â€¢std::div(long __i, long __j)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40b198efdiv","filterText":"div","insertText":"std::div(${1:long __i}, ${2:long __j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::div(${1:long __i}, ${2:long __j})"}},{"label":"â€¢std::discard_block_engine\u003ctypename _RandomNumberEngine, size_t __p, size_t __r\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \nProduces random numbers from some base engine by discarding blocks of data.  \n0 \u003c= @p \\_\\_r \u003c= @p \\_\\_p"},"sortText":"40b86274discard_block_engine","filterText":"discard_block_engine","insertText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e"}},{"label":"â€¢std::discrete_distribution\u003ctypename _IntType\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \n@brief A discrete_distribution random number distribution.  \nThe formula for the discrete probability mass function is"},"sortText":"40b86274discrete_distribution","filterText":"discrete_distribution","insertText":"std::discrete_distribution\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::discrete_distribution\u003c\u003e"}},{"label":"â€¢std::distance(_InputIterator __first, _InputIterator __last)","kind":3,"detail":"typename iterator_traits\u003c_InputIterator\u003e::difference_type","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief A generalization of pointer arithmetic.  \n@param \\_\\_first An input iterator.  \n@param \\_\\_last An input iterator.  \n@return The distance between them.  \nReturns @c n such that \\_\\_first + n == \\_\\_last. This requires that @p \\_\\_last must be reachable from @p \\_\\_first. Note that @c n may be negative.  \nFor random access iterators, this uses their @c + and @c - operations and are constant time. For other %iterator classes they are linear time."},"sortText":"40b86274distance","filterText":"distance","insertText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})"}},{"label":"â€¢std::divides\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link arithmetic_functors math functors@endlink."},"sortText":"40b86274divides","filterText":"divides","insertText":"std::divides\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::divides\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::div","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv","filterText":"div","insertText":"std::div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::div"}},{"label":"â€¢std::div_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv_t","filterText":"div_t","insertText":"std::div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::div_t"}},{"label":" digitalPinHasPWM(p)","kind":1,"sortText":"40d057aedigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":" digitalPinToInterrupt(p)","kind":1,"sortText":"40d057aedigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":"â€¢std::denorm_indeterminate","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nIndeterminate at compile time whether denormalized values are allowed."},"sortText":"40e532b3denorm_indeterminate","filterText":"denorm_indeterminate","insertText":"std::denorm_indeterminate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"std::denorm_indeterminate"}},{"label":" DISPLAY","kind":1,"sortText":"40fec88dDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"DISPLAY"}},{"label":" TIM_DIV265","kind":6,"detail":"const int","sortText":"42083126TIM_DIV265","filterText":"TIM_DIV265","insertText":"TIM_DIV265","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":24}},"newText":"TIM_DIV265"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":169},"contentChanges":[{"range":{"start":{"line":17,"character":24},"end":{"line":17,"character":24}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 366

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'di'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":170},"contentChanges":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":25}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 450

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":25}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dig'; did you mean 'div'? (fix available)\n\n:88:14:\nnote: 'div' declared here"}]},"jsonrpc":"2.0"}Content-Length: 451

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":26}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digi'; did you mean 'div'? (fix available)\n\n:88:14:\nnote: 'div' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":171},"contentChanges":[{"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":172},"contentChanges":[{"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 569

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":27}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digit'; did you mean 'init'? (fix available)\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:173:6:\nnote: 'init' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":173},"contentChanges":[{"range":{"start":{"line":17,"character":28},"end":{"line":17,"character":28}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digital'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 478

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":29},"end":{"line":17,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":29}},"message":"Use of undeclared identifier 'digital'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":173}}}Content-Length: 215

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":10,"character":4}}}
>>>
Content-Length: 39

{"id":14,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":174},"contentChanges":[{"range":{"start":{"line":17,"character":29},"end":{"line":17,"character":29}},"rangeLength":0,"text":"R"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":30}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalR'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 479

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":30}},"message":"Use of undeclared identifier 'digitalR'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":175},"contentChanges":[{"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":30}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":31}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRe'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:180:5:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":176},"contentChanges":[{"range":{"start":{"line":17,"character":31},"end":{"line":17,"character":31}},"rangeLength":0,"text":"a"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":177},"contentChanges":[{"range":{"start":{"line":17,"character":32},"end":{"line":17,"character":32}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 588

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":32}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRea'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:180:5:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":33},"end":{"line":17,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":177}}}Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":178},"contentChanges":[{"range":{"start":{"line":17,"character":33},"end":{"line":17,"character":33}},"rangeLength":0,"text":"()"}]}}Content-Length: 295

{"jsonrpc":"2.0","id":17,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":34},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 182

{"id":17,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 618

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalRead'\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:180:5:\nnote: candidate function not viable: requires single argument 'pin', but no arguments were provided"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":34},"end":{"line":17,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":34},"end":{"line":17,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":178}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":179},"contentChanges":[{"range":{"start":{"line":17,"character":34},"end":{"line":17,"character":34}},"rangeLength":0,"text":"1"}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":35},"end":{"line":17,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":179}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":180},"contentChanges":[{"range":{"start":{"line":17,"character":35},"end":{"line":17,"character":35}},"rangeLength":0,"text":"6"}]}}Content-Length: 290

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":36},"end":{"line":17,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":180}}}Content-Length: 288

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":7,"character":17}}}
>>>
Content-Length: 39

{"id":23,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":7,"character":19}}}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":7,"character":20}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":7,"character":20}}}
>>>
Content-Length: 39

{"id":26,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":7,"character":20}}}
>>>
Content-Length: 39

{"id":27,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":7,"character":21}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 288

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":21},"end":{"line":7,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":181},"contentChanges":[{"range":{"start":{"line":7,"character":20},"end":{"line":7,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":182},"contentChanges":[{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 411

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":20}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'tru'; did you mean 'true'? (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 364

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 469

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":19}},"message":"Use of undeclared identifier 'tr'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":182}}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":183},"contentChanges":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":19}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 363

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 't'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 468

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"message":"Use of undeclared identifier 't'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":184},"contentChanges":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 456

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":32,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":184}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":185},"contentChanges":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":17}},"rangeLength":0,"text":"0"}]}}Content-Length: 456

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":185}}}Content-Length: 288

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 319

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":186},"contentChanges":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":186}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":187},"contentChanges":[{"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":36,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":5},"context":{"triggerKind":1}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":188},"contentChanges":[{"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":5}},"rangeLength":0,"text":"f"}]}}
>>>
Content-Length: 41881

{"id":36,"result":{"isIncomplete":true,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"3f000000if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int"}},{"label":"â€¢int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"40253fd0int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int8_t"}},{"label":"â€¢int32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"4038812dint32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int32_t"}},{"label":"â€¢int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bint16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int16_t"}},{"label":"â€¢int64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bint64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int64_t"}},{"label":"â€¢int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bint_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int_fast8_t"}},{"label":"â€¢int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bint_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int_least32_t"}},{"label":"â€¢int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bint_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int_least64_t"}},{"label":"â€¢intmax_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bintmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"intmax_t"}},{"label":"â€¢intptr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"403f858bintptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"intptr_t"}},{"label":"â€¢iprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858biprintf","filterText":"iprintf","insertText":"iprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"iprintf()"}},{"label":"â€¢itoa()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bitoa","filterText":"itoa","insertText":"itoa()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"itoa()"}},{"label":"â€¢IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses IPv6 update:  \nIPAddress is now a decorator class for lwIP's ip_addr_t fully backward compatible with legacy IPv4-only Arduino's with unchanged footprint when IPv6 is disabled"},"sortText":"404e324fIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"IPAddress"}},{"label":" init()","kind":3,"detail":"void","sortText":"405d8e68init","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","sortText":"405d8e68initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"initVariant()"}},{"label":"â€¢ino_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"405d8e68ino_t","filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"ino_t"}},{"label":"â€¢itimerspec","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"405d8e68itimerspec","filterText":"itimerspec","insertText":"itimerspec","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"itimerspec"}},{"label":"â€¢InterruptInfo","kind":22,"documentation":{"kind":"markdown","value":"From `\"FunctionalInterrupt.h\"`  \nStructures for communication"},"sortText":"4068a03fInterruptInfo","filterText":"InterruptInfo","insertText":"InterruptInfo","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"InterruptInfo"}},{"label":"â€¢i2s_begin()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_begin","filterText":"i2s_begin","insertText":"i2s_begin()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_begin()"}},{"label":"â€¢i2s_end()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_end","filterText":"i2s_end","insertText":"i2s_end()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_end()"}},{"label":"â€¢i2s_is_full()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_is_full","filterText":"i2s_is_full","insertText":"i2s_is_full()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_is_full()"}},{"label":"â€¢i2s_rx_is_empty()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_rx_is_empty","filterText":"i2s_rx_is_empty","insertText":"i2s_rx_is_empty()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_rx_is_empty()"}},{"label":"â€¢i2s_rx_is_full()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_rx_is_full","filterText":"i2s_rx_is_full","insertText":"i2s_rx_is_full()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_rx_is_full()"}},{"label":"â€¢i2s_set_callback(void (*callback)())","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_set_callback","filterText":"i2s_set_callback","insertText":"i2s_set_callback(${1:void (*callback)()})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_set_callback(${1:void (*callback)()})"}},{"label":"â€¢i2s_set_rate(uint32_t rate)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_set_rate","filterText":"i2s_set_rate","insertText":"i2s_set_rate(${1:uint32_t rate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_set_rate(${1:uint32_t rate})"}},{"label":"â€¢i2s_write_buffer_nb(int16_t *frames, uint16_t frame_count)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"i2s.h\"`"},"sortText":"4068a03fi2s_write_buffer_nb","filterText":"i2s_write_buffer_nb","insertText":"i2s_write_buffer_nb(${1:int16_t *frames}, ${2:uint16_t frame_count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"i2s_write_buffer_nb(${1:int16_t *frames}, ${2:uint16_t frame_count})"}},{"label":"â€¢imaxdiv_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fimaxdiv_t","filterText":"imaxdiv_t","insertText":"imaxdiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"imaxdiv_t"}},{"label":"â€¢initPins()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"4068a03finitPins","filterText":"initPins","insertText":"initPins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"initPins()"}},{"label":"â€¢isAlpha(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an alphabetic character.  \nIt is equivalent to (isupper(c) || islower(c))."},"sortText":"4068a03fisAlpha","filterText":"isAlpha","insertText":"isAlpha(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isAlpha(${1:int c})"}},{"label":"â€¢isAlphaNumeric(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"4068a03fisAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"â€¢isAscii(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"4068a03fisAscii","filterText":"isAscii","insertText":"isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isAscii(${1:int c})"}},{"label":"â€¢isControl(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a control character."},"sortText":"4068a03fisControl","filterText":"isControl","insertText":"isControl(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isControl(${1:int c})"}},{"label":"â€¢isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"4068a03fisDigit","filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isDigit(${1:int c})"}},{"label":"â€¢isGraph(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character except space."},"sortText":"4068a03fisGraph","filterText":"isGraph","insertText":"isGraph(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isGraph(${1:int c})"}},{"label":"â€¢isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"4068a03fisHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"â€¢isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a lower-case character."},"sortText":"4068a03fisLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isLowerCase(${1:int c})"}},{"label":"â€¢isPrintable(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character including space."},"sortText":"4068a03fisPrintable","filterText":"isPrintable","insertText":"isPrintable(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isPrintable(${1:int c})"}},{"label":"â€¢isPunct(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"4068a03fisPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isPunct(${1:int c})"}},{"label":"â€¢isSpace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for white-space characters. For the avr-libc library,  \nthese are: space, formfeed ('\\\\f'), newline ('\\\\n'), carriage return ('\\\\r'), horizontal tab ('\\\\t'), and vertical tab ('\\\\v')."},"sortText":"4068a03fisSpace","filterText":"isSpace","insertText":"isSpace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isSpace(${1:int c})"}},{"label":"â€¢isUpperCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an uppercase letter."},"sortText":"4068a03fisUpperCase","filterText":"isUpperCase","insertText":"isUpperCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isUpperCase(${1:int c})"}},{"label":"â€¢isWhitespace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"4068a03fisWhitespace","filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isWhitespace(${1:int c})"}},{"label":"â€¢isascii()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4068a03fisascii","filterText":"isascii","insertText":"isascii()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isascii()"}},{"label":"â€¢isdigit()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4068a03fisdigit","filterText":"isdigit","insertText":"isdigit()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isdigit()"}},{"label":"â€¢isprint()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4068a03fisprint","filterText":"isprint","insertText":"isprint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isprint()"}},{"label":"â€¢isupper()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4068a03fisupper","filterText":"isupper","insertText":"isupper()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isupper()"}},{"label":" isinf","kind":18,"sortText":"406c52eaisinf","filterText":"isinf","insertText":"isinf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isinf"}},{"label":" isnan","kind":18,"sortText":"406c52eaisnan","filterText":"isnan","insertText":"isnan","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"isnan"}},{"label":"â€¢int_handler_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`  \ninterrupt related"},"sortText":"407f2f3bint_handler_t","filterText":"int_handler_t","insertText":"int_handler_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"int_handler_t"}},{"label":" ICACHE_FLASH","kind":1,"sortText":"40800000ICACHE_FLASH","filterText":"ICACHE_FLASH","insertText":"ICACHE_FLASH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"ICACHE_FLASH"}},{"label":"â€¢esp8266::InterruptLock","kind":7,"documentation":{"kind":"markdown","value":"From `\"interrupts.h\"`"},"sortText":"4083b5beInterruptLock","filterText":"InterruptLock","insertText":"esp8266::InterruptLock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"esp8266::InterruptLock"}},{"label":"â€¢conststr::isDecimal(const char c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"core_esp8266_version.h\"`"},"sortText":"4083b5beisDecimal","filterText":"isDecimal","insertText":"conststr::isDecimal(${1:const char c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"conststr::isDecimal(${1:const char c})"}},{"label":"â€¢conststr::isMinus(const char (\u0026arr)[N], unsigned int i)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"core_esp8266_version.h\"`"},"sortText":"4083b5beisMinus","filterText":"isMinus","insertText":"conststr::isMinus(${1:const char (\u0026arr)[N]}, ${2:unsigned int i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"conststr::isMinus(${1:const char (\u0026arr)[N]}, ${2:unsigned int i})"}},{"label":"â€¢spiffs_impl::isSpiffsFilenameValid(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"spiffs_api.h\"`"},"sortText":"4083b5beisSpiffsFilenameValid","filterText":"isSpiffsFilenameValid","insertText":"spiffs_impl::isSpiffsFilenameValid(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"spiffs_impl::isSpiffsFilenameValid(${1:const char *name})"}},{"label":"â€¢std::ilogb(long double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aailogb","filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::ilogb(${1:long double __x})"}},{"label":"â€¢std::isgreater(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisgreater","filterText":"isgreater","insertText":"std::isgreater($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isgreater($0)"}},{"label":"â€¢std::isgreaterequal(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisgreaterequal","filterText":"isgreaterequal","insertText":"std::isgreaterequal($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isgreaterequal($0)"}},{"label":"â€¢std::isinf(long double __x)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisinf","filterText":"isinf","insertText":"std::isinf(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isinf(${1:long double __x})"}},{"label":"â€¢std::isless(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisless","filterText":"isless","insertText":"std::isless($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isless($0)"}},{"label":"â€¢std::islessgreater(float __x, float __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaislessgreater","filterText":"islessgreater","insertText":"std::islessgreater(${1:float __x}, ${2:float __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::islessgreater(${1:float __x}, ${2:float __y})"}},{"label":"â€¢std::isnan(long double __x)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisnan","filterText":"isnan","insertText":"std::isnan(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isnan(${1:long double __x})"}},{"label":"â€¢std::isnormal(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisnormal","filterText":"isnormal","insertText":"std::isnormal($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isnormal($0)"}},{"label":"â€¢std::ilogbl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bilogbl","filterText":"ilogbl","insertText":"std::ilogbl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::ilogbl"}},{"label":"â€¢std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"sortText":"40a94eb8is_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"sortText":"40a94eb8is_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::istreambuf_iterator\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8istreambuf_iterator","filterText":"istreambuf_iterator","insertText":"std::istreambuf_iterator\u003c${1:typename _CharT}, ${2:typename _Traits}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::istreambuf_iterator\u003c${1:typename _CharT}, ${2:typename _Traits}\u003e"}},{"label":"â€¢std::iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Swaps the contents of two iterators.  \n@ingroup mutating_algorithms  \n@param \\_\\_a An iterator.  \n@param \\_\\_b Another iterator.  \n@return Nothing.  \nThis function swaps the values pointed to by two iterators, not the iterators themselves."},"sortText":"40a94eb8iter_swap","filterText":"iter_swap","insertText":"std::iter_swap(${1:_ForwardIterator1 __a}, ${2:_ForwardIterator2 __b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::iter_swap(${1:_ForwardIterator1 __a}, ${2:_ForwardIterator2 __b})"}},{"label":"â€¢IPADDR_TYPE_ANY","kind":20,"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv4+IPv6 (\"dual-stack\")"},"sortText":"40add229IPADDR_TYPE_ANY","filterText":"IPADDR_TYPE_ANY","insertText":"IPADDR_TYPE_ANY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"IPADDR_TYPE_ANY"}},{"label":"â€¢IPADDR_TYPE_V6","kind":20,"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv6"},"sortText":"40add229IPADDR_TYPE_V6","filterText":"IPADDR_TYPE_V6","insertText":"IPADDR_TYPE_V6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"IPADDR_TYPE_V6"}},{"label":"â€¢ip4_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"arch/cc.h\"`  \n//////////////////////////// / PROVIDED TO USER"},"sortText":"40add229ip4_addr_t","filterText":"ip4_addr_t","insertText":"ip4_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"ip4_addr_t"}},{"label":"â€¢ip4addr_ntoa(const ip4_addr_t *addr)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`  \nreturns ptr to static buffer; not reentrant!"},"sortText":"40add229ip4addr_ntoa","filterText":"ip4addr_ntoa","insertText":"ip4addr_ntoa(${1:const ip4_addr_t *addr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"ip4addr_ntoa(${1:const ip4_addr_t *addr})"}},{"label":"â€¢ip4addr_ntoa_r(const ip4_addr_t *addr, char *buf, int buflen)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"sortText":"40add229ip4addr_ntoa_r","filterText":"ip4addr_ntoa_r","insertText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})"}},{"label":"â€¢std::ifstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c char input file streams."},"sortText":"40b198efifstream","filterText":"ifstream","insertText":"std::ifstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::ifstream"}},{"label":"â€¢std::ignore","kind":6,"detail":"const _Swallow_assign","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"40b198efignore","filterText":"ignore","insertText":"std::ignore","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::ignore"}},{"label":"â€¢std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"40b198efis_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"â€¢std::is_class\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_class"},"sortText":"40b198efis_class","filterText":"is_class","insertText":"std::is_class\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_class\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"40b198efis_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::is_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_copy_assignable"},"sortText":"40b198efis_copy_assignable","filterText":"is_copy_assignable","insertText":"std::is_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_enum"},"sortText":"40b198efis_enum","filterText":"is_enum","insertText":"std::is_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_enum\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"40b198efis_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_member_function_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_function_pointer"},"sortText":"40b198efis_member_function_pointer","filterText":"is_member_function_pointer","insertText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_nothrow_copy_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_constructible"},"sortText":"40b198efis_nothrow_copy_constructible","filterText":"is_nothrow_copy_constructible","insertText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_nothrow_destructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_destructible"},"sortText":"40b198efis_nothrow_destructible","filterText":"is_nothrow_destructible","insertText":"std::is_nothrow_destructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_nothrow_destructible\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"40b198efis_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"40b198efis_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_rvalue_reference\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_rvalue_reference"},"sortText":"40b198efis_rvalue_reference","filterText":"is_rvalue_reference","insertText":"std::is_rvalue_reference\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_rvalue_reference\u003c${1:typename}\u003e"}},{"label":"â€¢std::is_signed\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_signed"},"sortText":"40b198efis_signed","filterText":"is_signed","insertText":"std::is_signed\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_signed\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_unsigned\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_unsigned"},"sortText":"40b198efis_unsigned","filterText":"is_unsigned","insertText":"std::is_unsigned\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_unsigned\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::istream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \nBase class for @c char input streams."},"sortText":"40b198efistream","filterText":"istream","insertText":"std::istream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::istream"}},{"label":"â€¢std::includes(_IIter1, _IIter1, _IIter2, _IIter2)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nfor_each generate generate_n"},"sortText":"40b86274includes","filterText":"includes","insertText":"std::includes(${1:_IIter1}, ${2:_IIter1}, ${3:_IIter2}, ${4:_IIter2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::includes(${1:_IIter1}, ${2:_IIter1}, ${3:_IIter2}, ${4:_IIter2})"}},{"label":"â€¢std::independent_bits_engine\u003ctypename _RandomNumberEngine, size_t __w, typename _UIntType\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \nProduces random numbers by combining random numbers from some base engine to produce random numbers with a specifies number of bits @p \\_\\_w."},"sortText":"40b86274independent_bits_engine","filterText":"independent_bits_engine","insertText":"std::independent_bits_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __w}, ${3:typename _UIntType}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::independent_bits_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __w}, ${3:typename _UIntType}\u003e"}},{"label":"â€¢std::input_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@defgroup iterator_tags Iterator Tags These are empty types, used to distinguish different iterators. The distinction is not made by what they contain, but simply by what they are. Different underlying algorithms can then be used based on the different operations supported by different iterator types.  \n@{ Marking input iterators."},"sortText":"40b86274input_iterator_tag","filterText":"input_iterator_tag","insertText":"std::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::input_iterator_tag"}},{"label":"â€¢std::insert_iterator\u003ctypename _Container\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief Turns assignment into insertion.  \nThese are output iterators, constructed from a container-of-T.  \nAssigning a T to the iterator inserts it in the container at the %iterator's position, rather than overwriting the value at that position.  \n(Sequences will actually insert a @e copy of the value before the %iterator's position.)  \nTip: Using the inserter function to create these iterators can save typing."},"sortText":"40b86274insert_iterator","filterText":"insert_iterator","insertText":"std::insert_iterator\u003c${1:typename _Container}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::insert_iterator\u003c${1:typename _Container}\u003e"}},{"label":"â€¢std::is_heap(_RAIter, _RAIter)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40b86274is_heap","filterText":"is_heap","insertText":"std::is_heap(${1:_RAIter}, ${2:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_heap(${1:_RAIter}, ${2:_RAIter})"}},{"label":"â€¢std::is_heap_until(_RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40b86274is_heap_until","filterText":"is_heap_until","insertText":"std::is_heap_until(${1:_RAIter}, ${2:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_heap_until(${1:_RAIter}, ${2:_RAIter})"}},{"label":"â€¢std::is_permutation(_FIter1, _FIter1, _FIter2)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40b86274is_permutation","filterText":"is_permutation","insertText":"std::is_permutation(${1:_FIter1}, ${2:_FIter1}, ${3:_FIter2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_permutation(${1:_FIter1}, ${2:_FIter1}, ${3:_FIter2})"}},{"label":"â€¢std::is_sorted(_FIter, _FIter, _Compare)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40b86274is_sorted","filterText":"is_sorted","insertText":"std::is_sorted(${1:_FIter}, ${2:_FIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_sorted(${1:_FIter}, ${2:_FIter}, ${3:_Compare})"}},{"label":"â€¢std::is_sorted_until(_FIter, _FIter)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40b86274is_sorted_until","filterText":"is_sorted_until","insertText":"std::is_sorted_until(${1:_FIter}, ${2:_FIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::is_sorted_until(${1:_FIter}, ${2:_FIter})"}},{"label":"â€¢std::ispunct(_CharT, const locale \u0026)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b86274ispunct","filterText":"ispunct","insertText":"std::ispunct(${1:_CharT}, ${2:const locale \u0026})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::ispunct(${1:_CharT}, ${2:const locale \u0026})"}},{"label":"â€¢std::isspace(_CharT, const locale \u0026)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`  \n22.1.3 Convenience interfaces"},"sortText":"40b86274isspace","filterText":"isspace","insertText":"std::isspace(${1:_CharT}, ${2:const locale \u0026})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":5}},"newText":"std::isspace(${1:_CharT}, ${2:const locale \u0026})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"jsonrpc":"2.0","id":37,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'i'"}]},"jsonrpc":"2.0"}Content-Length: 5254

{"id":37,"result":{"isIncomplete":false,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"3e800000if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":"â€¢int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"406fa427int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"int_fast16_t"}},{"label":"â€¢int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"406fa427int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"int_fast32_t"}},{"label":"â€¢int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"406fa427int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"int_fast64_t"}},{"label":"â€¢int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"406fa427int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"int_fast8_t"}},{"label":"â€¢std::ifstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c char input file streams."},"sortText":"40b198efifstream","filterText":"ifstream","insertText":"std::ifstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::ifstream"}},{"label":"â€¢experimental::initFlashQuirks()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"flash_quirks.h\"`"},"sortText":"40c2c84finitFlashQuirks","filterText":"initFlashQuirks","insertText":"experimental::initFlashQuirks()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"experimental::initFlashQuirks()"}},{"label":"â€¢std::is_floating_point\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_floating_point"},"sortText":"40e532b3is_floating_point","filterText":"is_floating_point","insertText":"std::is_floating_point\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::is_floating_point\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::is_function\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_function"},"sortText":"40e532b3is_function","filterText":"is_function","insertText":"std::is_function\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::is_function\u003c${1:typename}\u003e"}},{"label":"â€¢std::is_fundamental\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_fundamental"},"sortText":"40e532b3is_fundamental","filterText":"is_fundamental","insertText":"std::is_fundamental\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::is_fundamental\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::int_fast16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40f3455dint_fast16_t","filterText":"int_fast16_t","insertText":"std::int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::int_fast16_t"}},{"label":"â€¢std::int_fast32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40f3455dint_fast32_t","filterText":"int_fast32_t","insertText":"std::int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::int_fast32_t"}},{"label":"â€¢std::int_fast64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40f3455dint_fast64_t","filterText":"int_fast64_t","insertText":"std::int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::int_fast64_t"}},{"label":"â€¢std::int_fast8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40f3455dint_fast8_t","filterText":"int_fast8_t","insertText":"std::int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":6}},"newText":"std::int_fast8_t"}}]},"jsonrpc":"2.0"}Content-Length: 358

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":16}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'if'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":189},"contentChanges":[{"range":{"start":{"line":17,"character":6},"end":{"line":17,"character":6}},"rangeLength":0,"text":"()"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":38,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":7},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":8}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":38,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 456

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":8}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":189}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":190},"contentChanges":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":7}},"rangeLength":0,"text":"s"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":40,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":8},"context":{"triggerKind":1}}}
>>>
Content-Length: 49501

{"id":40,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3dba0000status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"status"}},{"label":" size_t","kind":8,"sortText":"3ec4a02bsize_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"size_t"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"static"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"struct"}},{"label":" setup()","kind":3,"detail":"void","sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"setup()"}},{"label":"â€¢schedule_function(const std::function\u003cvoid ()\u003e \u0026fn)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"Schedule.h\"`  \nscheduled functions called once:  \n\\* internal queue is FIFO.  \n\\* Add the given lambda to a fifo list of lambdas, which is run when  \n`loop` function returns.  \n\\* Use lambdas to pass arguments to a function, or call a class/static member function.  \n\\* Please ensure variables or instances used from inside lambda will exist when lambda is later called.  \n\\* There is no mechanism for cancelling scheduled functions.  \n\\* `yield` can be called from inside lambdas.  \n\\* Returns false if the number of scheduled functions exceeds SCHEDULED_FN_MAX_COUNT (or memory shortage).  \n\\* Run the lambda only once next time.  \n\\* A scheduled function can schedule a function."},"sortText":"3f42c84eschedule_function","filterText":"schedule_function","insertText":"schedule_function(${1:const std::function\u003cvoid ()\u003e \u0026fn})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"schedule_function(${1:const std::function\u003cvoid ()\u003e \u0026fn})"}},{"label":"â€¢schedule_recurrent_function_us(const std::function\u003cbool ()\u003e \u0026fn, uint32_t repeat_us, const std::function\u003cbool ()\u003e \u0026alarm)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"Schedule.h\"`  \nrecurrent scheduled function:  \n\\* Internal queue is a FIFO.  \n\\* Run the lambda periodically about every \\\u003crepeat_us\u003e microseconds until it returns false.  \n\\* Note that it may be more than \\\u003crepeat_us\u003e microseconds between calls if  \n`yield` is not called frequently, and therefore should not be used for timing critical operations.  \n\\* Please ensure variables or instances used from inside lambda will exist when lambda is later called.  \n\\* There is no mechanism for externally cancelling recurrent scheduled functions. However a user function returning false will cancel itself.  \n\\* Long running operations or yield() or delay() are not allowed in the recurrent function.  \n\\* If alarm is used, anytime during scheduling when it returns true,  \nany remaining delay from repeat_us is disregarded, and fn is executed."},"sortText":"3f42c84eschedule_recurrent_function_us","filterText":"schedule_recurrent_function_us","insertText":"schedule_recurrent_function_us(${1:const std::function\u003cbool ()\u003e \u0026fn}, ${2:uint32_t repeat_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"schedule_recurrent_function_us(${1:const std::function\u003cbool ()\u003e \u0026fn}, ${2:uint32_t repeat_us})"}},{"label":"â€¢sntp_set_timezone_in_seconds(int32_t timezone)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"3f42c84esntp_set_timezone_in_seconds","filterText":"sntp_set_timezone_in_seconds","insertText":"sntp_set_timezone_in_seconds(${1:int32_t timezone})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"sntp_set_timezone_in_seconds(${1:int32_t timezone})"}},{"label":"â€¢std::signbit(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"3f6bc26asignbit","filterText":"signbit","insertText":"std::signbit($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"std::signbit($0)"}},{"label":"â€¢sntp_set_timezone(sint8 timezone)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"sntp.h\"`  \nSNTP set time_zone (default GMT + 8)"},"sortText":"3f6e74c3sntp_set_timezone","filterText":"sntp_set_timezone","insertText":"sntp_set_timezone(${1:sint8 timezone})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"sntp_set_timezone(${1:sint8 timezone})"}},{"label":"â€¢spi_flash_erase_protect_disable()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"spi_flash.h\"`"},"sortText":"3f6e74c3spi_flash_erase_protect_disable","filterText":"spi_flash_erase_protect_disable","insertText":"spi_flash_erase_protect_disable()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spi_flash_erase_protect_disable()"}},{"label":"â€¢spi_flash_erase_protect_enable()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"spi_flash.h\"`"},"sortText":"3f6e74c3spi_flash_erase_protect_enable","filterText":"spi_flash_erase_protect_enable","insertText":"spi_flash_erase_protect_enable()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spi_flash_erase_protect_enable()"}},{"label":"â€¢system_deep_sleep(uint64 time_in_us)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_deep_sleep","filterText":"system_deep_sleep","insertText":"system_deep_sleep(${1:uint64 time_in_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_deep_sleep(${1:uint64 time_in_us})"}},{"label":"â€¢system_deep_sleep_instant(uint64 time_in_us)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_deep_sleep_instant","filterText":"system_deep_sleep_instant","insertText":"system_deep_sleep_instant(${1:uint64 time_in_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_deep_sleep_instant(${1:uint64 time_in_us})"}},{"label":"â€¢system_deep_sleep_set_option(uint8 option)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_deep_sleep_set_option","filterText":"system_deep_sleep_set_option","insertText":"system_deep_sleep_set_option(${1:uint8 option})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_deep_sleep_set_option(${1:uint8 option})"}},{"label":"â€¢system_os_post(uint8 prio, ETSSignal sig, ETSParam par)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_os_post","filterText":"system_os_post","insertText":"system_os_post(${1:uint8 prio}, ${2:ETSSignal sig}, ${3:ETSParam par})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_os_post(${1:uint8 prio}, ${2:ETSSignal sig}, ${3:ETSParam par})"}},{"label":"â€¢system_os_task(ETSTask task, uint8 prio, ETSEvent *queue, uint8 qlen)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_os_task","filterText":"system_os_task","insertText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})"}},{"label":"â€¢system_param_load(uint16 start_sec, uint16 offset, void *param, uint16 len)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_param_load","filterText":"system_param_load","insertText":"system_param_load(${1:uint16 start_sec}, ${2:uint16 offset}, ${3:void *param}, ${4:uint16 len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_param_load(${1:uint16 start_sec}, ${2:uint16 offset}, ${3:void *param}, ${4:uint16 len})"}},{"label":"â€¢system_param_save_with_protect(uint16 start_sec, void *param, uint16 len)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_param_save_with_protect","filterText":"system_param_save_with_protect","insertText":"system_param_save_with_protect(${1:uint16 start_sec}, ${2:void *param}, ${3:uint16 len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_param_save_with_protect(${1:uint16 start_sec}, ${2:void *param}, ${3:uint16 len})"}},{"label":"â€¢system_restart_enhance(uint8 bin_type, uint32 bin_addr)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_restart_enhance","filterText":"system_restart_enhance","insertText":"system_restart_enhance(${1:uint8 bin_type}, ${2:uint32 bin_addr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_restart_enhance(${1:uint8 bin_type}, ${2:uint32 bin_addr})"}},{"label":"â€¢system_rtc_mem_read(uint8 src_addr, void *des_addr, uint16 load_size)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_rtc_mem_read","filterText":"system_rtc_mem_read","insertText":"system_rtc_mem_read(${1:uint8 src_addr}, ${2:void *des_addr}, ${3:uint16 load_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_rtc_mem_read(${1:uint8 src_addr}, ${2:void *des_addr}, ${3:uint16 load_size})"}},{"label":"â€¢system_rtc_mem_write(uint8 des_addr, const void *src_addr, uint16 save_size)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_rtc_mem_write","filterText":"system_rtc_mem_write","insertText":"system_rtc_mem_write(${1:uint8 des_addr}, ${2:const void *src_addr}, ${3:uint16 save_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_rtc_mem_write(${1:uint8 des_addr}, ${2:const void *src_addr}, ${3:uint16 save_size})"}},{"label":"â€¢system_update_cpu_freq(uint8 freq)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3f6e74c3system_update_cpu_freq","filterText":"system_update_cpu_freq","insertText":"system_update_cpu_freq(${1:uint8 freq})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"system_update_cpu_freq(${1:uint8 freq})"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"String"}},{"label":"â€¢spiffs_obj_id","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nObject id type - most significant bit is reserved for index flag. Make sure the size of this type can hold the highest object id on a full system,  \ni.e. 2 + (spiffs_file_system_size / (2\\*log_page_size))\\*2"},"sortText":"401c2e89spiffs_obj_id","filterText":"spiffs_obj_id","insertText":"spiffs_obj_id","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_obj_id"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"4024f3b4s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"s32_t"}},{"label":"â€¢spiffs_page_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nPage index type. Make sure the size of this type can hold the highest page number of all pages - i.e. spiffs_file_system_size / log_page_size"},"sortText":"4029ce2dspiffs_page_ix","filterText":"spiffs_page_ix","insertText":"spiffs_page_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_ix"}},{"label":"â€¢spiffs","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4034a67dspiffs","filterText":"spiffs","insertText":"spiffs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs"}},{"label":"â€¢spiffs_page_header","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \npage header, part of each page except object lookup pages NB: this is always aligned when the data page is an object index,  \nas in this case struct spiffs_page_object_ix is used"},"sortText":"4034a67dspiffs_page_header","filterText":"spiffs_page_header","insertText":"spiffs_page_header","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_header"}},{"label":"â€¢spiffs_page_object_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nobject index page header"},"sortText":"403db87aspiffs_page_object_ix","filterText":"spiffs_page_object_ix","insertText":"spiffs_page_object_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_object_ix"}},{"label":"â€¢spiffs_page_object_ix_header","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nobject index header page header"},"sortText":"403ebc36spiffs_page_object_ix_header","filterText":"spiffs_page_object_ix_header","insertText":"spiffs_page_object_ix_header","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_object_ix_header"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"StringSumHelper"}},{"label":"â€¢spiffs_fd","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nspiffs nucleus file descriptor"},"sortText":"4044892aspiffs_fd","filterText":"spiffs_fd","insertText":"spiffs_fd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_fd"}},{"label":"â€¢spiffs_phys_rd(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4048cb59spiffs_phys_rd","filterText":"spiffs_phys_rd","insertText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})"}},{"label":"â€¢spiffs_block_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nBlock index type. Make sure the size of this type can hold the highest number of all blocks - i.e. spiffs_file_system_size / log_block_size"},"sortText":"404950c0spiffs_block_ix","filterText":"spiffs_block_ix","insertText":"spiffs_block_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_block_ix"}},{"label":"â€¢spiffs_span_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nObject span index type. Make sure the size of this type can hold the largest possible span index on the system - i.e. (spiffs_file_system_size / log_page_size) - 1"},"sortText":"404d4d28spiffs_span_ix","filterText":"spiffs_span_ix","insertText":"spiffs_span_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_span_ix"}},{"label":"â€¢spiffs_file","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file descriptor index type. must be signed"},"sortText":"404ded1cspiffs_file","filterText":"spiffs_file","insertText":"spiffs_file","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_file"}},{"label":"â€¢spiffs_cache_page","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \ncache page struct"},"sortText":"405393afspiffs_cache_page","filterText":"spiffs_cache_page","insertText":"spiffs_cache_page","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_cache_page"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"Stream"}},{"label":"â€¢spiffs_phys_wr(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *src)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4056f64bspiffs_phys_wr","filterText":"spiffs_phys_wr","insertText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})"}},{"label":"â€¢spiffs_cache","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \ncache struct"},"sortText":"4057e272spiffs_cache","filterText":"spiffs_cache","insertText":"spiffs_cache","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_cache"}},{"label":"â€¢spiffs_page_delete(spiffs *fs, spiffs_page_ix pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405bf433spiffs_page_delete","filterText":"spiffs_page_delete","insertText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})"}},{"label":" secureRandom(long, long)","kind":3,"detail":"long","sortText":"405d8e68secureRandom","filterText":"secureRandom","insertText":"secureRandom(${1:long}, ${2:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"secureRandom(${1:long}, ${2:long})"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"405d8e68setTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"setTZ(${1:const char *tz})"}},{"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","kind":3,"detail":"uint8_t","sortText":"405d8e68shiftIn","filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})"}},{"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","kind":3,"detail":"void","sortText":"405d8e68shiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})"}},{"label":"â€¢spiffs_fd_return(spiffs *fs, spiffs_file f)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405f8100spiffs_fd_return","filterText":"spiffs_fd_return","insertText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})"}},{"label":"â€¢spiffs_obj_lu_find_id_and_span(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405f8100spiffs_obj_lu_find_id_and_span","filterText":"spiffs_obj_lu_find_id_and_span","insertText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"stack_thunk_ptr"}},{"label":"â€¢spiffs_cb_object_event(spiffs *fs, spiffs_page_object_ix *objix, int ev, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix new_pix, u32_t new_size)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4066d1c6spiffs_cb_object_event","filterText":"spiffs_cb_object_event","insertText":"spiffs_cb_object_event(${1:spiffs *fs}, ${2:spiffs_page_object_ix *objix}, ${3:int ev}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_span_ix spix}, ${6:spiffs_page_ix new_pix}, ${7:u32_t new_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_cb_object_event(${1:spiffs *fs}, ${2:spiffs_page_object_ix *objix}, ${3:int ev}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_span_ix spix}, ${6:spiffs_page_ix new_pix}, ${7:u32_t new_size})"}},{"label":"â€¢SPIFFS_CHECK_LOOKUP","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4068934fSPIFFS_CHECK_LOOKUP","filterText":"SPIFFS_CHECK_LOOKUP","insertText":"SPIFFS_CHECK_LOOKUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_LOOKUP"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"StreamString"}},{"label":"â€¢sntp_real_timestamp","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fsntp_real_timestamp","filterText":"sntp_real_timestamp","insertText":"sntp_real_timestamp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"sntp_real_timestamp"}},{"label":"â€¢spiffs_request_end()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4068a03fspiffs_request_end","filterText":"spiffs_request_end","insertText":"spiffs_request_end()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_request_end()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"stack_thunk_top"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":"â€¢swprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"4068a03fswprintf","filterText":"swprintf","insertText":"swprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"swprintf()"}},{"label":"â€¢swscanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"4068a03fswscanf","filterText":"swscanf","insertText":"swscanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"swscanf()"}},{"label":"â€¢SPIFFS_CHECK_PAGE","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"406a7657SPIFFS_CHECK_PAGE","filterText":"SPIFFS_CHECK_PAGE","insertText":"SPIFFS_CHECK_PAGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_PAGE"}},{"label":"â€¢spiffs_object_update_index_hdr(spiffs *fs, spiffs_fd *fd, spiffs_obj_id obj_id, spiffs_page_ix objix_hdr_pix, u8_t *new_objix_hdr_data, const u8_t *name, const u8_t *meta, u32_t size, spiffs_page_ix *new_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406a7657spiffs_object_update_index_hdr","filterText":"spiffs_object_update_index_hdr","insertText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})"}},{"label":"â€¢spiffs_fd_get(spiffs *fs, spiffs_file f, spiffs_fd **fd)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406c803cspiffs_fd_get","filterText":"spiffs_fd_get","insertText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})"}},{"label":"â€¢spiffs_obj_lu_find_entry_visitor(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, u8_t flags, spiffs_obj_id obj_id, spiffs_visitor_f v, const void *user_const_p, void *user_var_p, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406c803cspiffs_obj_lu_find_entry_visitor","filterText":"spiffs_obj_lu_find_entry_visitor","insertText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})"}},{"label":"â€¢spiffs_page_allocate_data(spiffs *fs, spiffs_obj_id obj_id, spiffs_page_header *ph, u8_t *data, u32_t len, u32_t page_offs, u8_t finalize, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"407125b0spiffs_page_allocate_data","filterText":"spiffs_page_allocate_data","insertText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})"}},{"label":"â€¢SCL","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066SCL","filterText":"SCL","insertText":"SCL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SCL"}},{"label":"â€¢SDA","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066SDA","filterText":"SDA","insertText":"SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SDA"}},{"label":"â€¢SPIFFS_CHECK_DELETE_BAD_FILE","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_DELETE_BAD_FILE","filterText":"SPIFFS_CHECK_DELETE_BAD_FILE","insertText":"SPIFFS_CHECK_DELETE_BAD_FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_DELETE_BAD_FILE"}},{"label":"â€¢SPIFFS_CHECK_FIX_INDEX","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_FIX_INDEX","filterText":"SPIFFS_CHECK_FIX_INDEX","insertText":"SPIFFS_CHECK_FIX_INDEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_FIX_INDEX"}},{"label":"â€¢SPIFFS_CHECK_FIX_LOOKUP","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_FIX_LOOKUP","filterText":"SPIFFS_CHECK_FIX_LOOKUP","insertText":"SPIFFS_CHECK_FIX_LOOKUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_FIX_LOOKUP"}},{"label":"â€¢SPIFFS_CHECK_INDEX","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_INDEX","filterText":"SPIFFS_CHECK_INDEX","insertText":"SPIFFS_CHECK_INDEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_INDEX"}},{"label":"â€¢SPIFFS_CHECK_PROGRESS","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_PROGRESS","filterText":"SPIFFS_CHECK_PROGRESS","insertText":"SPIFFS_CHECK_PROGRESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_CHECK_PROGRESS"}},{"label":"â€¢SPIFFS_open(spiffs *fs, const char *path, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"spiffs_file","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nOpens/creates a file.  \n@param fs the file system struct  \n@param path the path of the new file  \n@param flags the flags for the open command, can be combinations of SPIFFS_O_APPEND, SPIFFS_O_TRUNC, SPIFFS_O_CREAT, SPIFFS_O_RDONLY,  \nSPIFFS_O_WRONLY, SPIFFS_O_RDWR, SPIFFS_O_DIRECT, SPIFFS_O_EXCL  \n@param mode ignored, for posix compliance"},"sortText":"4071b066SPIFFS_open","filterText":"SPIFFS_open","insertText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})"}},{"label":"â€¢spiffs_DIR","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_DIR","filterText":"spiffs_DIR","insertText":"spiffs_DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_DIR"}},{"label":"â€¢spiffs_cache_fd_release(spiffs *fs, spiffs_cache_page *cp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_cache_fd_release","filterText":"spiffs_cache_fd_release","insertText":"spiffs_cache_fd_release(${1:spiffs *fs}, ${2:spiffs_cache_page *cp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_cache_fd_release(${1:spiffs *fs}, ${2:spiffs_cache_page *cp})"}},{"label":"â€¢spiffs_dirent","kind":22,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_dirent","filterText":"spiffs_dirent","insertText":"spiffs_dirent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_dirent"}},{"label":"â€¢spiffs_erase_block(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_erase_block","filterText":"spiffs_erase_block","insertText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢spiffs_fd_find_new(spiffs *fs, spiffs_fd **fd, const char *name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_fd_find_new","filterText":"spiffs_fd_find_new","insertText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})"}},{"label":"â€¢spiffs_flags","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file descriptor flags"},"sortText":"4071b066spiffs_flags","filterText":"spiffs_flags","insertText":"spiffs_flags","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_flags"}},{"label":"â€¢spiffs_gc_check(spiffs *fs, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_gc_check","filterText":"spiffs_gc_check","insertText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})"}},{"label":"â€¢spiffs_ix_map","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_ix_map","filterText":"spiffs_ix_map","insertText":"spiffs_ix_map","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_ix_map"}},{"label":"â€¢spiffs_mode","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file mode"},"sortText":"4071b066spiffs_mode","filterText":"spiffs_mode","insertText":"spiffs_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_mode"}},{"label":"â€¢spiffs_obj_lu_find_free(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_find_free","filterText":"spiffs_obj_lu_find_free","insertText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})"}},{"label":"â€¢spiffs_object_find_object_index_header_by_name(spiffs *fs, const u8_t *name, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_find_object_index_header_by_name","filterText":"spiffs_object_find_object_index_header_by_name","insertText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})"}},{"label":"â€¢spiffs_object_open_by_page(spiffs *fs, spiffs_page_ix pix, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_open_by_page","filterText":"spiffs_object_open_by_page","insertText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})"}},{"label":"â€¢spiffs_object_truncate(spiffs_fd *fd, u32_t new_len, u8_t remove_object)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_truncate","filterText":"spiffs_object_truncate","insertText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})"}},{"label":"â€¢spiffs_page_move(spiffs *fs, spiffs_file fh, u8_t *page_data, spiffs_obj_id obj_id, spiffs_page_header *page_hdr, spiffs_page_ix src_pix, spiffs_page_ix *dst_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_page_move","filterText":"spiffs_page_move","insertText":"spiffs_page_move(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u8_t *page_data}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_page_header *page_hdr}, ${6:spiffs_page_ix src_pix}, ${7:spiffs_page_ix *dst_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_page_move(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u8_t *page_data}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_page_header *page_hdr}, ${6:spiffs_page_ix src_pix}, ${7:spiffs_page_ix *dst_pix})"}},{"label":"â€¢spiffs_phys_cpy(spiffs *fs, spiffs_file fh, u32_t dst, u32_t src, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_phys_cpy","filterText":"spiffs_phys_cpy","insertText":"spiffs_phys_cpy(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t dst}, ${4:u32_t src}, ${5:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_phys_cpy(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t dst}, ${4:u32_t src}, ${5:u32_t len})"}},{"label":"â€¢spiffs_populate_ix_map(spiffs *fs, spiffs_fd *fd, u32_t vec_entry_start, u32_t vec_entry_end)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_populate_ix_map","filterText":"spiffs_populate_ix_map","insertText":"spiffs_populate_ix_map(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:u32_t vec_entry_start}, ${4:u32_t vec_entry_end})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_populate_ix_map(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:u32_t vec_entry_start}, ${4:u32_t vec_entry_end})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"4071b066spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"spiffs_stat"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"step_A"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"step_C"}},{"label":"â€¢experimental::crypto::SHA1","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-1 ####################"},"sortText":"4083b5beSHA1","filterText":"SHA1","insertText":"experimental::crypto::SHA1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"experimental::crypto::SHA1"}},{"label":"â€¢experimental::crypto::SHA224","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-224 ####################"},"sortText":"4083b5beSHA224","filterText":"SHA224","insertText":"experimental::crypto::SHA224","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":8}},"newText":"experimental::crypto::SHA224"}}]},"jsonrpc":"2.0"}Content-Length: 363

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":191},"contentChanges":[{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":41,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":9},"context":{"triggerKind":3}}}
>>>
Content-Length: 37963

{"id":41,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3dba0000status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"status"}},{"label":" size_t","kind":8,"sortText":"3ef37820size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"size_t"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"static"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"struct"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"String"}},{"label":"â€¢stpcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpcpy","filterText":"stpcpy","insertText":"stpcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stpcpy()"}},{"label":"â€¢stpncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpncpy","filterText":"stpncpy","insertText":"stpncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stpncpy()"}},{"label":"â€¢strcasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strcasecmp()"}},{"label":"â€¢strcat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strcat()"}},{"label":"â€¢strchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strchr()"}},{"label":"â€¢strcmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strcmp()"}},{"label":"â€¢strcoll()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strcoll()"}},{"label":"â€¢strcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strcpy()"}},{"label":"â€¢strcspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strcspn()"}},{"label":"â€¢strdup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strdup()"}},{"label":"â€¢strerror()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrerror","filterText":"strerror","insertText":"strerror()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strerror()"}},{"label":"â€¢strlcat()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strlcat()"}},{"label":"â€¢strlcpy()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strlcpy()"}},{"label":"â€¢strlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlen","filterText":"strlen","insertText":"strlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strlen()"}},{"label":"â€¢strlwr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strlwr()"}},{"label":"â€¢strncasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncasecmp()"}},{"label":"â€¢strncat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncat","filterText":"strncat","insertText":"strncat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncat()"}},{"label":"â€¢strncmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncmp()"}},{"label":"â€¢strncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncpy()"}},{"label":"â€¢strndup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrndup","filterText":"strndup","insertText":"strndup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strndup()"}},{"label":"â€¢strnlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strnlen()"}},{"label":"â€¢strpbrk()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strpbrk()"}},{"label":"â€¢strrchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strrchr()"}},{"label":"â€¢strsep()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsep","filterText":"strsep","insertText":"strsep()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strsep()"}},{"label":"â€¢strsignal()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsignal","filterText":"strsignal","insertText":"strsignal()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strsignal()"}},{"label":"â€¢strspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strspn()"}},{"label":"â€¢strstr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strstr()"}},{"label":"â€¢strtod()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtod()"}},{"label":"â€¢strtof()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtof","filterText":"strtof","insertText":"strtof()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtof()"}},{"label":"â€¢strtok()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok","filterText":"strtok","insertText":"strtok()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtok()"}},{"label":"â€¢strtok_r()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtok_r()"}},{"label":"â€¢strtol()","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtol()"}},{"label":"â€¢strtold(const char *, char **)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":"â€¢strtoll()","kind":3,"detail":"long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoll","filterText":"strtoll","insertText":"strtoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtoll()"}},{"label":"â€¢strtoul()","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtoul()"}},{"label":"â€¢strtoull()","kind":3,"detail":"unsigned long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoull","filterText":"strtoull","insertText":"strtoull()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtoull()"}},{"label":"â€¢strupr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strupr()"}},{"label":"â€¢strxfrm()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strxfrm()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"StringSumHelper"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"station_status_t"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"Stream"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"405bb6c8s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"s32_t"}},{"label":"â€¢strncasecmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncasecmp_P()"}},{"label":"â€¢strncat_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncat_P","filterText":"strncat_P","insertText":"strncat_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncat_P()"}},{"label":"â€¢strncmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncmp_P()"}},{"label":"â€¢strncpy_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strncpy_P()"}},{"label":"â€¢strnlen_P()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strnlen_P()"}},{"label":"â€¢strstr_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strstr_P","filterText":"strstr_P","insertText":"strstr_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strstr_P()"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"4062cd89STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"STATUS"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_ptr"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"StreamString"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stack_thunk_top"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"4068a03fstopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢strftime()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrftime","filterText":"strftime","insertText":"strftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strftime()"}},{"label":"â€¢strptime()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrptime","filterText":"strptime","insertText":"strptime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strptime()"}},{"label":"â€¢strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fstrtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fstrtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"stat()"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_A"}},{"label":"â€¢step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_B"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_C"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_a"}},{"label":"â€¢step_b","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_b","filterText":"step_b","insertText":"step_b","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_b"}},{"label":"â€¢step_c","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_c","filterText":"step_c","insertText":"step_c","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_c"}},{"label":"â€¢step_d","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_d","filterText":"step_d","insertText":"step_d","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"step_d"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"408c559bsetTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"setTZ(${1:const char *tz})"}},{"label":"â€¢ssize_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bssize_t","filterText":"ssize_t","insertText":"ssize_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"ssize_t"}},{"label":"â€¢suseconds_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bsuseconds_t","filterText":"suseconds_t","insertText":"suseconds_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"suseconds_t"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"station_info"}},{"label":"â€¢SERIAL_TX_ONLY","kind":20,"detail":"SerialMode","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"409cf05eSERIAL_TX_ONLY","filterText":"SERIAL_TX_ONLY","insertText":"SERIAL_TX_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"SERIAL_TX_ONLY"}},{"label":"â€¢std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"40b198efstreambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::streambuf"}},{"label":"â€¢std::stringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char memory buffers."},"sortText":"40b198efstringbuf","filterText":"stringbuf","insertText":"std::stringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::stringbuf"}},{"label":"â€¢std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"40b198efstringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::stringstream"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40b86274streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::streamoff"}},{"label":"â€¢std::streampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nClauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos as implementation defined types, but clause 27.2 requires that they must both be typedefs for fpos\\\u003cmbstate_t\u003e File position for char streams."},"sortText":"40b86274streampos","filterText":"streampos","insertText":"std::streampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":9}},"newText":"std::streampos"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":192},"contentChanges":[{"range":{"start":{"line":17,"character":9},"end":{"line":17,"character":9}},"rangeLength":0,"text":"a"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":42,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":10},"context":{"triggerKind":3}}}
>>>
Content-Length: 364

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}Content-Length: 48832

{"id":42,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3dba0000status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"status"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"static"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢system_os_task(ETSTask task, uint8 prio, ETSEvent *queue, uint8 qlen)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fa5af25system_os_task","filterText":"system_os_task","insertText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢wifi_wps_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fee74c3wifi_wps_start","filterText":"wifi_wps_start","insertText":"wifi_wps_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_wps_start()"}},{"label":"â€¢wifi_softap_dhcps_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"400d6d44wifi_softap_dhcps_start","filterText":"wifi_softap_dhcps_start","insertText":"wifi_softap_dhcps_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_softap_dhcps_start()"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"station_status_t"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"405794d9twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"twi_status()"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stack_thunk_top"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"406a49d6STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATUS"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"stat()"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4092d0aastep_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"step_A"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4092d0aastep_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"step_a"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"station_info"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢uart_start_detect_baudrate(int uart_nr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"uart.h\"`"},"sortText":"40cf659euart_start_detect_baudrate","filterText":"uart_start_detect_baudrate","insertText":"uart_start_detect_baudrate(${1:int uart_nr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"uart_start_detect_baudrate(${1:int uart_nr})"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"40d9f877SPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40d9f877print_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40d9f877spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40d9f877ummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"ummStats"}},{"label":"â€¢cont_repaint_stack(cont_t *cont)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"cont.h\"`  \nRepaint the stack from the current SP to the end, to allow individual routines' stack usages to be calculated by re-painting, checking current free, running the routine, then checking the max free"},"sortText":"40e8a03fcont_repaint_stack","filterText":"cont_repaint_stack","insertText":"cont_repaint_stack(${1:cont_t *cont})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"cont_repaint_stack(${1:cont_t *cont})"}},{"label":"â€¢Event_StaMode_AuthMode_Change_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_AuthMode_Change_t","filterText":"Event_StaMode_AuthMode_Change_t","insertText":"Event_StaMode_AuthMode_Change_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"Event_StaMode_AuthMode_Change_t"}},{"label":"â€¢Event_StaMode_Connected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Connected_t","filterText":"Event_StaMode_Connected_t","insertText":"Event_StaMode_Connected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"Event_StaMode_Connected_t"}},{"label":"â€¢Event_StaMode_Disconnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Disconnected_t","filterText":"Event_StaMode_Disconnected_t","insertText":"Event_StaMode_Disconnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"Event_StaMode_Disconnected_t"}},{"label":"â€¢Event_StaMode_Got_IP_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Got_IP_t","filterText":"Event_StaMode_Got_IP_t","insertText":"Event_StaMode_Got_IP_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"Event_StaMode_Got_IP_t"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":" sntp_startup_delay_MS_rfc_not_less_than_60000()","kind":3,"detail":"uint32_t","sortText":"4108df65sntp_startup_delay_MS_rfc_not_less_than_60000","filterText":"sntp_startup_delay_MS_rfc_not_less_than_60000","insertText":"sntp_startup_delay_MS_rfc_not_less_than_60000()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"sntp_startup_delay_MS_rfc_not_less_than_60000()"}},{"label":"â€¢std::is_standard_layout\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_standard_layout"},"sortText":"410f326bis_standard_layout","filterText":"is_standard_layout","insertText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"411c96d9br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"br_eax_state"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢esp2glue_dhcp_start(int netif_idx)","kind":3,"detail":"err_glue_t","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcp_start","filterText":"esp2glue_dhcp_start","insertText":"esp2glue_dhcp_start(${1:int netif_idx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"esp2glue_dhcp_start(${1:int netif_idx})"}},{"label":"â€¢esp2glue_dhcps_start(struct ip_info *info)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcps_start","filterText":"esp2glue_dhcps_start","insertText":"esp2glue_dhcps_start(${1:struct ip_info *info})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"esp2glue_dhcps_start(${1:struct ip_info *info})"}},{"label":"â€¢ETSTask","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"42543ef9ETSTask","filterText":"ETSTask","insertText":"ETSTask","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"ETSTask"}},{"label":"â€¢std::__stable_partition_adaptive(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pointer __buffer, _Distance __buffer_size)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_first != \\_\\_last and !\\_\\_pred(\\*\\_\\_first) and \\_\\_len == distance(\\_\\_first, \\_\\_last).  \n!\\_\\_pred(\\*\\_\\_first) allows us to guarantee that we don't move-assign an element onto itself."},"sortText":"42b79ecd__stable_partition_adaptive","filterText":"__stable_partition_adaptive","insertText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})"}},{"label":"â€¢std::__stable_sort_adaptive(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"42b79ecd__stable_sort_adaptive","filterText":"__stable_sort_adaptive","insertText":"std::__stable_sort_adaptive($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__stable_sort_adaptive($0)"}},{"label":"â€¢std::__inplace_stable_partition(_ForwardIterator __first, _Predicate __pred, _Distance __len)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_len != 0 and !\\_\\_pred(\\*\\_\\_first),  \nsame as \\_\\_stable_partition_adaptive."},"sortText":"42d43ef9__inplace_stable_partition","filterText":"__inplace_stable_partition","insertText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})"}},{"label":"â€¢std::__inplace_stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function for the stable sorting routines."},"sortText":"42d43ef9__inplace_stable_sort","filterText":"__inplace_stable_sort","insertText":"std::__inplace_stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__inplace_stable_sort($0)"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42dae0be__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":10}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}}]},"jsonrpc":"2.0"}Content-Length: 878

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'sta'; did you mean 'std'? (fix available)\n\nc:\\users\\vantr\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506\\bin\\..\\lib\\gcc\\xtensa-lx106-elf\\4.8.2\\..\\..\\..\\..\\xtensa-lx106-elf\\include\\c++\\4.8.2\\bits\\stl_algo.h:71:11:\nnote: 'std' declared here"},{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":10}},"severity":1,"code":"unexpected_namespace","source":"clang","message":"Unexpected namespace name 'std': expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":193},"contentChanges":[{"range":{"start":{"line":17,"character":10},"end":{"line":17,"character":10}},"rangeLength":0,"text":"t"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":43,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":11},"context":{"triggerKind":3}}}
>>>
Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'stat' (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 45516

{"id":43,"result":{"isIncomplete":false,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3dba0000status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"status"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"static"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stat()"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stat"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"403981b7twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"twi_status()"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"station_status_t"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"406e07feSTATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATUS"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4078c848stack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"stack_thunk_top"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"station_info"}},{"label":"â€¢wps_cb_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40a5af23wps_cb_status","filterText":"wps_cb_status","insertText":"wps_cb_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wps_cb_status"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢wifi_softap_dhcps_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bb8406wifi_softap_dhcps_status","filterText":"wifi_softap_dhcps_status","insertText":"wifi_softap_dhcps_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_softap_dhcps_status()"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"40bc528dSPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40bc528dprint_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40bc528dspiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40bc528dummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"ummStats"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":" UMM_STATISTICS","kind":8,"sortText":"40f1b066UMM_STATISTICS","filterText":"UMM_STATISTICS","insertText":"UMM_STATISTICS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"UMM_STATISTICS"}},{"label":" UMM_STATISTICS_t","kind":22,"sortText":"40f1b066UMM_STATISTICS_t","filterText":"UMM_STATISTICS_t","insertText":"UMM_STATISTICS_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"UMM_STATISTICS_t"}},{"label":"â€¢spiffs_gc_erase_page_stats(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"40f1b066spiffs_gc_erase_page_stats","filterText":"spiffs_gc_erase_page_stats","insertText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"40f1de48br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_eax_state"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢gpio_pin_intr_state_set(uint32 i, GPIO_INT_TYPE intr_state)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"40fd02afgpio_pin_intr_state_set","filterText":"gpio_pin_intr_state_set","insertText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})"}},{"label":"â€¢wifi_softap_free_station_info()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_free_station_info","filterText":"wifi_softap_free_station_info","insertText":"wifi_softap_free_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_softap_free_station_info()"}},{"label":"â€¢wifi_softap_get_station_info()","kind":3,"detail":"struct station_info *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_info","filterText":"wifi_softap_get_station_info","insertText":"wifi_softap_get_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_softap_get_station_info()"}},{"label":"â€¢wifi_softap_get_station_num()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_num","filterText":"wifi_softap_get_station_num","insertText":"wifi_softap_get_station_num()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"wifi_softap_get_station_num()"}},{"label":"â€¢br_md5_set_state(br_md5_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5 running state.  \nThe running state for MD5 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5_set_state","filterText":"br_md5_set_state","insertText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_md5sha1_set_state(br_md5sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5sha1_set_state","filterText":"br_md5sha1_set_state","insertText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha1_set_state(br_sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-1 running state.  \nThe running state for SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha1_set_state","filterText":"br_sha1_set_state","insertText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha224_set_state(br_sha224_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-224 running state.  \nThe running state for SHA-224 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha224_set_state","filterText":"br_sha224_set_state","insertText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha384_set_state(br_sha384_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-384 running state.  \nThe running state for SHA-384 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha384_set_state","filterText":"br_sha384_set_state","insertText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_ssl_engine_current_state(const br_ssl_engine_context *cc)","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_ssl.h\"`  \n\\\\brief Get the current engine state.  \nAn SSL engine (client or server) has, at any time, a state which is the combination of zero, one or more of these flags:  \n\\- `BR_SSL_CLOSED`  \nEngine is finished, no more I/O (until next reset).  \n\\- `BR_SSL_SENDREC`  \nEngine has some bytes to send to the peer.  \n\\- `BR_SSL_RECVREC`  \nEngine expects some bytes from the peer.  \n\\- `BR_SSL_SENDAPP`  \nEngine may receive application data to send (or flush).  \n\\- `BR_SSL_RECVAPP`  \nEngine has obtained some application data from the peer,  \nthat should be read by the caller.  \nIf no flag at all is set (state value is 0), then the engine is not fully initialised yet.  \nThe `BR_SSL_CLOSED` flag is exclusive; when it is set, no other flag is set. To distinguish between a normal closure and an error, use  \n`br_ssl_engine_last_error()`.  \nGenerally speaking, `BR_SSL_SENDREC` and `BR_SSL_SENDAPP` are mutually exclusive: the input buffer, at any point, either accumulates plaintext data, or contains an assembled record that is being sent.  \nSimilarly, `BR_SSL_RECVREC` and `BR_SSL_RECVAPP` are mutually exclusive.  \nThis may change in a future library version.  \n\\\\param cc SSL engine context.  \n\\\\return the current engine state."},"sortText":"411c96d9br_ssl_engine_current_state","filterText":"br_ssl_engine_current_state","insertText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42b198ee__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42c63cd7__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":11}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":194},"contentChanges":[{"range":{"start":{"line":17,"character":11},"end":{"line":17,"character":11}},"rangeLength":0,"text":"u"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":195},"contentChanges":[{"range":{"start":{"line":17,"character":12},"end":{"line":17,"character":12}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":196},"contentChanges":[{"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"rangeLength":0,"text":" "}]}}Content-Length: 290

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":14},"end":{"line":17,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":196}}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":197},"contentChanges":[{"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 290

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":197}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":198},"contentChanges":[{"range":{"start":{"line":17,"character":14},"end":{"line":17,"character":14}},"rangeLength":0,"text":" "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":198}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":199},"contentChanges":[{"range":{"start":{"line":17,"character":15},"end":{"line":17,"character":15}},"rangeLength":0,"text":" "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":199}}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":200},"contentChanges":[{"range":{"start":{"line":17,"character":15},"end":{"line":17,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":201},"contentChanges":[{"range":{"start":{"line":17,"character":15},"end":{"line":17,"character":15}},"rangeLength":0,"text":"{}"}]}}Content-Length: 290

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":16},"end":{"line":17,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":46,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":202},"contentChanges":[{"range":{"start":{"line":17,"character":16},"end":{"line":17,"character":16}},"rangeLength":0,"text":"\n      \n    "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":202}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":203},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"rangeLength":0,"text":"s"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":47,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":18,"character":7},"context":{"triggerKind":1}}}
>>>
Content-Length: 46604

{"id":47,"result":{"isIncomplete":true,"items":[{"label":" size_t","kind":8,"sortText":"3ec4a02bsize_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"size_t"}},{"label":" status","kind":6,"detail":"boolean","sortText":"3eceb9fastatus","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"status"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" setup()","kind":3,"detail":"void","sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"setup()"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"String"}},{"label":"â€¢spiffs_obj_id","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nObject id type - most significant bit is reserved for index flag. Make sure the size of this type can hold the highest object id on a full system,  \ni.e. 2 + (spiffs_file_system_size / (2\\*log_page_size))\\*2"},"sortText":"401c2e89spiffs_obj_id","filterText":"spiffs_obj_id","insertText":"spiffs_obj_id","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_obj_id"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"4024f3b4s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"s32_t"}},{"label":"â€¢spiffs_page_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nPage index type. Make sure the size of this type can hold the highest page number of all pages - i.e. spiffs_file_system_size / log_page_size"},"sortText":"4029ce2dspiffs_page_ix","filterText":"spiffs_page_ix","insertText":"spiffs_page_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_ix"}},{"label":"â€¢spiffs","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4034a67dspiffs","filterText":"spiffs","insertText":"spiffs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs"}},{"label":"â€¢spiffs_page_header","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \npage header, part of each page except object lookup pages NB: this is always aligned when the data page is an object index,  \nas in this case struct spiffs_page_object_ix is used"},"sortText":"4034a67dspiffs_page_header","filterText":"spiffs_page_header","insertText":"spiffs_page_header","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_header"}},{"label":"â€¢spiffs_page_object_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nobject index page header"},"sortText":"403db87aspiffs_page_object_ix","filterText":"spiffs_page_object_ix","insertText":"spiffs_page_object_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_object_ix"}},{"label":"â€¢spiffs_page_object_ix_header","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nobject index header page header"},"sortText":"403ebc36spiffs_page_object_ix_header","filterText":"spiffs_page_object_ix_header","insertText":"spiffs_page_object_ix_header","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_object_ix_header"}},{"label":"â€¢scalbln()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bscalbln","filterText":"scalbln","insertText":"scalbln()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"scalbln()"}},{"label":"â€¢srand()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bsrand","filterText":"srand","insertText":"srand()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"srand()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"StringSumHelper"}},{"label":"â€¢spiffs_fd","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nspiffs nucleus file descriptor"},"sortText":"4044892aspiffs_fd","filterText":"spiffs_fd","insertText":"spiffs_fd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_fd"}},{"label":"â€¢spiffs_phys_rd(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4048cb59spiffs_phys_rd","filterText":"spiffs_phys_rd","insertText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})"}},{"label":"â€¢spiffs_block_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nBlock index type. Make sure the size of this type can hold the highest number of all blocks - i.e. spiffs_file_system_size / log_block_size"},"sortText":"404950c0spiffs_block_ix","filterText":"spiffs_block_ix","insertText":"spiffs_block_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_block_ix"}},{"label":"â€¢spiffs_span_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nObject span index type. Make sure the size of this type can hold the largest possible span index on the system - i.e. (spiffs_file_system_size / log_page_size) - 1"},"sortText":"404d4d28spiffs_span_ix","filterText":"spiffs_span_ix","insertText":"spiffs_span_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_span_ix"}},{"label":"â€¢spiffs_file","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file descriptor index type. must be signed"},"sortText":"404ded1cspiffs_file","filterText":"spiffs_file","insertText":"spiffs_file","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_file"}},{"label":"â€¢spiffs_cache_page","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \ncache page struct"},"sortText":"405393afspiffs_cache_page","filterText":"spiffs_cache_page","insertText":"spiffs_cache_page","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_cache_page"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"Stream"}},{"label":"â€¢spiffs_phys_wr(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *src)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4056f64bspiffs_phys_wr","filterText":"spiffs_phys_wr","insertText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})"}},{"label":"â€¢spiffs_cache","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \ncache struct"},"sortText":"4057e272spiffs_cache","filterText":"spiffs_cache","insertText":"spiffs_cache","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_cache"}},{"label":"â€¢spiffs_page_delete(spiffs *fs, spiffs_page_ix pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405bf433spiffs_page_delete","filterText":"spiffs_page_delete","insertText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})"}},{"label":" secureRandom(â€¦)","kind":3,"detail":"[2 overloads]","sortText":"405d8e68secureRandom","filterText":"secureRandom","insertText":"secureRandom($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"secureRandom($0)"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"405d8e68setTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"setTZ(${1:const char *tz})"}},{"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","kind":3,"detail":"uint8_t","sortText":"405d8e68shiftIn","filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})"}},{"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","kind":3,"detail":"void","sortText":"405d8e68shiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})"}},{"label":"â€¢strncpy_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"strncpy_P()"}},{"label":"â€¢spiffs_fd_return(spiffs *fs, spiffs_file f)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405f8100spiffs_fd_return","filterText":"spiffs_fd_return","insertText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})"}},{"label":"â€¢spiffs_obj_lu_find_id_and_span(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405f8100spiffs_obj_lu_find_id_and_span","filterText":"spiffs_obj_lu_find_id_and_span","insertText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"stack_thunk_ptr"}},{"label":"â€¢spiffs_cb_object_event(spiffs *fs, spiffs_page_object_ix *objix, int ev, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix new_pix, u32_t new_size)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4066d1c6spiffs_cb_object_event","filterText":"spiffs_cb_object_event","insertText":"spiffs_cb_object_event(${1:spiffs *fs}, ${2:spiffs_page_object_ix *objix}, ${3:int ev}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_span_ix spix}, ${6:spiffs_page_ix new_pix}, ${7:u32_t new_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_cb_object_event(${1:spiffs *fs}, ${2:spiffs_page_object_ix *objix}, ${3:int ev}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_span_ix spix}, ${6:spiffs_page_ix new_pix}, ${7:u32_t new_size})"}},{"label":"â€¢SPIFFS_CHECK_LOOKUP","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4068934fSPIFFS_CHECK_LOOKUP","filterText":"SPIFFS_CHECK_LOOKUP","insertText":"SPIFFS_CHECK_LOOKUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_LOOKUP"}},{"label":"â€¢SERIAL_7O1","kind":20,"detail":"SerialConfig","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"4068a03fSERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SERIAL_7O1"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"StreamString"}},{"label":"â€¢sntp_real_timestamp","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fsntp_real_timestamp","filterText":"sntp_real_timestamp","insertText":"sntp_real_timestamp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"sntp_real_timestamp"}},{"label":"â€¢spiffs_request_end()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4068a03fspiffs_request_end","filterText":"spiffs_request_end","insertText":"spiffs_request_end()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_request_end()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"stack_thunk_top"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"4068a03fstopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢swprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"4068a03fswprintf","filterText":"swprintf","insertText":"swprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"swprintf()"}},{"label":"â€¢swscanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"4068a03fswscanf","filterText":"swscanf","insertText":"swscanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"swscanf()"}},{"label":"â€¢SPIFFS_CHECK_PAGE","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"406a7657SPIFFS_CHECK_PAGE","filterText":"SPIFFS_CHECK_PAGE","insertText":"SPIFFS_CHECK_PAGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_PAGE"}},{"label":"â€¢spiffs_object_update_index_hdr(spiffs *fs, spiffs_fd *fd, spiffs_obj_id obj_id, spiffs_page_ix objix_hdr_pix, u8_t *new_objix_hdr_data, const u8_t *name, const u8_t *meta, u32_t size, spiffs_page_ix *new_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406a7657spiffs_object_update_index_hdr","filterText":"spiffs_object_update_index_hdr","insertText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})"}},{"label":"â€¢spiffs_fd_get(spiffs *fs, spiffs_file f, spiffs_fd **fd)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406c803cspiffs_fd_get","filterText":"spiffs_fd_get","insertText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})"}},{"label":"â€¢spiffs_obj_lu_find_entry_visitor(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, u8_t flags, spiffs_obj_id obj_id, spiffs_visitor_f v, const void *user_const_p, void *user_var_p, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406c803cspiffs_obj_lu_find_entry_visitor","filterText":"spiffs_obj_lu_find_entry_visitor","insertText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})"}},{"label":"â€¢spiffs_page_allocate_data(spiffs *fs, spiffs_obj_id obj_id, spiffs_page_header *ph, u8_t *data, u32_t len, u32_t page_offs, u8_t finalize, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"407125b0spiffs_page_allocate_data","filterText":"spiffs_page_allocate_data","insertText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})"}},{"label":"â€¢SCL","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066SCL","filterText":"SCL","insertText":"SCL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SCL"}},{"label":"â€¢SDA","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066SDA","filterText":"SDA","insertText":"SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SDA"}},{"label":"â€¢SPIFFS_CHECK_DELETE_BAD_FILE","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_DELETE_BAD_FILE","filterText":"SPIFFS_CHECK_DELETE_BAD_FILE","insertText":"SPIFFS_CHECK_DELETE_BAD_FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_DELETE_BAD_FILE"}},{"label":"â€¢SPIFFS_CHECK_DELETE_PAGE","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_DELETE_PAGE","filterText":"SPIFFS_CHECK_DELETE_PAGE","insertText":"SPIFFS_CHECK_DELETE_PAGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_DELETE_PAGE"}},{"label":"â€¢SPIFFS_CHECK_ERROR","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_ERROR","filterText":"SPIFFS_CHECK_ERROR","insertText":"SPIFFS_CHECK_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_ERROR"}},{"label":"â€¢SPIFFS_CHECK_FIX_INDEX","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_FIX_INDEX","filterText":"SPIFFS_CHECK_FIX_INDEX","insertText":"SPIFFS_CHECK_FIX_INDEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_FIX_INDEX"}},{"label":"â€¢SPIFFS_CHECK_FIX_LOOKUP","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_FIX_LOOKUP","filterText":"SPIFFS_CHECK_FIX_LOOKUP","insertText":"SPIFFS_CHECK_FIX_LOOKUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_FIX_LOOKUP"}},{"label":"â€¢SPIFFS_CHECK_INDEX","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_INDEX","filterText":"SPIFFS_CHECK_INDEX","insertText":"SPIFFS_CHECK_INDEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_INDEX"}},{"label":"â€¢SPIFFS_CHECK_PROGRESS","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_PROGRESS","filterText":"SPIFFS_CHECK_PROGRESS","insertText":"SPIFFS_CHECK_PROGRESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_CHECK_PROGRESS"}},{"label":"â€¢SPIFFS_open(spiffs *fs, const char *path, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"spiffs_file","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nOpens/creates a file.  \n@param fs the file system struct  \n@param path the path of the new file  \n@param flags the flags for the open command, can be combinations of SPIFFS_O_APPEND, SPIFFS_O_TRUNC, SPIFFS_O_CREAT, SPIFFS_O_RDONLY,  \nSPIFFS_O_WRONLY, SPIFFS_O_RDWR, SPIFFS_O_DIRECT, SPIFFS_O_EXCL  \n@param mode ignored, for posix compliance"},"sortText":"4071b066SPIFFS_open","filterText":"SPIFFS_open","insertText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})"}},{"label":"â€¢spiffs_DIR","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_DIR","filterText":"spiffs_DIR","insertText":"spiffs_DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_DIR"}},{"label":"â€¢spiffs_cache_fd_release(spiffs *fs, spiffs_cache_page *cp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_cache_fd_release","filterText":"spiffs_cache_fd_release","insertText":"spiffs_cache_fd_release(${1:spiffs *fs}, ${2:spiffs_cache_page *cp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_cache_fd_release(${1:spiffs *fs}, ${2:spiffs_cache_page *cp})"}},{"label":"â€¢spiffs_cache_page_get_by_fd(spiffs *fs, spiffs_fd *fd)","kind":3,"detail":"spiffs_cache_page *","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_cache_page_get_by_fd","filterText":"spiffs_cache_page_get_by_fd","insertText":"spiffs_cache_page_get_by_fd(${1:spiffs *fs}, ${2:spiffs_fd *fd})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_cache_page_get_by_fd(${1:spiffs *fs}, ${2:spiffs_fd *fd})"}},{"label":"â€¢spiffs_dirent","kind":22,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_dirent","filterText":"spiffs_dirent","insertText":"spiffs_dirent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_dirent"}},{"label":"â€¢spiffs_erase_block(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_erase_block","filterText":"spiffs_erase_block","insertText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢spiffs_fd_find_new(spiffs *fs, spiffs_fd **fd, const char *name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_fd_find_new","filterText":"spiffs_fd_find_new","insertText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})"}},{"label":"â€¢spiffs_flags","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file descriptor flags"},"sortText":"4071b066spiffs_flags","filterText":"spiffs_flags","insertText":"spiffs_flags","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_flags"}},{"label":"â€¢spiffs_gc_check(spiffs *fs, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_gc_check","filterText":"spiffs_gc_check","insertText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})"}},{"label":"â€¢spiffs_gc_quick(spiffs *fs, u16_t max_free_pages)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_gc_quick","filterText":"spiffs_gc_quick","insertText":"spiffs_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})"}},{"label":"â€¢spiffs_ix_map","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_ix_map","filterText":"spiffs_ix_map","insertText":"spiffs_ix_map","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_ix_map"}},{"label":"â€¢spiffs_mode","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file mode"},"sortText":"4071b066spiffs_mode","filterText":"spiffs_mode","insertText":"spiffs_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_mode"}},{"label":"â€¢spiffs_obj_lu_find_free(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_find_free","filterText":"spiffs_obj_lu_find_free","insertText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})"}},{"label":"â€¢spiffs_obj_lu_find_free_obj_id(spiffs *fs, spiffs_obj_id *obj_id, const u8_t *conflicting_name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_find_free_obj_id","filterText":"spiffs_obj_lu_find_free_obj_id","insertText":"spiffs_obj_lu_find_free_obj_id(${1:spiffs *fs}, ${2:spiffs_obj_id *obj_id}, ${3:const u8_t *conflicting_name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_obj_lu_find_free_obj_id(${1:spiffs *fs}, ${2:spiffs_obj_id *obj_id}, ${3:const u8_t *conflicting_name})"}},{"label":"â€¢spiffs_obj_lu_scan(spiffs *fs)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_scan","filterText":"spiffs_obj_lu_scan","insertText":"spiffs_obj_lu_scan(${1:spiffs *fs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_obj_lu_scan(${1:spiffs *fs})"}},{"label":"â€¢spiffs_object_create(spiffs *fs, spiffs_obj_id obj_id, const u8_t *name, const u8_t *meta, spiffs_obj_type type, spiffs_page_ix *objix_hdr_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_create","filterText":"spiffs_object_create","insertText":"spiffs_object_create(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:const u8_t *name}, ${4:const u8_t *meta}, ${5:spiffs_obj_type type}, ${6:spiffs_page_ix *objix_hdr_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_object_create(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:const u8_t *name}, ${4:const u8_t *meta}, ${5:spiffs_obj_type type}, ${6:spiffs_page_ix *objix_hdr_pix})"}},{"label":"â€¢spiffs_object_find_object_index_header_by_name(spiffs *fs, const u8_t *name, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_find_object_index_header_by_name","filterText":"spiffs_object_find_object_index_header_by_name","insertText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})"}},{"label":"â€¢spiffs_object_open_by_page(spiffs *fs, spiffs_page_ix pix, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_open_by_page","filterText":"spiffs_object_open_by_page","insertText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})"}},{"label":"â€¢spiffs_object_read(spiffs_fd *fd, u32_t offset, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_read","filterText":"spiffs_object_read","insertText":"spiffs_object_read(${1:spiffs_fd *fd}, ${2:u32_t offset}, ${3:u32_t len}, ${4:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_object_read(${1:spiffs_fd *fd}, ${2:u32_t offset}, ${3:u32_t len}, ${4:u8_t *dst})"}},{"label":"â€¢spiffs_object_truncate(spiffs_fd *fd, u32_t new_len, u8_t remove_object)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_truncate","filterText":"spiffs_object_truncate","insertText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})"}},{"label":"â€¢spiffs_page_move(spiffs *fs, spiffs_file fh, u8_t *page_data, spiffs_obj_id obj_id, spiffs_page_header *page_hdr, spiffs_page_ix src_pix, spiffs_page_ix *dst_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_page_move","filterText":"spiffs_page_move","insertText":"spiffs_page_move(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u8_t *page_data}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_page_header *page_hdr}, ${6:spiffs_page_ix src_pix}, ${7:spiffs_page_ix *dst_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_page_move(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u8_t *page_data}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_page_header *page_hdr}, ${6:spiffs_page_ix src_pix}, ${7:spiffs_page_ix *dst_pix})"}},{"label":"â€¢spiffs_phys_cpy(spiffs *fs, spiffs_file fh, u32_t dst, u32_t src, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_phys_cpy","filterText":"spiffs_phys_cpy","insertText":"spiffs_phys_cpy(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t dst}, ${4:u32_t src}, ${5:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_phys_cpy(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t dst}, ${4:u32_t src}, ${5:u32_t len})"}},{"label":"â€¢spiffs_populate_ix_map(spiffs *fs, spiffs_fd *fd, u32_t vec_entry_start, u32_t vec_entry_end)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_populate_ix_map","filterText":"spiffs_populate_ix_map","insertText":"spiffs_populate_ix_map(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:u32_t vec_entry_start}, ${4:u32_t vec_entry_end})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_populate_ix_map(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:u32_t vec_entry_start}, ${4:u32_t vec_entry_end})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"4071b066spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"spiffs_stat"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"step_A"}},{"label":"â€¢step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"step_B"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"step_C"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"step_a"}},{"label":"â€¢experimental::crypto::SHA1","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-1 ####################"},"sortText":"4083b5beSHA1","filterText":"SHA1","insertText":"experimental::crypto::SHA1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"experimental::crypto::SHA1"}},{"label":"â€¢experimental::crypto::SHA224","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-224 ####################"},"sortText":"4083b5beSHA224","filterText":"SHA224","insertText":"experimental::crypto::SHA224","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"experimental::crypto::SHA224"}},{"label":"â€¢experimental::crypto::SHA256","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-256 ####################"},"sortText":"4083b5beSHA256","filterText":"SHA256","insertText":"experimental::crypto::SHA256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":7}},"newText":"experimental::crypto::SHA256"}}]},"jsonrpc":"2.0"}Content-Length: 363

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":204},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"rangeLength":0,"text":"t"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":48,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":18,"character":8},"context":{"triggerKind":3}}}
>>>
Content-Length: 37763

{"id":48,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3eceb9fastatus","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"status"}},{"label":" size_t","kind":8,"sortText":"3ef37820size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"size_t"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"struct"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"String"}},{"label":"â€¢stpcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpcpy","filterText":"stpcpy","insertText":"stpcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stpcpy()"}},{"label":"â€¢stpncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpncpy","filterText":"stpncpy","insertText":"stpncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stpncpy()"}},{"label":"â€¢strcasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strcasecmp()"}},{"label":"â€¢strcat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strcat()"}},{"label":"â€¢strchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strchr()"}},{"label":"â€¢strcmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strcmp()"}},{"label":"â€¢strcoll()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strcoll()"}},{"label":"â€¢strcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strcpy()"}},{"label":"â€¢strcspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strcspn()"}},{"label":"â€¢strdup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strdup()"}},{"label":"â€¢strerror()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrerror","filterText":"strerror","insertText":"strerror()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strerror()"}},{"label":"â€¢strlcat()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strlcat()"}},{"label":"â€¢strlcpy()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strlcpy()"}},{"label":"â€¢strlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlen","filterText":"strlen","insertText":"strlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strlen()"}},{"label":"â€¢strlwr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strlwr()"}},{"label":"â€¢strncasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncasecmp()"}},{"label":"â€¢strncat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncat","filterText":"strncat","insertText":"strncat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncat()"}},{"label":"â€¢strncmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncmp()"}},{"label":"â€¢strncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncpy()"}},{"label":"â€¢strndup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrndup","filterText":"strndup","insertText":"strndup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strndup()"}},{"label":"â€¢strnlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strnlen()"}},{"label":"â€¢strpbrk()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strpbrk()"}},{"label":"â€¢strrchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strrchr()"}},{"label":"â€¢strsep()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsep","filterText":"strsep","insertText":"strsep()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strsep()"}},{"label":"â€¢strsignal()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsignal","filterText":"strsignal","insertText":"strsignal()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strsignal()"}},{"label":"â€¢strspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strspn()"}},{"label":"â€¢strstr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strstr()"}},{"label":"â€¢strtod()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtod()"}},{"label":"â€¢strtof()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtof","filterText":"strtof","insertText":"strtof()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtof()"}},{"label":"â€¢strtok()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok","filterText":"strtok","insertText":"strtok()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtok()"}},{"label":"â€¢strtok_r()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtok_r()"}},{"label":"â€¢strtol()","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtol()"}},{"label":"â€¢strtold(const char *, char **)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":"â€¢strtoll()","kind":3,"detail":"long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoll","filterText":"strtoll","insertText":"strtoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtoll()"}},{"label":"â€¢strtoul()","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtoul()"}},{"label":"â€¢strtoull()","kind":3,"detail":"unsigned long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoull","filterText":"strtoull","insertText":"strtoull()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtoull()"}},{"label":"â€¢strupr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strupr()"}},{"label":"â€¢strxfrm()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strxfrm()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"StringSumHelper"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"station_status_t"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"Stream"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"405bb6c8s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"s32_t"}},{"label":"â€¢strncasecmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncasecmp_P()"}},{"label":"â€¢strncat_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncat_P","filterText":"strncat_P","insertText":"strncat_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncat_P()"}},{"label":"â€¢strncmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncmp_P()"}},{"label":"â€¢strncpy_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strncpy_P()"}},{"label":"â€¢strnlen_P()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strnlen_P()"}},{"label":"â€¢strstr_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strstr_P","filterText":"strstr_P","insertText":"strstr_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strstr_P()"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"4062cd89STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"STATUS"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_ptr"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"StreamString"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stack_thunk_top"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"4068a03fstopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢strftime()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrftime","filterText":"strftime","insertText":"strftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strftime()"}},{"label":"â€¢strptime()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrptime","filterText":"strptime","insertText":"strptime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strptime()"}},{"label":"â€¢strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fstrtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fstrtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"stat()"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_A"}},{"label":"â€¢step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_B"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_C"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_a"}},{"label":"â€¢step_b","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_b","filterText":"step_b","insertText":"step_b","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_b"}},{"label":"â€¢step_c","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_c","filterText":"step_c","insertText":"step_c","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_c"}},{"label":"â€¢step_d","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_d","filterText":"step_d","insertText":"step_d","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"step_d"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"408c559bsetTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"setTZ(${1:const char *tz})"}},{"label":"â€¢ssize_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bssize_t","filterText":"ssize_t","insertText":"ssize_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"ssize_t"}},{"label":"â€¢suseconds_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bsuseconds_t","filterText":"suseconds_t","insertText":"suseconds_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"suseconds_t"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"station_info"}},{"label":"â€¢SERIAL_TX_ONLY","kind":20,"detail":"SerialMode","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"409cf05eSERIAL_TX_ONLY","filterText":"SERIAL_TX_ONLY","insertText":"SERIAL_TX_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"SERIAL_TX_ONLY"}},{"label":"â€¢std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"40b198efstreambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::streambuf"}},{"label":"â€¢std::stringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char memory buffers."},"sortText":"40b198efstringbuf","filterText":"stringbuf","insertText":"std::stringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::stringbuf"}},{"label":"â€¢std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"40b198efstringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::stringstream"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40b86274streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":8}},"newText":"std::streamoff"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":205},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 364

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"jsonrpc":"2.0","id":49,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":18,"character":9},"context":{"triggerKind":3}}}
>>>
Content-Length: 48673

{"id":49,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3eceb9fastatus","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"status"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"station_status_t"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"405794d9twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"twi_status()"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stack_thunk_top"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"406a49d6STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATUS"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"stat()"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4092d0aastep_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"step_A"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4092d0aastep_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"step_a"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"station_info"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢uart_start_detect_baudrate(int uart_nr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"uart.h\"`"},"sortText":"40cf659euart_start_detect_baudrate","filterText":"uart_start_detect_baudrate","insertText":"uart_start_detect_baudrate(${1:int uart_nr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"uart_start_detect_baudrate(${1:int uart_nr})"}},{"label":"â€¢system_os_task(ETSTask task, uint8 prio, ETSEvent *queue, uint8 qlen)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40d158easystem_os_task","filterText":"system_os_task","insertText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"40d9f877SPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40d9f877print_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40d9f877spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40d9f877ummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"ummStats"}},{"label":"â€¢cont_repaint_stack(cont_t *cont)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"cont.h\"`  \nRepaint the stack from the current SP to the end, to allow individual routines' stack usages to be calculated by re-painting, checking current free, running the routine, then checking the max free"},"sortText":"40e8a03fcont_repaint_stack","filterText":"cont_repaint_stack","insertText":"cont_repaint_stack(${1:cont_t *cont})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"cont_repaint_stack(${1:cont_t *cont})"}},{"label":"â€¢Event_StaMode_AuthMode_Change_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_AuthMode_Change_t","filterText":"Event_StaMode_AuthMode_Change_t","insertText":"Event_StaMode_AuthMode_Change_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"Event_StaMode_AuthMode_Change_t"}},{"label":"â€¢Event_StaMode_Connected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Connected_t","filterText":"Event_StaMode_Connected_t","insertText":"Event_StaMode_Connected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"Event_StaMode_Connected_t"}},{"label":"â€¢Event_StaMode_Disconnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Disconnected_t","filterText":"Event_StaMode_Disconnected_t","insertText":"Event_StaMode_Disconnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"Event_StaMode_Disconnected_t"}},{"label":"â€¢Event_StaMode_Got_IP_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Got_IP_t","filterText":"Event_StaMode_Got_IP_t","insertText":"Event_StaMode_Got_IP_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"Event_StaMode_Got_IP_t"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":" sntp_startup_delay_MS_rfc_not_less_than_60000()","kind":3,"detail":"uint32_t","sortText":"4108df65sntp_startup_delay_MS_rfc_not_less_than_60000","filterText":"sntp_startup_delay_MS_rfc_not_less_than_60000","insertText":"sntp_startup_delay_MS_rfc_not_less_than_60000()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"sntp_startup_delay_MS_rfc_not_less_than_60000()"}},{"label":"â€¢std::is_standard_layout\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_standard_layout"},"sortText":"410f326bis_standard_layout","filterText":"is_standard_layout","insertText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢wifi_wps_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"41172137wifi_wps_start","filterText":"wifi_wps_start","insertText":"wifi_wps_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"wifi_wps_start()"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"411c96d9br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"br_eax_state"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢esp2glue_dhcp_start(int netif_idx)","kind":3,"detail":"err_glue_t","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcp_start","filterText":"esp2glue_dhcp_start","insertText":"esp2glue_dhcp_start(${1:int netif_idx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"esp2glue_dhcp_start(${1:int netif_idx})"}},{"label":"â€¢esp2glue_dhcps_start(struct ip_info *info)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcps_start","filterText":"esp2glue_dhcps_start","insertText":"esp2glue_dhcps_start(${1:struct ip_info *info})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"esp2glue_dhcps_start(${1:struct ip_info *info})"}},{"label":"â€¢ETSTask","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"42543ef9ETSTask","filterText":"ETSTask","insertText":"ETSTask","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"ETSTask"}},{"label":"â€¢std::__stable_partition_adaptive(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pointer __buffer, _Distance __buffer_size)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_first != \\_\\_last and !\\_\\_pred(\\*\\_\\_first) and \\_\\_len == distance(\\_\\_first, \\_\\_last).  \n!\\_\\_pred(\\*\\_\\_first) allows us to guarantee that we don't move-assign an element onto itself."},"sortText":"42b79ecd__stable_partition_adaptive","filterText":"__stable_partition_adaptive","insertText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})"}},{"label":"â€¢std::__stable_sort_adaptive(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"42b79ecd__stable_sort_adaptive","filterText":"__stable_sort_adaptive","insertText":"std::__stable_sort_adaptive($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__stable_sort_adaptive($0)"}},{"label":"â€¢std::__inplace_stable_partition(_ForwardIterator __first, _Predicate __pred, _Distance __len)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_len != 0 and !\\_\\_pred(\\*\\_\\_first),  \nsame as \\_\\_stable_partition_adaptive."},"sortText":"42d43ef9__inplace_stable_partition","filterText":"__inplace_stable_partition","insertText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})"}},{"label":"â€¢std::__inplace_stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function for the stable sorting routines."},"sortText":"42d43ef9__inplace_stable_sort","filterText":"__inplace_stable_sort","insertText":"std::__inplace_stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__inplace_stable_sort($0)"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42dae0be__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":9}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}}]},"jsonrpc":"2.0"}Content-Length: 876

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'sta'; did you mean 'std'? (fix available)\n\nc:\\users\\vantr\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506\\bin\\..\\lib\\gcc\\xtensa-lx106-elf\\4.8.2\\..\\..\\..\\..\\xtensa-lx106-elf\\include\\c++\\4.8.2\\bits\\stl_algo.h:71:11:\nnote: 'std' declared here"},{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":9}},"severity":1,"code":"unexpected_namespace","source":"clang","message":"Unexpected namespace name 'std': expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":206},"contentChanges":[{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"rangeLength":0,"text":"t"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":50,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":18,"character":10},"context":{"triggerKind":3}}}
>>>
Content-Length: 45869

{"id":50,"result":{"isIncomplete":false,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3eceb9fastatus","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"status"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stat()"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"403981b7twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"twi_status()"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"station_status_t"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"406e07feSTATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATUS"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4078c848stack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"stack_thunk_top"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"station_info"}},{"label":"â€¢wps_cb_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40a5af23wps_cb_status","filterText":"wps_cb_status","insertText":"wps_cb_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wps_cb_status"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢wifi_softap_dhcps_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bb8406wifi_softap_dhcps_status","filterText":"wifi_softap_dhcps_status","insertText":"wifi_softap_dhcps_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_softap_dhcps_status()"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"40bc528dSPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40bc528dprint_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40bc528dspiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40bc528dummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"ummStats"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":" UMM_STATISTICS","kind":8,"sortText":"40f1b066UMM_STATISTICS","filterText":"UMM_STATISTICS","insertText":"UMM_STATISTICS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"UMM_STATISTICS"}},{"label":" UMM_STATISTICS_t","kind":22,"sortText":"40f1b066UMM_STATISTICS_t","filterText":"UMM_STATISTICS_t","insertText":"UMM_STATISTICS_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"UMM_STATISTICS_t"}},{"label":"â€¢spiffs_gc_erase_page_stats(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"40f1b066spiffs_gc_erase_page_stats","filterText":"spiffs_gc_erase_page_stats","insertText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"40f1de48br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_eax_state"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢gpio_pin_intr_state_set(uint32 i, GPIO_INT_TYPE intr_state)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"40fd02afgpio_pin_intr_state_set","filterText":"gpio_pin_intr_state_set","insertText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})"}},{"label":"â€¢wifi_softap_free_station_info()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_free_station_info","filterText":"wifi_softap_free_station_info","insertText":"wifi_softap_free_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_softap_free_station_info()"}},{"label":"â€¢wifi_softap_get_station_info()","kind":3,"detail":"struct station_info *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_info","filterText":"wifi_softap_get_station_info","insertText":"wifi_softap_get_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_softap_get_station_info()"}},{"label":"â€¢wifi_softap_get_station_num()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_num","filterText":"wifi_softap_get_station_num","insertText":"wifi_softap_get_station_num()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"wifi_softap_get_station_num()"}},{"label":"â€¢br_md5_set_state(br_md5_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5 running state.  \nThe running state for MD5 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5_set_state","filterText":"br_md5_set_state","insertText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_md5sha1_set_state(br_md5sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5sha1_set_state","filterText":"br_md5sha1_set_state","insertText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha1_set_state(br_sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-1 running state.  \nThe running state for SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha1_set_state","filterText":"br_sha1_set_state","insertText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha224_set_state(br_sha224_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-224 running state.  \nThe running state for SHA-224 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha224_set_state","filterText":"br_sha224_set_state","insertText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha384_set_state(br_sha384_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-384 running state.  \nThe running state for SHA-384 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha384_set_state","filterText":"br_sha384_set_state","insertText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_ssl_engine_current_state(const br_ssl_engine_context *cc)","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_ssl.h\"`  \n\\\\brief Get the current engine state.  \nAn SSL engine (client or server) has, at any time, a state which is the combination of zero, one or more of these flags:  \n\\- `BR_SSL_CLOSED`  \nEngine is finished, no more I/O (until next reset).  \n\\- `BR_SSL_SENDREC`  \nEngine has some bytes to send to the peer.  \n\\- `BR_SSL_RECVREC`  \nEngine expects some bytes from the peer.  \n\\- `BR_SSL_SENDAPP`  \nEngine may receive application data to send (or flush).  \n\\- `BR_SSL_RECVAPP`  \nEngine has obtained some application data from the peer,  \nthat should be read by the caller.  \nIf no flag at all is set (state value is 0), then the engine is not fully initialised yet.  \nThe `BR_SSL_CLOSED` flag is exclusive; when it is set, no other flag is set. To distinguish between a normal closure and an error, use  \n`br_ssl_engine_last_error()`.  \nGenerally speaking, `BR_SSL_SENDREC` and `BR_SSL_SENDAPP` are mutually exclusive: the input buffer, at any point, either accumulates plaintext data, or contains an assembled record that is being sent.  \nSimilarly, `BR_SSL_RECVREC` and `BR_SSL_RECVAPP` are mutually exclusive.  \nThis may change in a future library version.  \n\\\\param cc SSL engine context.  \n\\\\return the current engine state."},"sortText":"411c96d9br_ssl_engine_current_state","filterText":"br_ssl_engine_current_state","insertText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42b198ee__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42c63cd7__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":10}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'stat' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":207},"contentChanges":[{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":10}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 904

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statu'; did you mean 'status'? (fix available)\n\ngiu_nut_dao_led.ino.cpp:15:9: note: 'status' declared here"},{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":14}},"severity":3,"message":"'status' declared here\n\ngiu_nut_dao_led.ino.cpp:26:7: error: use of undeclared identifier 'statu'; did you mean 'status'?"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":208},"contentChanges":[{"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":209},"contentChanges":[{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":12}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":209}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":210},"contentChanges":[{"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":13}},"rangeLength":0,"text":"="}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":211},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":212},"contentChanges":[{"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":212}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":213},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":18,"character":17},"end":{"line":18,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":213}}}Content-Length: 288

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":19,"character":5},"end":{"line":19,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":214},"contentChanges":[{"range":{"start":{"line":19,"character":5},"end":{"line":19,"character":5}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":215},"contentChanges":[{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":4}},"rangeLength":0,"text":"e"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":54,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":20,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 37752

{"id":54,"result":{"isIncomplete":true,"items":[{"label":" else {statements}","kind":15,"sortText":"3f000000else","filterText":"else","insertText":"else {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"else {\n${0:statements}\n}"}},{"label":" else if (condition) {statements}","kind":15,"sortText":"3f000000else if","filterText":"else if","insertText":"else if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"else if (${1:condition}) {\n${0:statements}\n}"}},{"label":" enum","kind":14,"sortText":"3f000000enum","filterText":"enum","insertText":"enum","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"enum"}},{"label":" extern","kind":14,"sortText":"3f000000extern","filterText":"extern","insertText":"extern","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"extern"}},{"label":"â€¢esp8266_gpioToFn","kind":6,"detail":"volatile uint32_t *const [16]","documentation":{"kind":"markdown","value":"From `\"esp8266_peri.h\"`"},"sortText":"403b80c8esp8266_gpioToFn","filterText":"esp8266_gpioToFn","insertText":"esp8266_gpioToFn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"esp8266_gpioToFn"}},{"label":"â€¢EspClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"Esp.h\"`"},"sortText":"403c9577EspClass","filterText":"EspClass","insertText":"EspClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EspClass"}},{"label":"â€¢ecvt()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858becvt","filterText":"ecvt","insertText":"ecvt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ecvt()"}},{"label":"â€¢ecvtbuf()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858becvtbuf","filterText":"ecvtbuf","insertText":"ecvtbuf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ecvtbuf()"}},{"label":"â€¢ecvtf()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858becvtf","filterText":"ecvtf","insertText":"ecvtf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ecvtf()"}},{"label":"â€¢erand48()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858berand48","filterText":"erand48","insertText":"erand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erand48()"}},{"label":"â€¢erf()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858berf","filterText":"erf","insertText":"erf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erf()"}},{"label":"â€¢erfc()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858berfc","filterText":"erfc","insertText":"erfc()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erfc()"}},{"label":"â€¢erfcf()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858berfcf","filterText":"erfcf","insertText":"erfcf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erfcf()"}},{"label":"â€¢erfcl()","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858berfcl","filterText":"erfcl","insertText":"erfcl()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erfcl()"}},{"label":"â€¢erff()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858berff","filterText":"erff","insertText":"erff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erff()"}},{"label":"â€¢erfl()","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858berfl","filterText":"erfl","insertText":"erfl()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"erfl()"}},{"label":"â€¢exit()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bexit","filterText":"exit","insertText":"exit()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exit()"}},{"label":"â€¢exp()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexp","filterText":"exp","insertText":"exp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exp()"}},{"label":"â€¢exp10()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexp10","filterText":"exp10","insertText":"exp10()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exp10()"}},{"label":"â€¢exp10f()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexp10f","filterText":"exp10f","insertText":"exp10f()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exp10f()"}},{"label":"â€¢exp2()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexp2","filterText":"exp2","insertText":"exp2()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exp2()"}},{"label":"â€¢exp2f()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`  \nOther single precision functions."},"sortText":"403f858bexp2f","filterText":"exp2f","insertText":"exp2f()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exp2f()"}},{"label":"â€¢exp2l()","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexp2l","filterText":"exp2l","insertText":"exp2l()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"exp2l()"}},{"label":"â€¢expf()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexpf","filterText":"expf","insertText":"expf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"expf()"}},{"label":"â€¢expl()","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexpl","filterText":"expl","insertText":"expl()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"expl()"}},{"label":"â€¢expm1()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexpm1","filterText":"expm1","insertText":"expm1()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"expm1()"}},{"label":"â€¢expm1f()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexpm1f","filterText":"expm1f","insertText":"expm1f()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"expm1f()"}},{"label":"â€¢expm1l()","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bexpm1l","filterText":"expm1l","insertText":"expm1l()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"expm1l()"}},{"label":"â€¢ESP","kind":6,"detail":"EspClass","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`"},"sortText":"4046f658ESP","filterText":"ESP","insertText":"ESP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ESP"}},{"label":" ets_delay_us(uint32_t us)","kind":3,"detail":"void","sortText":"405d8e68ets_delay_us","filterText":"ets_delay_us","insertText":"ets_delay_us(${1:uint32_t us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_delay_us(${1:uint32_t us})"}},{"label":" ets_intr_lock()","kind":3,"detail":"void","sortText":"405d8e68ets_intr_lock","filterText":"ets_intr_lock","insertText":"ets_intr_lock()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_intr_lock()"}},{"label":" ets_intr_unlock()","kind":3,"detail":"void","sortText":"405d8e68ets_intr_unlock","filterText":"ets_intr_unlock","insertText":"ets_intr_unlock()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_intr_unlock()"}},{"label":" ets_uart_printf(const char *format, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"ROM function, ets_uart_printf(), prints on the UART selected by uart_buff_switch(). Supported format options are the same as vprintf(). Also has cooked newline behavior. No flash format/string support; however, ISR safe.  \nAlso, uses a static function in ROM to print characters which is only controlled by uart_buff_switch()."},"sortText":"405d8e68ets_uart_printf","filterText":"ets_uart_printf","insertText":"ets_uart_printf(${1:const char *format, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_uart_printf(${1:const char *format, ...})"}},{"label":"â€¢eboot_command","kind":22,"documentation":{"kind":"markdown","value":"From `\"eboot_command.h\"`"},"sortText":"4068a03feboot_command","filterText":"eboot_command","insertText":"eboot_command","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"eboot_command"}},{"label":"â€¢eboot_command_clear()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"eboot_command.h\"`"},"sortText":"4068a03feboot_command_clear","filterText":"eboot_command_clear","insertText":"eboot_command_clear()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"eboot_command_clear()"}},{"label":"â€¢emptyString","kind":6,"detail":"const String","documentation":{"kind":"markdown","value":"From `\"WString.h\"`"},"sortText":"4068a03femptyString","filterText":"emptyString","insertText":"emptyString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"emptyString"}},{"label":"â€¢esp_get_cycle_count()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"core_esp8266_features.h\"`"},"sortText":"4068a03fesp_get_cycle_count","filterText":"esp_get_cycle_count","insertText":"esp_get_cycle_count()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"esp_get_cycle_count()"}},{"label":" esp_schedule()","kind":3,"detail":"void","sortText":"4068a03fesp_schedule","filterText":"esp_schedule","insertText":"esp_schedule()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"esp_schedule()"}},{"label":" esp_yield()","kind":3,"detail":"void","sortText":"4068a03fesp_yield","filterText":"esp_yield","insertText":"esp_yield()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"esp_yield()"}},{"label":"â€¢ets_isr_mask(int intr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"406fe75eets_isr_mask","filterText":"ets_isr_mask","insertText":"ets_isr_mask(${1:int intr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_isr_mask(${1:int intr})"}},{"label":"â€¢environ","kind":6,"detail":"char **","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066environ","filterText":"environ","insertText":"environ","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"environ"}},{"label":"â€¢execl()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066execl","filterText":"execl","insertText":"execl()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"execl()"}},{"label":"â€¢execv()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066execv","filterText":"execv","insertText":"execv()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"execv()"}},{"label":"â€¢execvp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066execvp","filterText":"execvp","insertText":"execvp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"execvp()"}},{"label":"â€¢ets_isr_unmask(int intr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407276a6ets_isr_unmask","filterText":"ets_isr_unmask","insertText":"ets_isr_unmask(${1:int intr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_isr_unmask(${1:int intr})"}},{"label":"â€¢ets_putc(char)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`  \nets_putc(), a \"print character function\" in ROM, prints a character to a UART. It always returns 0; however, the prototype here is defined with void return to make compatible with other usages of fp_putc_t. ets_putc() provides a \"raw\", print as is, interface. '\\\\r' and '\\\\n' are each printed exactly as is w/o addition. For a \"cooked\" interface use ets_uart_putc1().  \nThe use of this function requires a prior setup call to uart_buff_switch() to select the UART."},"sortText":"407eb1acets_putc","filterText":"ets_putc","insertText":"ets_putc(${1:char})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_putc(${1:char})"}},{"label":"â€¢ETSEvent","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETSEvent","filterText":"ETSEvent","insertText":"ETSEvent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSEvent"}},{"label":"â€¢ETSEventTag","kind":22,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETSEventTag","filterText":"ETSEventTag","insertText":"ETSEventTag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSEventTag"}},{"label":"â€¢ETSHandle","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`  \ntimer related"},"sortText":"407f2f3bETSHandle","filterText":"ETSHandle","insertText":"ETSHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSHandle"}},{"label":"â€¢ETSParam","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETSParam","filterText":"ETSParam","insertText":"ETSParam","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSParam"}},{"label":"â€¢ETSSignal","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETSSignal","filterText":"ETSSignal","insertText":"ETSSignal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSSignal"}},{"label":"â€¢ETSTimer","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETSTimer","filterText":"ETSTimer","insertText":"ETSTimer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSTimer"}},{"label":"â€¢ETSTimerFunc","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETSTimerFunc","filterText":"ETSTimerFunc","insertText":"ETSTimerFunc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETSTimerFunc"}},{"label":"â€¢ETS_INTR_ENABLED()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETS_INTR_ENABLED","filterText":"ETS_INTR_ENABLED","insertText":"ETS_INTR_ENABLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETS_INTR_ENABLED()"}},{"label":"â€¢ETS_INTR_PENDING()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bETS_INTR_PENDING","filterText":"ETS_INTR_PENDING","insertText":"ETS_INTR_PENDING()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ETS_INTR_PENDING()"}},{"label":"â€¢ets_isr_attach(int i, ets_isr_t func, void *arg)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_isr_attach","filterText":"ets_isr_attach","insertText":"ets_isr_attach(${1:int i}, ${2:ets_isr_t func}, ${3:void *arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_isr_attach(${1:int i}, ${2:ets_isr_t func}, ${3:void *arg})"}},{"label":"â€¢ets_memcpy(void *dest, const void *src, size_t n)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_memcpy","filterText":"ets_memcpy","insertText":"ets_memcpy(${1:void *dest}, ${2:const void *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_memcpy(${1:void *dest}, ${2:const void *src}, ${3:size_t n})"}},{"label":"â€¢ets_memmove(void *dest, const void *src, size_t n)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_memmove","filterText":"ets_memmove","insertText":"ets_memmove(${1:void *dest}, ${2:const void *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_memmove(${1:void *dest}, ${2:const void *src}, ${3:size_t n})"}},{"label":"â€¢ets_memset(void *s, int c, size_t n)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_memset","filterText":"ets_memset","insertText":"ets_memset(${1:void *s}, ${2:int c}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_memset(${1:void *s}, ${2:int c}, ${3:size_t n})"}},{"label":"â€¢ets_post(uint8 prio, ETSSignal sig, ETSParam par)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_post","filterText":"ets_post","insertText":"ets_post(${1:uint8 prio}, ${2:ETSSignal sig}, ${3:ETSParam par})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_post(${1:uint8 prio}, ${2:ETSSignal sig}, ${3:ETSParam par})"}},{"label":"â€¢ets_printf(const char *format, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_printf","filterText":"ets_printf","insertText":"ets_printf(${1:const char *format, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_printf(${1:const char *format, ...})"}},{"label":"â€¢ets_sprintf(char *str, const char *format, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_sprintf","filterText":"ets_sprintf","insertText":"ets_sprintf(${1:char *str}, ${2:const char *format, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_sprintf(${1:char *str}, ${2:const char *format, ...})"}},{"label":"â€¢ets_strcpy(char *dest, const char *src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_strcpy","filterText":"ets_strcpy","insertText":"ets_strcpy(${1:char *dest}, ${2:const char *src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_strcpy(${1:char *dest}, ${2:const char *src})"}},{"label":"â€¢ets_strncmp(const char *s1, const char *s2, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_strncmp","filterText":"ets_strncmp","insertText":"ets_strncmp(${1:const char *s1}, ${2:const char *s2}, ${3:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_strncmp(${1:const char *s1}, ${2:const char *s2}, ${3:int len})"}},{"label":"â€¢ets_task(ETSTask task, uint8 prio, ETSEvent *queue, uint8 qlen)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_task","filterText":"ets_task","insertText":"ets_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})"}},{"label":"â€¢ets_timer_arm_new(ETSTimer *a, int b, int c, int isMstimer)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_timer_arm_new","filterText":"ets_timer_arm_new","insertText":"ets_timer_arm_new(${1:ETSTimer *a}, ${2:int b}, ${3:int c}, ${4:int isMstimer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_timer_arm_new(${1:ETSTimer *a}, ${2:int b}, ${3:int c}, ${4:int isMstimer})"}},{"label":"â€¢ets_timer_disarm(ETSTimer *a)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_timer_disarm","filterText":"ets_timer_disarm","insertText":"ets_timer_disarm(${1:ETSTimer *a})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_timer_disarm(${1:ETSTimer *a})"}},{"label":"â€¢ets_timer_setfn(ETSTimer *t, ETSTimerFunc *fn, void *parg)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_timer_setfn","filterText":"ets_timer_setfn","insertText":"ets_timer_setfn(${1:ETSTimer *t}, ${2:ETSTimerFunc *fn}, ${3:void *parg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_timer_setfn(${1:ETSTimer *t}, ${2:ETSTimerFunc *fn}, ${3:void *parg})"}},{"label":"â€¢ets_uart_putc1(char)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`  \nets_uart_putc1(), a \"print character function\" in ROM, prints a character to a UART. It returns the character printed; however, the prototype here is defined with void return to make compatible with other usages of fp_putc_t.  \nThis function provides additional processing to characters '\\\\r' and '\\\\n'. It filters out '\\\\r'. When called with '\\\\n', it prints characters '\\\\r' and '\\\\n'.  \nThis is sometimes refered to as a \"cooked\" interface. For a \"raw\", print as is, interface use ets_putc(). The use of this function requires a prior setup call to uart_buff_switch() to select the UART.  \nets_uart_putc1() is used internally by ets_uart_printf. It is also the function that gets installed by ets_uart_install_printf through a call to ets_install_putc1."},"sortText":"407f2f3bets_uart_putc1","filterText":"ets_uart_putc1","insertText":"ets_uart_putc1(${1:char})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_uart_putc1(${1:char})"}},{"label":"â€¢ets_vprintf(fp_putc_t print_function, const char *format, va_list arg)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_vprintf","filterText":"ets_vprintf","insertText":"ets_vprintf(${1:fp_putc_t print_function}, ${2:const char *format}, ${3:va_list arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_vprintf(${1:fp_putc_t print_function}, ${2:const char *format}, ${3:va_list arg})"}},{"label":"â€¢ets_vsnprintf(char *s, size_t n, const char *format, va_list arg)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"407f2f3bets_vsnprintf","filterText":"ets_vsnprintf","insertText":"ets_vsnprintf(${1:char *s}, ${2:size_t n}, ${3:const char *format}, ${4:va_list arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"ets_vsnprintf(${1:char *s}, ${2:size_t n}, ${3:const char *format}, ${4:va_list arg})"}},{"label":"â€¢experimental::crypto::ENCRYPTION_KEY_LENGTH","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`"},"sortText":"4083b5beENCRYPTION_KEY_LENGTH","filterText":"ENCRYPTION_KEY_LENGTH","insertText":"experimental::crypto::ENCRYPTION_KEY_LENGTH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"experimental::crypto::ENCRYPTION_KEY_LENGTH"}},{"label":"â€¢std::erf(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaerf","filterText":"erf","insertText":"std::erf($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erf($0)"}},{"label":"â€¢std::erfc(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaerfc","filterText":"erfc","insertText":"std::erfc($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erfc($0)"}},{"label":"â€¢std::exp(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaexp","filterText":"exp","insertText":"std::exp($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::exp($0)"}},{"label":"â€¢std::exp2(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaexp2","filterText":"exp2","insertText":"std::exp2($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::exp2($0)"}},{"label":"â€¢std::expm1(â€¦)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaexpm1","filterText":"expm1","insertText":"std::expm1($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::expm1($0)"}},{"label":"â€¢EVENT_MAX","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_MAX","filterText":"EVENT_MAX","insertText":"EVENT_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_MAX"}},{"label":"â€¢EVENT_OPMODE_CHANGED","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_OPMODE_CHANGED","filterText":"EVENT_OPMODE_CHANGED","insertText":"EVENT_OPMODE_CHANGED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_OPMODE_CHANGED"}},{"label":"â€¢EVENT_SOFTAPMODE_DISTRIBUTE_STA_IP","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_SOFTAPMODE_DISTRIBUTE_STA_IP","filterText":"EVENT_SOFTAPMODE_DISTRIBUTE_STA_IP","insertText":"EVENT_SOFTAPMODE_DISTRIBUTE_STA_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_SOFTAPMODE_DISTRIBUTE_STA_IP"}},{"label":"â€¢EVENT_SOFTAPMODE_PROBEREQRECVED","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_SOFTAPMODE_PROBEREQRECVED","filterText":"EVENT_SOFTAPMODE_PROBEREQRECVED","insertText":"EVENT_SOFTAPMODE_PROBEREQRECVED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_SOFTAPMODE_PROBEREQRECVED"}},{"label":"â€¢EVENT_SOFTAPMODE_STACONNECTED","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_SOFTAPMODE_STACONNECTED","filterText":"EVENT_SOFTAPMODE_STACONNECTED","insertText":"EVENT_SOFTAPMODE_STACONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_SOFTAPMODE_STACONNECTED"}},{"label":"â€¢EVENT_SOFTAPMODE_STADISCONNECTED","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_SOFTAPMODE_STADISCONNECTED","filterText":"EVENT_SOFTAPMODE_STADISCONNECTED","insertText":"EVENT_SOFTAPMODE_STADISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_SOFTAPMODE_STADISCONNECTED"}},{"label":"â€¢EVENT_STAMODE_DHCP_TIMEOUT","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_STAMODE_DHCP_TIMEOUT","filterText":"EVENT_STAMODE_DHCP_TIMEOUT","insertText":"EVENT_STAMODE_DHCP_TIMEOUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_STAMODE_DHCP_TIMEOUT"}},{"label":"â€¢EVENT_STAMODE_GOT_IP","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137EVENT_STAMODE_GOT_IP","filterText":"EVENT_STAMODE_GOT_IP","insertText":"EVENT_STAMODE_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"EVENT_STAMODE_GOT_IP"}},{"label":"â€¢Event_Info_u","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137Event_Info_u","filterText":"Event_Info_u","insertText":"Event_Info_u","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"Event_Info_u"}},{"label":"â€¢Event_SoftAPMode_StaConnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137Event_SoftAPMode_StaConnected_t","filterText":"Event_SoftAPMode_StaConnected_t","insertText":"Event_SoftAPMode_StaConnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"Event_SoftAPMode_StaConnected_t"}},{"label":"â€¢Event_SoftAPMode_StaDisconnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137Event_SoftAPMode_StaDisconnected_t","filterText":"Event_SoftAPMode_StaDisconnected_t","insertText":"Event_SoftAPMode_StaDisconnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"Event_SoftAPMode_StaDisconnected_t"}},{"label":"â€¢Event_StaMode_Disconnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137Event_StaMode_Disconnected_t","filterText":"Event_StaMode_Disconnected_t","insertText":"Event_StaMode_Disconnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"Event_StaMode_Disconnected_t"}},{"label":" esp8266","kind":9,"sortText":"40a3d1d0esp8266","filterText":"esp8266","insertText":"esp8266","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"esp8266"}},{"label":" experimental","kind":9,"sortText":"40a3d1d0experimental","filterText":"experimental","insertText":"experimental","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"experimental"}},{"label":"â€¢std::erf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609berf","filterText":"erf","insertText":"std::erf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erf"}},{"label":"â€¢std::erfc","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609berfc","filterText":"erfc","insertText":"std::erfc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erfc"}},{"label":"â€¢std::erfcf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609berfcf","filterText":"erfcf","insertText":"std::erfcf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erfcf"}},{"label":"â€¢std::erfcl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609berfcl","filterText":"erfcl","insertText":"std::erfcl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erfcl"}},{"label":"â€¢std::erff","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609berff","filterText":"erff","insertText":"std::erff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erff"}},{"label":"â€¢std::erfl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609berfl","filterText":"erfl","insertText":"std::erfl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::erfl"}},{"label":"â€¢std::exp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bexp","filterText":"exp","insertText":"std::exp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::exp"}},{"label":"â€¢std::exp2","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bexp2","filterText":"exp2","insertText":"std::exp2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::exp2"}},{"label":"â€¢std::exp2f","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bexp2f","filterText":"exp2f","insertText":"std::exp2f","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":5}},"newText":"std::exp2f"}}]},"jsonrpc":"2.0"}Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":216},"contentChanges":[{"range":{"start":{"line":20,"character":5},"end":{"line":20,"character":5}},"rangeLength":0,"text":"l"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":55,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":20,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 1062

{"id":55,"result":{"isIncomplete":false,"items":[{"label":" else {statements}","kind":15,"sortText":"3f000000else","filterText":"else","insertText":"else {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":6}},"newText":"else {\n${0:statements}\n}"}},{"label":" else if (condition) {statements}","kind":15,"sortText":"3f000000else if","filterText":"else if","insertText":"else if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":6}},"newText":"else if (${1:condition}) {\n${0:statements}\n}"}},{"label":"â€¢esp2glue_lwip_init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"40e121e7esp2glue_lwip_init","filterText":"esp2glue_lwip_init","insertText":"esp2glue_lwip_init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":6}},"newText":"esp2glue_lwip_init()"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":217},"contentChanges":[{"range":{"start":{"line":20,"character":6},"end":{"line":20,"character":6}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'el'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":218},"contentChanges":[{"range":{"start":{"line":20,"character":7},"end":{"line":20,"character":7}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 580

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":7}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'els'; did you mean 'else'? (fix available)"},{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":7}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":219},"contentChanges":[{"range":{"start":{"line":20,"character":8},"end":{"line":20,"character":8}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":219}}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":220},"contentChanges":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":9}},"rangeLength":0,"text":"{}"}]}}Content-Length: 290

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":220}}}Content-Length: 327

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":221},"contentChanges":[{"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"rangeLength":0,"text":"\n      \n    "}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":222},"contentChanges":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":6}},"rangeLength":0,"text":"s"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":57,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":21,"character":7},"context":{"triggerKind":1}}}
>>>
Content-Length: 46604

{"id":57,"result":{"isIncomplete":true,"items":[{"label":" size_t","kind":8,"sortText":"3ec4a02bsize_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"size_t"}},{"label":" status","kind":6,"detail":"boolean","sortText":"3eeffa26status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"status"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" setup()","kind":3,"detail":"void","sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"setup()"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"String"}},{"label":"â€¢spiffs_obj_id","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nObject id type - most significant bit is reserved for index flag. Make sure the size of this type can hold the highest object id on a full system,  \ni.e. 2 + (spiffs_file_system_size / (2\\*log_page_size))\\*2"},"sortText":"401c2e89spiffs_obj_id","filterText":"spiffs_obj_id","insertText":"spiffs_obj_id","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_obj_id"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"4024f3b4s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"s32_t"}},{"label":"â€¢spiffs_page_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nPage index type. Make sure the size of this type can hold the highest page number of all pages - i.e. spiffs_file_system_size / log_page_size"},"sortText":"4029ce2dspiffs_page_ix","filterText":"spiffs_page_ix","insertText":"spiffs_page_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_ix"}},{"label":"â€¢spiffs","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4034a67dspiffs","filterText":"spiffs","insertText":"spiffs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs"}},{"label":"â€¢spiffs_page_header","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \npage header, part of each page except object lookup pages NB: this is always aligned when the data page is an object index,  \nas in this case struct spiffs_page_object_ix is used"},"sortText":"4034a67dspiffs_page_header","filterText":"spiffs_page_header","insertText":"spiffs_page_header","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_header"}},{"label":"â€¢spiffs_page_object_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nobject index page header"},"sortText":"403db87aspiffs_page_object_ix","filterText":"spiffs_page_object_ix","insertText":"spiffs_page_object_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_object_ix"}},{"label":"â€¢spiffs_page_object_ix_header","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nobject index header page header"},"sortText":"403ebc36spiffs_page_object_ix_header","filterText":"spiffs_page_object_ix_header","insertText":"spiffs_page_object_ix_header","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_object_ix_header"}},{"label":"â€¢scalbln()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bscalbln","filterText":"scalbln","insertText":"scalbln()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"scalbln()"}},{"label":"â€¢srand()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bsrand","filterText":"srand","insertText":"srand()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"srand()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"StringSumHelper"}},{"label":"â€¢spiffs_fd","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \nspiffs nucleus file descriptor"},"sortText":"4044892aspiffs_fd","filterText":"spiffs_fd","insertText":"spiffs_fd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_fd"}},{"label":"â€¢spiffs_phys_rd(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4048cb59spiffs_phys_rd","filterText":"spiffs_phys_rd","insertText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})"}},{"label":"â€¢spiffs_block_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nBlock index type. Make sure the size of this type can hold the highest number of all blocks - i.e. spiffs_file_system_size / log_block_size"},"sortText":"404950c0spiffs_block_ix","filterText":"spiffs_block_ix","insertText":"spiffs_block_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_block_ix"}},{"label":"â€¢spiffs_span_ix","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`  \nObject span index type. Make sure the size of this type can hold the largest possible span index on the system - i.e. (spiffs_file_system_size / log_page_size) - 1"},"sortText":"404d4d28spiffs_span_ix","filterText":"spiffs_span_ix","insertText":"spiffs_span_ix","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_span_ix"}},{"label":"â€¢spiffs_file","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file descriptor index type. must be signed"},"sortText":"404ded1cspiffs_file","filterText":"spiffs_file","insertText":"spiffs_file","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_file"}},{"label":"â€¢spiffs_cache_page","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \ncache page struct"},"sortText":"405393afspiffs_cache_page","filterText":"spiffs_cache_page","insertText":"spiffs_cache_page","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_cache_page"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"Stream"}},{"label":"â€¢spiffs_phys_wr(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *src)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4056f64bspiffs_phys_wr","filterText":"spiffs_phys_wr","insertText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})"}},{"label":"â€¢spiffs_cache","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`  \ncache struct"},"sortText":"4057e272spiffs_cache","filterText":"spiffs_cache","insertText":"spiffs_cache","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_cache"}},{"label":"â€¢spiffs_page_delete(spiffs *fs, spiffs_page_ix pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405bf433spiffs_page_delete","filterText":"spiffs_page_delete","insertText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})"}},{"label":" secureRandom(â€¦)","kind":3,"detail":"[2 overloads]","sortText":"405d8e68secureRandom","filterText":"secureRandom","insertText":"secureRandom($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"secureRandom($0)"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"405d8e68setTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"setTZ(${1:const char *tz})"}},{"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","kind":3,"detail":"uint8_t","sortText":"405d8e68shiftIn","filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})"}},{"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","kind":3,"detail":"void","sortText":"405d8e68shiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})"}},{"label":"â€¢strncpy_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"strncpy_P()"}},{"label":"â€¢spiffs_fd_return(spiffs *fs, spiffs_file f)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405f8100spiffs_fd_return","filterText":"spiffs_fd_return","insertText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})"}},{"label":"â€¢spiffs_obj_lu_find_id_and_span(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"405f8100spiffs_obj_lu_find_id_and_span","filterText":"spiffs_obj_lu_find_id_and_span","insertText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"stack_thunk_ptr"}},{"label":"â€¢spiffs_cb_object_event(spiffs *fs, spiffs_page_object_ix *objix, int ev, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix new_pix, u32_t new_size)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4066d1c6spiffs_cb_object_event","filterText":"spiffs_cb_object_event","insertText":"spiffs_cb_object_event(${1:spiffs *fs}, ${2:spiffs_page_object_ix *objix}, ${3:int ev}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_span_ix spix}, ${6:spiffs_page_ix new_pix}, ${7:u32_t new_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_cb_object_event(${1:spiffs *fs}, ${2:spiffs_page_object_ix *objix}, ${3:int ev}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_span_ix spix}, ${6:spiffs_page_ix new_pix}, ${7:u32_t new_size})"}},{"label":"â€¢SPIFFS_CHECK_LOOKUP","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4068934fSPIFFS_CHECK_LOOKUP","filterText":"SPIFFS_CHECK_LOOKUP","insertText":"SPIFFS_CHECK_LOOKUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_LOOKUP"}},{"label":"â€¢SERIAL_7O1","kind":20,"detail":"SerialConfig","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"4068a03fSERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SERIAL_7O1"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"StreamString"}},{"label":"â€¢sntp_real_timestamp","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fsntp_real_timestamp","filterText":"sntp_real_timestamp","insertText":"sntp_real_timestamp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"sntp_real_timestamp"}},{"label":"â€¢spiffs_request_end()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4068a03fspiffs_request_end","filterText":"spiffs_request_end","insertText":"spiffs_request_end()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_request_end()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"stack_thunk_top"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"4068a03fstopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢swprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"4068a03fswprintf","filterText":"swprintf","insertText":"swprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"swprintf()"}},{"label":"â€¢swscanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"4068a03fswscanf","filterText":"swscanf","insertText":"swscanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"swscanf()"}},{"label":"â€¢SPIFFS_CHECK_PAGE","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"406a7657SPIFFS_CHECK_PAGE","filterText":"SPIFFS_CHECK_PAGE","insertText":"SPIFFS_CHECK_PAGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_PAGE"}},{"label":"â€¢spiffs_object_update_index_hdr(spiffs *fs, spiffs_fd *fd, spiffs_obj_id obj_id, spiffs_page_ix objix_hdr_pix, u8_t *new_objix_hdr_data, const u8_t *name, const u8_t *meta, u32_t size, spiffs_page_ix *new_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406a7657spiffs_object_update_index_hdr","filterText":"spiffs_object_update_index_hdr","insertText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})"}},{"label":"â€¢spiffs_fd_get(spiffs *fs, spiffs_file f, spiffs_fd **fd)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406c803cspiffs_fd_get","filterText":"spiffs_fd_get","insertText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})"}},{"label":"â€¢spiffs_obj_lu_find_entry_visitor(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, u8_t flags, spiffs_obj_id obj_id, spiffs_visitor_f v, const void *user_const_p, void *user_var_p, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"406c803cspiffs_obj_lu_find_entry_visitor","filterText":"spiffs_obj_lu_find_entry_visitor","insertText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})"}},{"label":"â€¢spiffs_page_allocate_data(spiffs *fs, spiffs_obj_id obj_id, spiffs_page_header *ph, u8_t *data, u32_t len, u32_t page_offs, u8_t finalize, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"407125b0spiffs_page_allocate_data","filterText":"spiffs_page_allocate_data","insertText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})"}},{"label":"â€¢SCL","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066SCL","filterText":"SCL","insertText":"SCL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SCL"}},{"label":"â€¢SDA","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066SDA","filterText":"SDA","insertText":"SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SDA"}},{"label":"â€¢SPIFFS_CHECK_DELETE_BAD_FILE","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_DELETE_BAD_FILE","filterText":"SPIFFS_CHECK_DELETE_BAD_FILE","insertText":"SPIFFS_CHECK_DELETE_BAD_FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_DELETE_BAD_FILE"}},{"label":"â€¢SPIFFS_CHECK_DELETE_PAGE","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_DELETE_PAGE","filterText":"SPIFFS_CHECK_DELETE_PAGE","insertText":"SPIFFS_CHECK_DELETE_PAGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_DELETE_PAGE"}},{"label":"â€¢SPIFFS_CHECK_ERROR","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_ERROR","filterText":"SPIFFS_CHECK_ERROR","insertText":"SPIFFS_CHECK_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_ERROR"}},{"label":"â€¢SPIFFS_CHECK_FIX_INDEX","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_FIX_INDEX","filterText":"SPIFFS_CHECK_FIX_INDEX","insertText":"SPIFFS_CHECK_FIX_INDEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_FIX_INDEX"}},{"label":"â€¢SPIFFS_CHECK_FIX_LOOKUP","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_FIX_LOOKUP","filterText":"SPIFFS_CHECK_FIX_LOOKUP","insertText":"SPIFFS_CHECK_FIX_LOOKUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_FIX_LOOKUP"}},{"label":"â€¢SPIFFS_CHECK_INDEX","kind":20,"detail":"spiffs_check_type","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_INDEX","filterText":"SPIFFS_CHECK_INDEX","insertText":"SPIFFS_CHECK_INDEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_INDEX"}},{"label":"â€¢SPIFFS_CHECK_PROGRESS","kind":20,"detail":"spiffs_check_report","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066SPIFFS_CHECK_PROGRESS","filterText":"SPIFFS_CHECK_PROGRESS","insertText":"SPIFFS_CHECK_PROGRESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_CHECK_PROGRESS"}},{"label":"â€¢SPIFFS_open(spiffs *fs, const char *path, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"spiffs_file","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nOpens/creates a file.  \n@param fs the file system struct  \n@param path the path of the new file  \n@param flags the flags for the open command, can be combinations of SPIFFS_O_APPEND, SPIFFS_O_TRUNC, SPIFFS_O_CREAT, SPIFFS_O_RDONLY,  \nSPIFFS_O_WRONLY, SPIFFS_O_RDWR, SPIFFS_O_DIRECT, SPIFFS_O_EXCL  \n@param mode ignored, for posix compliance"},"sortText":"4071b066SPIFFS_open","filterText":"SPIFFS_open","insertText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})"}},{"label":"â€¢spiffs_DIR","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_DIR","filterText":"spiffs_DIR","insertText":"spiffs_DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_DIR"}},{"label":"â€¢spiffs_cache_fd_release(spiffs *fs, spiffs_cache_page *cp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_cache_fd_release","filterText":"spiffs_cache_fd_release","insertText":"spiffs_cache_fd_release(${1:spiffs *fs}, ${2:spiffs_cache_page *cp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_cache_fd_release(${1:spiffs *fs}, ${2:spiffs_cache_page *cp})"}},{"label":"â€¢spiffs_cache_page_get_by_fd(spiffs *fs, spiffs_fd *fd)","kind":3,"detail":"spiffs_cache_page *","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_cache_page_get_by_fd","filterText":"spiffs_cache_page_get_by_fd","insertText":"spiffs_cache_page_get_by_fd(${1:spiffs *fs}, ${2:spiffs_fd *fd})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_cache_page_get_by_fd(${1:spiffs *fs}, ${2:spiffs_fd *fd})"}},{"label":"â€¢spiffs_dirent","kind":22,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_dirent","filterText":"spiffs_dirent","insertText":"spiffs_dirent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_dirent"}},{"label":"â€¢spiffs_erase_block(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_erase_block","filterText":"spiffs_erase_block","insertText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢spiffs_fd_find_new(spiffs *fs, spiffs_fd **fd, const char *name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_fd_find_new","filterText":"spiffs_fd_find_new","insertText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})"}},{"label":"â€¢spiffs_flags","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file descriptor flags"},"sortText":"4071b066spiffs_flags","filterText":"spiffs_flags","insertText":"spiffs_flags","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_flags"}},{"label":"â€¢spiffs_gc_check(spiffs *fs, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_gc_check","filterText":"spiffs_gc_check","insertText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})"}},{"label":"â€¢spiffs_gc_quick(spiffs *fs, u16_t max_free_pages)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_gc_quick","filterText":"spiffs_gc_quick","insertText":"spiffs_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})"}},{"label":"â€¢spiffs_ix_map","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`"},"sortText":"4071b066spiffs_ix_map","filterText":"spiffs_ix_map","insertText":"spiffs_ix_map","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_ix_map"}},{"label":"â€¢spiffs_mode","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file mode"},"sortText":"4071b066spiffs_mode","filterText":"spiffs_mode","insertText":"spiffs_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_mode"}},{"label":"â€¢spiffs_obj_lu_find_free(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_find_free","filterText":"spiffs_obj_lu_find_free","insertText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})"}},{"label":"â€¢spiffs_obj_lu_find_free_obj_id(spiffs *fs, spiffs_obj_id *obj_id, const u8_t *conflicting_name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_find_free_obj_id","filterText":"spiffs_obj_lu_find_free_obj_id","insertText":"spiffs_obj_lu_find_free_obj_id(${1:spiffs *fs}, ${2:spiffs_obj_id *obj_id}, ${3:const u8_t *conflicting_name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_obj_lu_find_free_obj_id(${1:spiffs *fs}, ${2:spiffs_obj_id *obj_id}, ${3:const u8_t *conflicting_name})"}},{"label":"â€¢spiffs_obj_lu_scan(spiffs *fs)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_obj_lu_scan","filterText":"spiffs_obj_lu_scan","insertText":"spiffs_obj_lu_scan(${1:spiffs *fs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_obj_lu_scan(${1:spiffs *fs})"}},{"label":"â€¢spiffs_object_create(spiffs *fs, spiffs_obj_id obj_id, const u8_t *name, const u8_t *meta, spiffs_obj_type type, spiffs_page_ix *objix_hdr_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_create","filterText":"spiffs_object_create","insertText":"spiffs_object_create(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:const u8_t *name}, ${4:const u8_t *meta}, ${5:spiffs_obj_type type}, ${6:spiffs_page_ix *objix_hdr_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_object_create(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:const u8_t *name}, ${4:const u8_t *meta}, ${5:spiffs_obj_type type}, ${6:spiffs_page_ix *objix_hdr_pix})"}},{"label":"â€¢spiffs_object_find_object_index_header_by_name(spiffs *fs, const u8_t *name, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_find_object_index_header_by_name","filterText":"spiffs_object_find_object_index_header_by_name","insertText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})"}},{"label":"â€¢spiffs_object_open_by_page(spiffs *fs, spiffs_page_ix pix, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_open_by_page","filterText":"spiffs_object_open_by_page","insertText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})"}},{"label":"â€¢spiffs_object_read(spiffs_fd *fd, u32_t offset, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_read","filterText":"spiffs_object_read","insertText":"spiffs_object_read(${1:spiffs_fd *fd}, ${2:u32_t offset}, ${3:u32_t len}, ${4:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_object_read(${1:spiffs_fd *fd}, ${2:u32_t offset}, ${3:u32_t len}, ${4:u8_t *dst})"}},{"label":"â€¢spiffs_object_truncate(spiffs_fd *fd, u32_t new_len, u8_t remove_object)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_object_truncate","filterText":"spiffs_object_truncate","insertText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})"}},{"label":"â€¢spiffs_page_move(spiffs *fs, spiffs_file fh, u8_t *page_data, spiffs_obj_id obj_id, spiffs_page_header *page_hdr, spiffs_page_ix src_pix, spiffs_page_ix *dst_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_page_move","filterText":"spiffs_page_move","insertText":"spiffs_page_move(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u8_t *page_data}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_page_header *page_hdr}, ${6:spiffs_page_ix src_pix}, ${7:spiffs_page_ix *dst_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_page_move(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u8_t *page_data}, ${4:spiffs_obj_id obj_id}, ${5:spiffs_page_header *page_hdr}, ${6:spiffs_page_ix src_pix}, ${7:spiffs_page_ix *dst_pix})"}},{"label":"â€¢spiffs_phys_cpy(spiffs *fs, spiffs_file fh, u32_t dst, u32_t src, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_phys_cpy","filterText":"spiffs_phys_cpy","insertText":"spiffs_phys_cpy(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t dst}, ${4:u32_t src}, ${5:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_phys_cpy(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t dst}, ${4:u32_t src}, ${5:u32_t len})"}},{"label":"â€¢spiffs_populate_ix_map(spiffs *fs, spiffs_fd *fd, u32_t vec_entry_start, u32_t vec_entry_end)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4071b066spiffs_populate_ix_map","filterText":"spiffs_populate_ix_map","insertText":"spiffs_populate_ix_map(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:u32_t vec_entry_start}, ${4:u32_t vec_entry_end})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_populate_ix_map(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:u32_t vec_entry_start}, ${4:u32_t vec_entry_end})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"4071b066spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"spiffs_stat"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"step_A"}},{"label":"â€¢step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"step_B"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"step_C"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"step_a"}},{"label":"â€¢experimental::crypto::SHA1","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-1 ####################"},"sortText":"4083b5beSHA1","filterText":"SHA1","insertText":"experimental::crypto::SHA1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"experimental::crypto::SHA1"}},{"label":"â€¢experimental::crypto::SHA224","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-224 ####################"},"sortText":"4083b5beSHA224","filterText":"SHA224","insertText":"experimental::crypto::SHA224","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"experimental::crypto::SHA224"}},{"label":"â€¢experimental::crypto::SHA256","kind":22,"documentation":{"kind":"markdown","value":"From `\"Crypto.h\"`  \n\\#################### SHA-256 ####################"},"sortText":"4083b5beSHA256","filterText":"SHA256","insertText":"experimental::crypto::SHA256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":7}},"newText":"experimental::crypto::SHA256"}}]},"jsonrpc":"2.0"}Content-Length: 363

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 468

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":21,"character":7},"end":{"line":21,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":7}},"message":"Use of undeclared identifier 's'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":58,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":223},"contentChanges":[{"range":{"start":{"line":21,"character":7},"end":{"line":21,"character":7}},"rangeLength":0,"text":"t"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":59,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":21,"character":8},"context":{"triggerKind":3}}}
>>>
Content-Length: 37763

{"id":59,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3eeffa26status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"status"}},{"label":" size_t","kind":8,"sortText":"3ef37820size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"size_t"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"struct"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"String"}},{"label":"â€¢stpcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpcpy","filterText":"stpcpy","insertText":"stpcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stpcpy()"}},{"label":"â€¢stpncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpncpy","filterText":"stpncpy","insertText":"stpncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stpncpy()"}},{"label":"â€¢strcasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strcasecmp()"}},{"label":"â€¢strcat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strcat()"}},{"label":"â€¢strchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strchr()"}},{"label":"â€¢strcmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strcmp()"}},{"label":"â€¢strcoll()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strcoll()"}},{"label":"â€¢strcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strcpy()"}},{"label":"â€¢strcspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strcspn()"}},{"label":"â€¢strdup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strdup()"}},{"label":"â€¢strerror()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrerror","filterText":"strerror","insertText":"strerror()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strerror()"}},{"label":"â€¢strlcat()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strlcat()"}},{"label":"â€¢strlcpy()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strlcpy()"}},{"label":"â€¢strlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlen","filterText":"strlen","insertText":"strlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strlen()"}},{"label":"â€¢strlwr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strlwr()"}},{"label":"â€¢strncasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncasecmp()"}},{"label":"â€¢strncat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncat","filterText":"strncat","insertText":"strncat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncat()"}},{"label":"â€¢strncmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncmp()"}},{"label":"â€¢strncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncpy()"}},{"label":"â€¢strndup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrndup","filterText":"strndup","insertText":"strndup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strndup()"}},{"label":"â€¢strnlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strnlen()"}},{"label":"â€¢strpbrk()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strpbrk()"}},{"label":"â€¢strrchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strrchr()"}},{"label":"â€¢strsep()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsep","filterText":"strsep","insertText":"strsep()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strsep()"}},{"label":"â€¢strsignal()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsignal","filterText":"strsignal","insertText":"strsignal()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strsignal()"}},{"label":"â€¢strspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strspn()"}},{"label":"â€¢strstr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strstr()"}},{"label":"â€¢strtod()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtod()"}},{"label":"â€¢strtof()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtof","filterText":"strtof","insertText":"strtof()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtof()"}},{"label":"â€¢strtok()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok","filterText":"strtok","insertText":"strtok()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtok()"}},{"label":"â€¢strtok_r()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtok_r()"}},{"label":"â€¢strtol()","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtol()"}},{"label":"â€¢strtold(const char *, char **)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":"â€¢strtoll()","kind":3,"detail":"long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoll","filterText":"strtoll","insertText":"strtoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtoll()"}},{"label":"â€¢strtoul()","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtoul()"}},{"label":"â€¢strtoull()","kind":3,"detail":"unsigned long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtoull","filterText":"strtoull","insertText":"strtoull()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtoull()"}},{"label":"â€¢strupr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strupr()"}},{"label":"â€¢strxfrm()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strxfrm()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"StringSumHelper"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"Stream"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"405bb6c8s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"s32_t"}},{"label":"â€¢strncasecmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncasecmp_P()"}},{"label":"â€¢strncat_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncat_P","filterText":"strncat_P","insertText":"strncat_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncat_P()"}},{"label":"â€¢strncmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncmp_P()"}},{"label":"â€¢strncpy_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strncpy_P()"}},{"label":"â€¢strnlen_P()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strnlen_P()"}},{"label":"â€¢strstr_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strstr_P","filterText":"strstr_P","insertText":"strstr_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strstr_P()"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_ptr"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"StreamString"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stack_thunk_top"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"4068a03fstopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢strftime()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrftime","filterText":"strftime","insertText":"strftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strftime()"}},{"label":"â€¢strptime()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrptime","filterText":"strptime","insertText":"strptime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strptime()"}},{"label":"â€¢strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fstrtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"4068a03fstrtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"stat()"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_A"}},{"label":"â€¢step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_B"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_C"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_a"}},{"label":"â€¢step_b","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_b","filterText":"step_b","insertText":"step_b","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_b"}},{"label":"â€¢step_c","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_c","filterText":"step_c","insertText":"step_c","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_c"}},{"label":"â€¢step_d","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_d","filterText":"step_d","insertText":"step_d","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"step_d"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"408c559bsetTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"setTZ(${1:const char *tz})"}},{"label":"â€¢ssize_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bssize_t","filterText":"ssize_t","insertText":"ssize_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"ssize_t"}},{"label":"â€¢suseconds_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bsuseconds_t","filterText":"suseconds_t","insertText":"suseconds_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"suseconds_t"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"station_info"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"station_status_t"}},{"label":"â€¢SERIAL_TX_ONLY","kind":20,"detail":"SerialMode","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"409cf05eSERIAL_TX_ONLY","filterText":"SERIAL_TX_ONLY","insertText":"SERIAL_TX_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"SERIAL_TX_ONLY"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"40ae6761STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"STATUS"}},{"label":"â€¢std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"40b198efstreambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::streambuf"}},{"label":"â€¢std::stringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char memory buffers."},"sortText":"40b198efstringbuf","filterText":"stringbuf","insertText":"std::stringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::stringbuf"}},{"label":"â€¢std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"40b198efstringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::stringstream"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40b86274streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":8}},"newText":"std::streamoff"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":224},"contentChanges":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":8}},"rangeLength":0,"text":"a"}]}}Content-Length: 248

{"jsonrpc":"2.0","id":60,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":21,"character":9},"context":{"triggerKind":3}}}
>>>
Content-Length: 364

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}Content-Length: 48673

{"id":60,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3eeffa26status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"status"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stack_thunk_top"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"4068a03fstartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"stat()"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4092d0aastep_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"step_A"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4092d0aastep_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"step_a"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"station_info"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"station_status_t"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"409f7120twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"twi_status()"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"40b86273STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATUS"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢uart_start_detect_baudrate(int uart_nr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"uart.h\"`"},"sortText":"40cf659euart_start_detect_baudrate","filterText":"uart_start_detect_baudrate","insertText":"uart_start_detect_baudrate(${1:int uart_nr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"uart_start_detect_baudrate(${1:int uart_nr})"}},{"label":"â€¢system_os_task(ETSTask task, uint8 prio, ETSEvent *queue, uint8 qlen)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40d158easystem_os_task","filterText":"system_os_task","insertText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"40d9f877SPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40d9f877print_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40d9f877spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40d9f877ummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"ummStats"}},{"label":"â€¢cont_repaint_stack(cont_t *cont)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"cont.h\"`  \nRepaint the stack from the current SP to the end, to allow individual routines' stack usages to be calculated by re-painting, checking current free, running the routine, then checking the max free"},"sortText":"40e8a03fcont_repaint_stack","filterText":"cont_repaint_stack","insertText":"cont_repaint_stack(${1:cont_t *cont})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"cont_repaint_stack(${1:cont_t *cont})"}},{"label":"â€¢Event_StaMode_AuthMode_Change_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_AuthMode_Change_t","filterText":"Event_StaMode_AuthMode_Change_t","insertText":"Event_StaMode_AuthMode_Change_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"Event_StaMode_AuthMode_Change_t"}},{"label":"â€¢Event_StaMode_Connected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Connected_t","filterText":"Event_StaMode_Connected_t","insertText":"Event_StaMode_Connected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"Event_StaMode_Connected_t"}},{"label":"â€¢Event_StaMode_Disconnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Disconnected_t","filterText":"Event_StaMode_Disconnected_t","insertText":"Event_StaMode_Disconnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"Event_StaMode_Disconnected_t"}},{"label":"â€¢Event_StaMode_Got_IP_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Got_IP_t","filterText":"Event_StaMode_Got_IP_t","insertText":"Event_StaMode_Got_IP_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"Event_StaMode_Got_IP_t"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_status_led_uninstall()"}},{"label":" sntp_startup_delay_MS_rfc_not_less_than_60000()","kind":3,"detail":"uint32_t","sortText":"4108df65sntp_startup_delay_MS_rfc_not_less_than_60000","filterText":"sntp_startup_delay_MS_rfc_not_less_than_60000","insertText":"sntp_startup_delay_MS_rfc_not_less_than_60000()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"sntp_startup_delay_MS_rfc_not_less_than_60000()"}},{"label":"â€¢std::is_standard_layout\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_standard_layout"},"sortText":"410f326bis_standard_layout","filterText":"is_standard_layout","insertText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢wifi_wps_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"41172137wifi_wps_start","filterText":"wifi_wps_start","insertText":"wifi_wps_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"wifi_wps_start()"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"411c96d9br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"br_eax_state"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"411c96d9br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢esp2glue_dhcp_start(int netif_idx)","kind":3,"detail":"err_glue_t","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcp_start","filterText":"esp2glue_dhcp_start","insertText":"esp2glue_dhcp_start(${1:int netif_idx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"esp2glue_dhcp_start(${1:int netif_idx})"}},{"label":"â€¢esp2glue_dhcps_start(struct ip_info *info)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcps_start","filterText":"esp2glue_dhcps_start","insertText":"esp2glue_dhcps_start(${1:struct ip_info *info})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"esp2glue_dhcps_start(${1:struct ip_info *info})"}},{"label":"â€¢ETSTask","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"42543ef9ETSTask","filterText":"ETSTask","insertText":"ETSTask","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"ETSTask"}},{"label":"â€¢std::__stable_partition_adaptive(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pointer __buffer, _Distance __buffer_size)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_first != \\_\\_last and !\\_\\_pred(\\*\\_\\_first) and \\_\\_len == distance(\\_\\_first, \\_\\_last).  \n!\\_\\_pred(\\*\\_\\_first) allows us to guarantee that we don't move-assign an element onto itself."},"sortText":"42b79ecd__stable_partition_adaptive","filterText":"__stable_partition_adaptive","insertText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})"}},{"label":"â€¢std::__stable_sort_adaptive(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"42b79ecd__stable_sort_adaptive","filterText":"__stable_sort_adaptive","insertText":"std::__stable_sort_adaptive($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__stable_sort_adaptive($0)"}},{"label":"â€¢std::__inplace_stable_partition(_ForwardIterator __first, _Predicate __pred, _Distance __len)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_len != 0 and !\\_\\_pred(\\*\\_\\_first),  \nsame as \\_\\_stable_partition_adaptive."},"sortText":"42d43ef9__inplace_stable_partition","filterText":"__inplace_stable_partition","insertText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})"}},{"label":"â€¢std::__inplace_stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function for the stable sorting routines."},"sortText":"42d43ef9__inplace_stable_sort","filterText":"__inplace_stable_sort","insertText":"std::__inplace_stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__inplace_stable_sort($0)"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42dae0be__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":9}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}}]},"jsonrpc":"2.0"}Content-Length: 876

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'sta'; did you mean 'std'? (fix available)\n\nc:\\users\\vantr\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506\\bin\\..\\lib\\gcc\\xtensa-lx106-elf\\4.8.2\\..\\..\\..\\..\\xtensa-lx106-elf\\include\\c++\\4.8.2\\bits\\stl_algo.h:71:11:\nnote: 'std' declared here"},{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":9}},"severity":1,"code":"unexpected_namespace","source":"clang","message":"Unexpected namespace name 'std': expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":225},"contentChanges":[{"range":{"start":{"line":21,"character":9},"end":{"line":21,"character":9}},"rangeLength":0,"text":"t"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":61,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":21,"character":10},"context":{"triggerKind":3}}}
>>>
Content-Length: 45869

{"id":61,"result":{"isIncomplete":false,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3eeffa26status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"status"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stat"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stat()"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4078c848stack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"stack_thunk_top"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"407babd0twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"twi_status()"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"station_info"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"station_status_t"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"40bc528dSPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40bc528dprint_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40bc528dspiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40bc528dummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"ummStats"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"40bd5ffeSTATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATUS"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢wps_cb_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40ee74c3wps_cb_status","filterText":"wps_cb_status","insertText":"wps_cb_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wps_cb_status"}},{"label":" UMM_STATISTICS","kind":8,"sortText":"40f1b066UMM_STATISTICS","filterText":"UMM_STATISTICS","insertText":"UMM_STATISTICS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"UMM_STATISTICS"}},{"label":" UMM_STATISTICS_t","kind":22,"sortText":"40f1b066UMM_STATISTICS_t","filterText":"UMM_STATISTICS_t","insertText":"UMM_STATISTICS_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"UMM_STATISTICS_t"}},{"label":"â€¢spiffs_gc_erase_page_stats(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"40f1b066spiffs_gc_erase_page_stats","filterText":"spiffs_gc_erase_page_stats","insertText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"40f1de48br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_eax_state"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"40f1de48br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢gpio_pin_intr_state_set(uint32 i, GPIO_INT_TYPE intr_state)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"40fd02afgpio_pin_intr_state_set","filterText":"gpio_pin_intr_state_set","insertText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})"}},{"label":"â€¢wifi_softap_dhcps_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_dhcps_status","filterText":"wifi_softap_dhcps_status","insertText":"wifi_softap_dhcps_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_softap_dhcps_status()"}},{"label":"â€¢wifi_softap_free_station_info()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_free_station_info","filterText":"wifi_softap_free_station_info","insertText":"wifi_softap_free_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_softap_free_station_info()"}},{"label":"â€¢wifi_softap_get_station_info()","kind":3,"detail":"struct station_info *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_info","filterText":"wifi_softap_get_station_info","insertText":"wifi_softap_get_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_softap_get_station_info()"}},{"label":"â€¢wifi_softap_get_station_num()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_num","filterText":"wifi_softap_get_station_num","insertText":"wifi_softap_get_station_num()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"wifi_softap_get_station_num()"}},{"label":"â€¢br_md5_set_state(br_md5_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5 running state.  \nThe running state for MD5 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5_set_state","filterText":"br_md5_set_state","insertText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_md5sha1_set_state(br_md5sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5sha1_set_state","filterText":"br_md5sha1_set_state","insertText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha1_set_state(br_sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-1 running state.  \nThe running state for SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha1_set_state","filterText":"br_sha1_set_state","insertText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha224_set_state(br_sha224_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-224 running state.  \nThe running state for SHA-224 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha224_set_state","filterText":"br_sha224_set_state","insertText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha384_set_state(br_sha384_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-384 running state.  \nThe running state for SHA-384 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha384_set_state","filterText":"br_sha384_set_state","insertText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_ssl_engine_current_state(const br_ssl_engine_context *cc)","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_ssl.h\"`  \n\\\\brief Get the current engine state.  \nAn SSL engine (client or server) has, at any time, a state which is the combination of zero, one or more of these flags:  \n\\- `BR_SSL_CLOSED`  \nEngine is finished, no more I/O (until next reset).  \n\\- `BR_SSL_SENDREC`  \nEngine has some bytes to send to the peer.  \n\\- `BR_SSL_RECVREC`  \nEngine expects some bytes from the peer.  \n\\- `BR_SSL_SENDAPP`  \nEngine may receive application data to send (or flush).  \n\\- `BR_SSL_RECVAPP`  \nEngine has obtained some application data from the peer,  \nthat should be read by the caller.  \nIf no flag at all is set (state value is 0), then the engine is not fully initialised yet.  \nThe `BR_SSL_CLOSED` flag is exclusive; when it is set, no other flag is set. To distinguish between a normal closure and an error, use  \n`br_ssl_engine_last_error()`.  \nGenerally speaking, `BR_SSL_SENDREC` and `BR_SSL_SENDAPP` are mutually exclusive: the input buffer, at any point, either accumulates plaintext data, or contains an assembled record that is being sent.  \nSimilarly, `BR_SSL_RECVREC` and `BR_SSL_RECVAPP` are mutually exclusive.  \nThis may change in a future library version.  \n\\\\param cc SSL engine context.  \n\\\\return the current engine state."},"sortText":"411c96d9br_ssl_engine_current_state","filterText":"br_ssl_engine_current_state","insertText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42b198ee__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42c63cd7__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":10}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":226},"contentChanges":[{"range":{"start":{"line":21,"character":10},"end":{"line":21,"character":10}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'stat' (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 904

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statu'; did you mean 'status'? (fix available)\n\ngiu_nut_dao_led.ino.cpp:15:9: note: 'status' declared here"},{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":14}},"severity":3,"message":"'status' declared here\n\ngiu_nut_dao_led.ino.cpp:29:7: error: use of undeclared identifier 'statu'; did you mean 'status'?"},{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":227},"contentChanges":[{"range":{"start":{"line":21,"character":11},"end":{"line":21,"character":11}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":227}}}Content-Length: 290

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":228},"contentChanges":[{"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":12}},"rangeLength":0,"text":" "}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":229},"contentChanges":[{"range":{"start":{"line":21,"character":13},"end":{"line":21,"character":13}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":230},"contentChanges":[{"range":{"start":{"line":21,"character":14},"end":{"line":21,"character":14}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":231},"contentChanges":[{"range":{"start":{"line":21,"character":15},"end":{"line":21,"character":15}},"rangeLength":0,"text":"1"}]}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":232},"contentChanges":[{"range":{"start":{"line":21,"character":16},"end":{"line":21,"character":16}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":21,"character":17},"end":{"line":21,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":232}}}Content-Length: 216

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":23,"character":26}}}
>>>
Content-Length: 286

{"id":64,"result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":33}}},"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":23,"character":27}}}
>>>
Content-Length: 302

{"id":65,"result":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":16}},"kind":1},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":21}},"kind":1},{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":33}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 406

{"id":66,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///D:/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","selection":{"start":{"line":23,"character":22},"end":{"line":23,"character":33}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":233},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":33}},"rangeLength":11,"text":""}]}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":234},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 290

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}Content-Length: 384

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":25},"end":{"line":23,"character":26}},"severity":1,"code":"extraneous_token_before_semi","source":"clang","message":"Extraneous ')' before ';' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":235},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 290

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}Content-Length: 384

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":25}},"severity":1,"code":"extraneous_token_before_semi","source":"clang","message":"Extraneous ')' before ';' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":236},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":237},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":238},"contentChanges":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 290

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":70,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":239},"contentChanges":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"rangeLength":0,"text":"s"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":71,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":23,"character":22},"context":{"triggerKind":1}}}
>>>
Content-Length: 51805

{"id":71,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3e8c8687status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"status"}},{"label":" size_t","kind":8,"sortText":"3ec4a02bsize_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"size_t"}},{"label":"â€¢SPIFFS_write(spiffs *fs, spiffs_file fh, void *buf, s32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nWrites to given filehandle.  \n@param fs the file system struct  \n@param fh the filehandle  \n@param buf the data to write  \n@param len how much to write  \n@returns number of bytes written, or -1 if error"},"sortText":"3efa9560SPIFFS_write","filterText":"SPIFFS_write","insertText":"SPIFFS_write(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:void *buf}, ${4:s32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_write(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:void *buf}, ${4:s32_t len})"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"struct"}},{"label":"â€¢scanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edscanf","filterText":"scanf","insertText":"scanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"scanf()"}},{"label":"â€¢setenv()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edsetenv","filterText":"setenv","insertText":"setenv()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setenv()"}},{"label":"â€¢setlinebuf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsetlinebuf","filterText":"setlinebuf","insertText":"setlinebuf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setlinebuf()"}},{"label":"â€¢setvbuf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsetvbuf","filterText":"setvbuf","insertText":"setvbuf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setvbuf()"}},{"label":"â€¢siprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsiprintf","filterText":"siprintf","insertText":"siprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"siprintf()"}},{"label":"â€¢siscanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsiscanf","filterText":"siscanf","insertText":"siscanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"siscanf()"}},{"label":"â€¢sniprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsniprintf","filterText":"sniprintf","insertText":"sniprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sniprintf()"}},{"label":"â€¢snprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsnprintf","filterText":"snprintf","insertText":"snprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"snprintf()"}},{"label":"â€¢sprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsprintf","filterText":"sprintf","insertText":"sprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sprintf()"}},{"label":"â€¢sscanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"3f0f66edsscanf","filterText":"sscanf","insertText":"sscanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sscanf()"}},{"label":"â€¢strcasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strcasecmp()"}},{"label":"â€¢strcmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcmp","filterText":"strcmp","insertText":"strcmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strcmp()"}},{"label":"â€¢strcoll()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcoll","filterText":"strcoll","insertText":"strcoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strcoll()"}},{"label":"â€¢strcspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcspn","filterText":"strcspn","insertText":"strcspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strcspn()"}},{"label":"â€¢strlcat()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrlcat","filterText":"strlcat","insertText":"strlcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strlcat()"}},{"label":"â€¢strlcpy()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrlcpy","filterText":"strlcpy","insertText":"strlcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strlcpy()"}},{"label":"â€¢strlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrlen","filterText":"strlen","insertText":"strlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strlen()"}},{"label":"â€¢strncasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strncasecmp()"}},{"label":"â€¢strncmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrncmp","filterText":"strncmp","insertText":"strncmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strncmp()"}},{"label":"â€¢strnlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrnlen","filterText":"strnlen","insertText":"strnlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strnlen()"}},{"label":"â€¢strspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrspn","filterText":"strspn","insertText":"strspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strspn()"}},{"label":"â€¢strtol()","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtol","filterText":"strtol","insertText":"strtol()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strtol()"}},{"label":"â€¢strtoll()","kind":3,"detail":"long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtoll","filterText":"strtoll","insertText":"strtoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strtoll()"}},{"label":"â€¢strtoul()","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtoul","filterText":"strtoul","insertText":"strtoul()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strtoul()"}},{"label":"â€¢strtoull()","kind":3,"detail":"unsigned long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtoull","filterText":"strtoull","insertText":"strtoull()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strtoull()"}},{"label":"â€¢strxfrm()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrxfrm","filterText":"strxfrm","insertText":"strxfrm()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strxfrm()"}},{"label":"â€¢system()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edsystem","filterText":"system","insertText":"system()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"system()"}},{"label":" setup()","kind":3,"detail":"void","sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setup()"}},{"label":"â€¢spiffs_phys_rd(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f1afe2fspiffs_phys_rd","filterText":"spiffs_phys_rd","insertText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_phys_rd(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *dst})"}},{"label":" SPIWrite(uint32_t addr, void *src, size_t size)","kind":3,"detail":"int","sortText":"3f1f6ec4SPIWrite","filterText":"SPIWrite","insertText":"SPIWrite(${1:uint32_t addr}, ${2:void *src}, ${3:size_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIWrite(${1:uint32_t addr}, ${2:void *src}, ${3:size_t size})"}},{"label":"â€¢spiffs_phys_wr(spiffs *fs, u8_t op, spiffs_file fh, u32_t addr, u32_t len, u8_t *src)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f2cb3despiffs_phys_wr","filterText":"spiffs_phys_wr","insertText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_phys_wr(${1:spiffs *fs}, ${2:u8_t op}, ${3:spiffs_file fh}, ${4:u32_t addr}, ${5:u32_t len}, ${6:u8_t *src})"}},{"label":"â€¢spiffs_page_delete(spiffs *fs, spiffs_page_ix pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f32f13fspiffs_page_delete","filterText":"spiffs_page_delete","insertText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_page_delete(${1:spiffs *fs}, ${2:spiffs_page_ix pix})"}},{"label":" secureRandom(â€¦)","kind":3,"detail":"[2 overloads]","sortText":"3f34f201secureRandom","filterText":"secureRandom","insertText":"secureRandom($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"secureRandom($0)"}},{"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","kind":3,"detail":"uint8_t","sortText":"3f34f201shiftIn","filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})"}},{"label":"â€¢snprintf_P(char *str, size_t strSize, const char *formatP, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/stdio.h\"`"},"sortText":"3f34f201snprintf_P","filterText":"snprintf_P","insertText":"snprintf_P(${1:char *str}, ${2:size_t strSize}, ${3:const char *formatP, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"snprintf_P(${1:char *str}, ${2:size_t strSize}, ${3:const char *formatP, ...})"}},{"label":"â€¢sprintf_P(char *str, const char *formatP, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/stdio.h\"`"},"sortText":"3f34f201sprintf_P","filterText":"sprintf_P","insertText":"sprintf_P(${1:char *str}, ${2:const char *formatP, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sprintf_P(${1:char *str}, ${2:const char *formatP, ...})"}},{"label":"â€¢strncasecmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"3f34f201strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strncasecmp_P()"}},{"label":"â€¢strncmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"3f34f201strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strncmp_P()"}},{"label":"â€¢strnlen_P()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"3f34f201strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strnlen_P()"}},{"label":"â€¢spiffs_fd_return(spiffs *fs, spiffs_file f)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f37613fspiffs_fd_return","filterText":"spiffs_fd_return","insertText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_fd_return(${1:spiffs *fs}, ${2:spiffs_file f})"}},{"label":"â€¢spiffs_obj_lu_find_id_and_span(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f37613fspiffs_obj_lu_find_id_and_span","filterText":"spiffs_obj_lu_find_id_and_span","insertText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_obj_lu_find_id_and_span(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_span_ix spix}, ${4:spiffs_page_ix exclusion_pix}, ${5:spiffs_page_ix *pix})"}},{"label":"â€¢sntp_real_timestamp","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"3f42c84esntp_real_timestamp","filterText":"sntp_real_timestamp","insertText":"sntp_real_timestamp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sntp_real_timestamp"}},{"label":"â€¢sqrt32(uint32_t n)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"3f42c84esqrt32","filterText":"sqrt32","insertText":"sqrt32(${1:uint32_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sqrt32(${1:uint32_t n})"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"stack_thunk_refcnt"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"3f42c84estartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"3f42c84estopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢strftime()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"3f42c84estrftime","filterText":"strftime","insertText":"strftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strftime()"}},{"label":"â€¢strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"3f42c84estrtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"3f42c84estrtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢swprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"3f42c84eswprintf","filterText":"swprintf","insertText":"swprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"swprintf()"}},{"label":"â€¢swscanf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"3f42c84eswscanf","filterText":"swscanf","insertText":"swscanf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"swscanf()"}},{"label":"â€¢spiffs_object_update_index_hdr(spiffs *fs, spiffs_fd *fd, spiffs_obj_id obj_id, spiffs_page_ix objix_hdr_pix, u8_t *new_objix_hdr_data, const u8_t *name, const u8_t *meta, u32_t size, spiffs_page_ix *new_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4513ecspiffs_object_update_index_hdr","filterText":"spiffs_object_update_index_hdr","insertText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_update_index_hdr(${1:spiffs *fs}, ${2:spiffs_fd *fd}, ${3:spiffs_obj_id obj_id}, ${4:spiffs_page_ix objix_hdr_pix}, ${5:u8_t *new_objix_hdr_data}, ${6:const u8_t *name}, ${7:const u8_t *meta}, ${8:u32_t size}, ${9:spiffs_page_ix *new_pix})"}},{"label":"â€¢spiffs_fd_get(spiffs *fs, spiffs_file f, spiffs_fd **fd)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f47a04bspiffs_fd_get","filterText":"spiffs_fd_get","insertText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_fd_get(${1:spiffs *fs}, ${2:spiffs_file f}, ${3:spiffs_fd **fd})"}},{"label":"â€¢spiffs_obj_lu_find_entry_visitor(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, u8_t flags, spiffs_obj_id obj_id, spiffs_visitor_f v, const void *user_const_p, void *user_var_p, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f47a04bspiffs_obj_lu_find_entry_visitor","filterText":"spiffs_obj_lu_find_entry_visitor","insertText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_obj_lu_find_entry_visitor(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:u8_t flags}, ${5:spiffs_obj_id obj_id}, ${6:spiffs_visitor_f v}, ${7:const void *user_const_p}, ${8:void *user_var_p}, ${9:spiffs_block_ix *block_ix}, ${10:int *lu_entry})"}},{"label":"â€¢spiffs_page_allocate_data(spiffs *fs, spiffs_obj_id obj_id, spiffs_page_header *ph, u8_t *data, u32_t len, u32_t page_offs, u8_t finalize, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4d6f1cspiffs_page_allocate_data","filterText":"spiffs_page_allocate_data","insertText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_page_allocate_data(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_page_header *ph}, ${4:u8_t *data}, ${5:u32_t len}, ${6:u32_t page_offs}, ${7:u8_t finalize}, ${8:spiffs_page_ix *pix})"}},{"label":"â€¢SCL","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"3f4e1c7fSCL","filterText":"SCL","insertText":"SCL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SCL"}},{"label":"â€¢SDA","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"3f4e1c7fSDA","filterText":"SDA","insertText":"SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SDA"}},{"label":"â€¢SPIFFS_bytes_to_ix_map_entries(spiffs *fs, u32_t bytes)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nUtility function to get number of spiffs_page_ix entries a map buffer must contain on order to map given amount of file data in bytes.  \nSee function SPIFFS_ix_map and SPIFFS_ix_map_entries_to_bytes.  \n@param fs the file system struct  \n@param bytes number of file data bytes to map  \n@return needed number of elements in a spiffs_page_ix array needed to map given amount of bytes in a file"},"sortText":"3f4e1c7fSPIFFS_bytes_to_ix_map_entries","filterText":"SPIFFS_bytes_to_ix_map_entries","insertText":"SPIFFS_bytes_to_ix_map_entries(${1:spiffs *fs}, ${2:u32_t bytes})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_bytes_to_ix_map_entries(${1:spiffs *fs}, ${2:u32_t bytes})"}},{"label":"â€¢SPIFFS_check(spiffs *fs)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nRuns a consistency check on given filesystem.  \n@param fs the file system struct"},"sortText":"3f4e1c7fSPIFFS_check","filterText":"SPIFFS_check","insertText":"SPIFFS_check(${1:spiffs *fs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_check(${1:spiffs *fs})"}},{"label":"â€¢SPIFFS_format(spiffs *fs)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nFormats the entire file system. All data will be lost.  \nThe filesystem must not be mounted when calling this.  \nNB: formatting is awkward. Due to backwards compatibility, SPIFFS_mount MUST be called prior to formatting in order to configure the filesystem.  \nIf SPIFFS_mount succeeds, SPIFFS_unmount must be called before calling SPIFFS_format.  \nIf SPIFFS_mount fails, SPIFFS_format can be called directly without calling SPIFFS_unmount first.  \n@param fs the file system struct"},"sortText":"3f4e1c7fSPIFFS_format","filterText":"SPIFFS_format","insertText":"SPIFFS_format(${1:spiffs *fs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_format(${1:spiffs *fs})"}},{"label":"â€¢SPIFFS_gc_quick(spiffs *fs, u16_t max_free_pages)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nTries to find a block where most or all pages are deleted, and erase that block if found. Does not care for wear levelling. Will not move pages around.  \nIf parameter max_free_pages are set to 0, only blocks with only deleted pages will be selected.  \nNB: the garbage collector is automatically called when spiffs needs free pages. The reason for this function is to give possibility to do background tidying when user knows the system is idle.  \nUse with care.  \nSetting max_free_pages to anything larger than zero will eventually wear flash more as a block containing free pages can be erased.  \nWill set err_no to SPIFFS_OK if a block was found and erased,  \nSPIFFS_ERR_NO_DELETED_BLOCK if no matching block was found,  \nor other error.  \n@param fs the file system struct  \n@param max_free_pages maximum number allowed free pages in block"},"sortText":"3f4e1c7fSPIFFS_gc_quick","filterText":"SPIFFS_gc_quick","insertText":"SPIFFS_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})"}},{"label":"â€¢SPIFFS_ix_map(spiffs *fs, spiffs_file fh, spiffs_ix_map *map, u32_t offset, u32_t len, spiffs_page_ix *map_buf)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nMaps the first level index lookup to a given memory map.  \nThis will make reading big files faster, as the memory map will be used for looking up data pages instead of searching for the indices on the physical medium. When mapping, all affected indicies are found and the information is copied to the array.  \nWhole file or only parts of it may be mapped. The index map will cover file contents from argument offset until and including arguments (offset+len).  \nIt is valid to map a longer range than the current file size. The map will then be populated when the file grows.  \nOn garbage collections and file data page movements, the map array will be automatically updated. Do not tamper with the map array, as this contains the references to the data pages. Modifying it from outside will corrupt any future readings using this file descriptor.  \nThe map will no longer be used when the file descriptor closed or the file is unmapped.  \nThis can be useful to get faster and more deterministic timing when reading large files, or when seeking and reading a lot within a file.  \n@param fs the file system struct  \n@param fh the file handle of the file to map  \n@param map a spiffs_ix_map struct, describing the index map  \n@param offset absolute file offset where to start the index map  \n@param len length of the mapping in actual file bytes  \n@param map_buf the array buffer for the look up data - number of required elements in the array can be derived from function SPIFFS_bytes_to_ix_map_entries given the length"},"sortText":"3f4e1c7fSPIFFS_ix_map","filterText":"SPIFFS_ix_map","insertText":"SPIFFS_ix_map(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:spiffs_ix_map *map}, ${4:u32_t offset}, ${5:u32_t len}, ${6:spiffs_page_ix *map_buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_ix_map(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:spiffs_ix_map *map}, ${4:u32_t offset}, ${5:u32_t len}, ${6:spiffs_page_ix *map_buf})"}},{"label":"â€¢SPIFFS_ix_remap(spiffs *fs, spiffs_file fh, u32_t offs)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nMoves the offset for the index map given in function SPIFFS_ix_map. Parts or all of the map buffer will repopulated.  \n@param fs the file system struct  \n@param fh the mapped file handle of the file to remap  \n@param offset new absolute file offset where to start the index map"},"sortText":"3f4e1c7fSPIFFS_ix_remap","filterText":"SPIFFS_ix_remap","insertText":"SPIFFS_ix_remap(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t offs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_ix_remap(${1:spiffs *fs}, ${2:spiffs_file fh}, ${3:u32_t offs})"}},{"label":"â€¢SPIFFS_ix_unmap(spiffs *fs, spiffs_file fh)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nUnmaps the index lookup from this filehandle. All future readings will proceed as normal, requiring reading of the first level indices from physical media.  \nThe map and map buffer given in function SPIFFS_ix_map will no longer be referenced by spiffs.  \nIt is not strictly necessary to unmap a file before closing it, as closing a file will automatically unmap it.  \n@param fs the file system struct  \n@param fh the file handle of the file to unmap"},"sortText":"3f4e1c7fSPIFFS_ix_unmap","filterText":"SPIFFS_ix_unmap","insertText":"SPIFFS_ix_unmap(${1:spiffs *fs}, ${2:spiffs_file fh})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_ix_unmap(${1:spiffs *fs}, ${2:spiffs_file fh})"}},{"label":"â€¢SPIFFS_mount(spiffs *fs, spiffs_config *config, u8_t *work, u8_t *fd_space, u32_t fd_space_size, void *cache, u32_t cache_size, spiffs_check_callback check_cb_f)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nInitializes the file system dynamic parameters and mounts the filesystem.  \nIf SPIFFS_USE_MAGIC is enabled the mounting may fail with SPIFFS_ERR_NOT_A_FS if the flash does not contain a recognizable file system.  \nIn this case, SPIFFS_format must be called prior to remounting.  \n@param fs the file system struct  \n@param config the physical and logical configuration of the file system  \n@param work a memory work buffer comprising 2\\*config-\u003elog_page_size bytes used throughout all file system operations  \n@param fd_space memory for file descriptors  \n@param fd_space_size memory size of file descriptors  \n@param cache memory for cache, may be null  \n@param cache_size memory size of cache  \n@param check_cb_f callback function for reporting during consistency checks"},"sortText":"3f4e1c7fSPIFFS_mount","filterText":"SPIFFS_mount","insertText":"SPIFFS_mount(${1:spiffs *fs}, ${2:spiffs_config *config}, ${3:u8_t *work}, ${4:u8_t *fd_space}, ${5:u32_t fd_space_size}, ${6:void *cache}, ${7:u32_t cache_size}, ${8:spiffs_check_callback check_cb_f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_mount(${1:spiffs *fs}, ${2:spiffs_config *config}, ${3:u8_t *work}, ${4:u8_t *fd_space}, ${5:u32_t fd_space_size}, ${6:void *cache}, ${7:u32_t cache_size}, ${8:spiffs_check_callback check_cb_f})"}},{"label":"â€¢SPIFFS_open(spiffs *fs, const char *path, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"spiffs_file","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nOpens/creates a file.  \n@param fs the file system struct  \n@param path the path of the new file  \n@param flags the flags for the open command, can be combinations of SPIFFS_O_APPEND, SPIFFS_O_TRUNC, SPIFFS_O_CREAT, SPIFFS_O_RDONLY,  \nSPIFFS_O_WRONLY, SPIFFS_O_RDWR, SPIFFS_O_DIRECT, SPIFFS_O_EXCL  \n@param mode ignored, for posix compliance"},"sortText":"3f4e1c7fSPIFFS_open","filterText":"SPIFFS_open","insertText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_open(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})"}},{"label":"â€¢SPIFFS_open_by_dirent(spiffs *fs, struct spiffs_dirent *e, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"spiffs_file","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nOpens a file by given dir entry.  \nOptimization purposes, when traversing a file system with SPIFFS_readdir a normal SPIFFS_open would need to traverse the filesystem again to find the file, whilst SPIFFS_open_by_dirent already knows where the file resides.  \n@param fs the file system struct  \n@param e the dir entry to the file  \n@param flags the flags for the open command, can be combinations of SPIFFS_APPEND, SPIFFS_TRUNC, SPIFFS_CREAT, SPIFFS_RD_ONLY,  \nSPIFFS_WR_ONLY, SPIFFS_RDWR, SPIFFS_DIRECT.  \nSPIFFS_CREAT will have no effect in this case.  \n@param mode ignored, for posix compliance"},"sortText":"3f4e1c7fSPIFFS_open_by_dirent","filterText":"SPIFFS_open_by_dirent","insertText":"SPIFFS_open_by_dirent(${1:spiffs *fs}, ${2:struct spiffs_dirent *e}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_open_by_dirent(${1:spiffs *fs}, ${2:struct spiffs_dirent *e}, ${3:spiffs_flags flags}, ${4:spiffs_mode mode})"}},{"label":"â€¢SPIFFS_remove(spiffs *fs, const char *path)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nRemoves a file by path  \n@param fs the file system struct  \n@param path the path of the file to remove"},"sortText":"3f4e1c7fSPIFFS_remove","filterText":"SPIFFS_remove","insertText":"SPIFFS_remove(${1:spiffs *fs}, ${2:const char *path})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_remove(${1:spiffs *fs}, ${2:const char *path})"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"3f4e1c7fSPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢setgid()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"3f4e1c7fsetgid","filterText":"setgid","insertText":"setgid()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setgid()"}},{"label":"â€¢sethostname()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"3f4e1c7fsethostname","filterText":"sethostname","insertText":"sethostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"sethostname()"}},{"label":"â€¢setpgid()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"3f4e1c7fsetpgid","filterText":"setpgid","insertText":"setpgid()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setpgid()"}},{"label":"â€¢setuid()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"3f4e1c7fsetuid","filterText":"setuid","insertText":"setuid()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"setuid()"}},{"label":"â€¢spiffs_erase_block(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_erase_block","filterText":"spiffs_erase_block","insertText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_erase_block(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢spiffs_fd_find_new(spiffs *fs, spiffs_fd **fd, const char *name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_fd_find_new","filterText":"spiffs_fd_find_new","insertText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_fd_find_new(${1:spiffs *fs}, ${2:spiffs_fd **fd}, ${3:const char *name})"}},{"label":"â€¢spiffs_gc_check(spiffs *fs, u32_t len)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_gc_check","filterText":"spiffs_gc_check","insertText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_gc_check(${1:spiffs *fs}, ${2:u32_t len})"}},{"label":"â€¢spiffs_gc_find_candidate(spiffs *fs, spiffs_block_ix **block_candidate, int *candidate_count, char fs_crammed)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_gc_find_candidate","filterText":"spiffs_gc_find_candidate","insertText":"spiffs_gc_find_candidate(${1:spiffs *fs}, ${2:spiffs_block_ix **block_candidate}, ${3:int *candidate_count}, ${4:char fs_crammed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_gc_find_candidate(${1:spiffs *fs}, ${2:spiffs_block_ix **block_candidate}, ${3:int *candidate_count}, ${4:char fs_crammed})"}},{"label":"â€¢spiffs_gc_quick(spiffs *fs, u16_t max_free_pages)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_gc_quick","filterText":"spiffs_gc_quick","insertText":"spiffs_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_gc_quick(${1:spiffs *fs}, ${2:u16_t max_free_pages})"}},{"label":"â€¢spiffs_obj_lu_find_free(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_block_ix *block_ix, int *lu_entry)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_obj_lu_find_free","filterText":"spiffs_obj_lu_find_free","insertText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_obj_lu_find_free(${1:spiffs *fs}, ${2:spiffs_block_ix starting_block}, ${3:int starting_lu_entry}, ${4:spiffs_block_ix *block_ix}, ${5:int *lu_entry})"}},{"label":"â€¢spiffs_obj_lu_find_free_obj_id(spiffs *fs, spiffs_obj_id *obj_id, const u8_t *conflicting_name)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_obj_lu_find_free_obj_id","filterText":"spiffs_obj_lu_find_free_obj_id","insertText":"spiffs_obj_lu_find_free_obj_id(${1:spiffs *fs}, ${2:spiffs_obj_id *obj_id}, ${3:const u8_t *conflicting_name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_obj_lu_find_free_obj_id(${1:spiffs *fs}, ${2:spiffs_obj_id *obj_id}, ${3:const u8_t *conflicting_name})"}},{"label":"â€¢spiffs_obj_lu_scan(spiffs *fs)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_obj_lu_scan","filterText":"spiffs_obj_lu_scan","insertText":"spiffs_obj_lu_scan(${1:spiffs *fs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_obj_lu_scan(${1:spiffs *fs})"}},{"label":"â€¢spiffs_object_create(spiffs *fs, spiffs_obj_id obj_id, const u8_t *name, const u8_t *meta, spiffs_obj_type type, spiffs_page_ix *objix_hdr_pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_object_create","filterText":"spiffs_object_create","insertText":"spiffs_object_create(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:const u8_t *name}, ${4:const u8_t *meta}, ${5:spiffs_obj_type type}, ${6:spiffs_page_ix *objix_hdr_pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_create(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:const u8_t *name}, ${4:const u8_t *meta}, ${5:spiffs_obj_type type}, ${6:spiffs_page_ix *objix_hdr_pix})"}},{"label":"â€¢spiffs_object_find_object_index_header_by_name(spiffs *fs, const u8_t *name, spiffs_page_ix *pix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_object_find_object_index_header_by_name","filterText":"spiffs_object_find_object_index_header_by_name","insertText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_find_object_index_header_by_name(${1:spiffs *fs}, ${2:const u8_t *name}, ${3:spiffs_page_ix *pix})"}},{"label":"â€¢spiffs_object_open_by_id(spiffs *fs, spiffs_obj_id obj_id, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_object_open_by_id","filterText":"spiffs_object_open_by_id","insertText":"spiffs_object_open_by_id(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_open_by_id(${1:spiffs *fs}, ${2:spiffs_obj_id obj_id}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})"}},{"label":"â€¢spiffs_object_open_by_page(spiffs *fs, spiffs_page_ix pix, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_object_open_by_page","filterText":"spiffs_object_open_by_page","insertText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_open_by_page(${1:spiffs *fs}, ${2:spiffs_page_ix pix}, ${3:spiffs_fd *f}, ${4:spiffs_flags flags}, ${5:spiffs_mode mode})"}},{"label":"â€¢spiffs_object_read(spiffs_fd *fd, u32_t offset, u32_t len, u8_t *dst)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_object_read","filterText":"spiffs_object_read","insertText":"spiffs_object_read(${1:spiffs_fd *fd}, ${2:u32_t offset}, ${3:u32_t len}, ${4:u8_t *dst})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_read(${1:spiffs_fd *fd}, ${2:u32_t offset}, ${3:u32_t len}, ${4:u8_t *dst})"}},{"label":"â€¢spiffs_object_truncate(spiffs_fd *fd, u32_t new_len, u8_t remove_object)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3f4e1c7fspiffs_object_truncate","filterText":"spiffs_object_truncate","insertText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"spiffs_object_truncate(${1:spiffs_fd *fd}, ${2:u32_t new_len}, ${3:u8_t remove_object})"}}]},"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 472

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":22}},"message":"Use of undeclared identifier 's'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":240},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"rangeLength":0,"text":"t"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":73,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":23,"character":23},"context":{"triggerKind":3}}}
>>>
Content-Length: 38493

{"id":73,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3e8c8687status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"status"}},{"label":" size_t","kind":8,"sortText":"3ef37820size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"size_t"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"struct"}},{"label":"â€¢strcasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strcasecmp()"}},{"label":"â€¢strcmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcmp","filterText":"strcmp","insertText":"strcmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strcmp()"}},{"label":"â€¢strcoll()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcoll","filterText":"strcoll","insertText":"strcoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strcoll()"}},{"label":"â€¢strcspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrcspn","filterText":"strcspn","insertText":"strcspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strcspn()"}},{"label":"â€¢strlcat()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrlcat","filterText":"strlcat","insertText":"strlcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strlcat()"}},{"label":"â€¢strlcpy()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrlcpy","filterText":"strlcpy","insertText":"strlcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strlcpy()"}},{"label":"â€¢strlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrlen","filterText":"strlen","insertText":"strlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strlen()"}},{"label":"â€¢strncasecmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncasecmp()"}},{"label":"â€¢strncmp()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrncmp","filterText":"strncmp","insertText":"strncmp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncmp()"}},{"label":"â€¢strnlen()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrnlen","filterText":"strnlen","insertText":"strnlen()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strnlen()"}},{"label":"â€¢strspn()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrspn","filterText":"strspn","insertText":"strspn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strspn()"}},{"label":"â€¢strtol()","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtol","filterText":"strtol","insertText":"strtol()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtol()"}},{"label":"â€¢strtoll()","kind":3,"detail":"long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtoll","filterText":"strtoll","insertText":"strtoll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtoll()"}},{"label":"â€¢strtoul()","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtoul","filterText":"strtoul","insertText":"strtoul()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtoul()"}},{"label":"â€¢strtoull()","kind":3,"detail":"unsigned long long","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"3f0f66edstrtoull","filterText":"strtoull","insertText":"strtoull()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtoull()"}},{"label":"â€¢strxfrm()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3f0f66edstrxfrm","filterText":"strxfrm","insertText":"strxfrm()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strxfrm()"}},{"label":"â€¢strncasecmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"3f34f201strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncasecmp_P()"}},{"label":"â€¢strncmp_P()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"3f34f201strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncmp_P()"}},{"label":"â€¢strnlen_P()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"3f34f201strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strnlen_P()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_refcnt"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"3f42c84estartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"3f42c84estartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":" stopWaveform(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Stop a waveform, if any, on the specified pin.  \nReturns true or false on success or failure."},"sortText":"3f42c84estopWaveform","filterText":"stopWaveform","insertText":"stopWaveform(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stopWaveform(${1:uint8_t pin})"}},{"label":"â€¢strftime()","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"3f42c84estrftime","filterText":"strftime","insertText":"strftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strftime()"}},{"label":"â€¢strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"3f42c84estrtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"3f42c84estrtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3f4e1c7fstat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stat()"}},{"label":"â€¢SPIFFS_tell(spiffs *fs, spiffs_file fh)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGet position in file.  \n@param fs the file system struct  \n@param fh the filehandle of the file to check"},"sortText":"3f7a9561SPIFFS_tell","filterText":"SPIFFS_tell","insertText":"SPIFFS_tell(${1:spiffs *fs}, ${2:spiffs_file fh})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"SPIFFS_tell(${1:spiffs *fs}, ${2:spiffs_file fh})"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"4018798aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"String"}},{"label":"â€¢stpcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpcpy","filterText":"stpcpy","insertText":"stpcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stpcpy()"}},{"label":"â€¢stpncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpncpy","filterText":"stpncpy","insertText":"stpncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stpncpy()"}},{"label":"â€¢strcat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strcat()"}},{"label":"â€¢strchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strchr()"}},{"label":"â€¢strcpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strcpy()"}},{"label":"â€¢strdup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strdup()"}},{"label":"â€¢strerror()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrerror","filterText":"strerror","insertText":"strerror()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strerror()"}},{"label":"â€¢strlwr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strlwr()"}},{"label":"â€¢strncat()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncat","filterText":"strncat","insertText":"strncat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncat()"}},{"label":"â€¢strncpy()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncpy()"}},{"label":"â€¢strndup()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrndup","filterText":"strndup","insertText":"strndup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strndup()"}},{"label":"â€¢strpbrk()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strpbrk()"}},{"label":"â€¢strrchr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strrchr()"}},{"label":"â€¢strsep()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsep","filterText":"strsep","insertText":"strsep()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strsep()"}},{"label":"â€¢strsignal()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsignal","filterText":"strsignal","insertText":"strsignal()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strsignal()"}},{"label":"â€¢strstr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strstr()"}},{"label":"â€¢strtod()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtod()"}},{"label":"â€¢strtof()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtof","filterText":"strtof","insertText":"strtof()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtof()"}},{"label":"â€¢strtok()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok","filterText":"strtok","insertText":"strtok()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtok()"}},{"label":"â€¢strtok_r()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtok_r()"}},{"label":"â€¢strtold(const char *, char **)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":"â€¢strupr()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strupr()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4040055cStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"StringSumHelper"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"station_status_t"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"4056ab53Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"Stream"}},{"label":"â€¢s32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_config.h\"`"},"sortText":"405bb6c8s32_t","filterText":"s32_t","insertText":"s32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"s32_t"}},{"label":"â€¢strncat_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncat_P","filterText":"strncat_P","insertText":"strncat_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncat_P()"}},{"label":"â€¢strncpy_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strncpy_P()"}},{"label":"â€¢strstr_P()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"sys/string.h\"`"},"sortText":"405d8e68strstr_P","filterText":"strstr_P","insertText":"strstr_P()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strstr_P()"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"4062cd89STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"STATUS"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_ptr"}},{"label":"â€¢StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"4068a03fStreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"StreamString"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stack_thunk_top"}},{"label":"â€¢strptime()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fstrptime","filterText":"strptime","insertText":"strptime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"strptime()"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"stat"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_A"}},{"label":"â€¢step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_B"}},{"label":"â€¢step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4071b066step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_C"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_a"}},{"label":"â€¢step_b","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_b","filterText":"step_b","insertText":"step_b","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_b"}},{"label":"â€¢step_c","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_c","filterText":"step_c","insertText":"step_c","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_c"}},{"label":"â€¢step_d","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4071b066step_d","filterText":"step_d","insertText":"step_d","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"step_d"}},{"label":" setTZ(const char *tz)","kind":3,"detail":"void","sortText":"408c559bsetTZ","filterText":"setTZ","insertText":"setTZ(${1:const char *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"setTZ(${1:const char *tz})"}},{"label":"â€¢ssize_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bssize_t","filterText":"ssize_t","insertText":"ssize_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"ssize_t"}},{"label":"â€¢suseconds_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"408c559bsuseconds_t","filterText":"suseconds_t","insertText":"suseconds_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"suseconds_t"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"station_info"}},{"label":"â€¢SERIAL_TX_ONLY","kind":20,"detail":"SerialMode","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"409cf05eSERIAL_TX_ONLY","filterText":"SERIAL_TX_ONLY","insertText":"SERIAL_TX_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"SERIAL_TX_ONLY"}},{"label":"â€¢std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"40b198efstreambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::streambuf"}},{"label":"â€¢std::stringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char memory buffers."},"sortText":"40b198efstringbuf","filterText":"stringbuf","insertText":"std::stringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::stringbuf"}},{"label":"â€¢std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"40b198efstringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::stringstream"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40b86274streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::streamoff"}},{"label":"â€¢std::streampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nClauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos as implementation defined types, but clause 27.2 requires that they must both be typedefs for fpos\\\u003cmbstate_t\u003e File position for char streams."},"sortText":"40b86274streampos","filterText":"streampos","insertText":"std::streampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"newText":"std::streampos"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":241},"contentChanges":[{"range":{"start":{"line":23,"character":23},"end":{"line":23,"character":23}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 366

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"jsonrpc":"2.0","id":74,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":23,"character":24},"context":{"triggerKind":3}}}
>>>
Content-Length: 50673

{"id":74,"result":{"isIncomplete":true,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3e8c8687status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"status"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"3f2d7a0ftwi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"twi_status()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f42c84estack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_refcnt"}},{"label":" startWaveform(uint8_t pin, uint32_t timeHighUS, uint32_t timeLowUS, uint32_t runTimeUS)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low times on specific pin.  \nIf runtimeUS \u003e 0 then automatically stop it after that many usecs.  \nReturns true or false on success or failure."},"sortText":"3f42c84estartWaveform","filterText":"startWaveform","insertText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"startWaveform(${1:uint8_t pin}, ${2:uint32_t timeHighUS}, ${3:uint32_t timeLowUS}, ${4:uint32_t runTimeUS})"}},{"label":" startWaveformClockCycles(uint8_t pin, uint32_t timeHighCycles, uint32_t timeLowCycles, uint32_t runTimeCycles)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Start or change a waveform of the specified high and low CPU clock cycles on specific pin.  \nIf runtimeCycles \u003e 0 then automatically stop it after that many CPU clock cycles.  \nReturns true or false on success or failure."},"sortText":"3f42c84estartWaveformClockCycles","filterText":"startWaveformClockCycles","insertText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"startWaveformClockCycles(${1:uint8_t pin}, ${2:uint32_t timeHighCycles}, ${3:uint32_t timeLowCycles}, ${4:uint32_t runTimeCycles})"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3f4e1c7fstat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stat()"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"3fb07694SPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fd632e2wifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":"â€¢cont_get_free_stack(cont_t *cont)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"cont.h\"`  \nGo through stack and check how many bytes are most probably still unchanged and thus weren't used by the user code. i.e. that stack space is free. (high water mark)"},"sortText":"3fe25196cont_get_free_stack","filterText":"cont_get_free_stack","insertText":"cont_get_free_stack(${1:cont_t *cont})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"cont_get_free_stack(${1:cont_t *cont})"}},{"label":" sntp_startup_delay_MS_rfc_not_less_than_60000()","kind":3,"detail":"uint32_t","sortText":"3fe58b9fsntp_startup_delay_MS_rfc_not_less_than_60000","filterText":"sntp_startup_delay_MS_rfc_not_less_than_60000","insertText":"sntp_startup_delay_MS_rfc_not_less_than_60000()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"sntp_startup_delay_MS_rfc_not_less_than_60000()"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3ff1de48br_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3ff1de48br_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3ff1de48br_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3ff1de48br_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3ff1de48br_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢wifi_softap_get_station_num()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"400d6d44wifi_softap_get_station_num","filterText":"wifi_softap_get_station_num","insertText":"wifi_softap_get_station_num()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_softap_get_station_num()"}},{"label":"â€¢spiffs_gc_erase_page_stats(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"4012d0aaspiffs_gc_erase_page_stats","filterText":"spiffs_gc_erase_page_stats","insertText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢br_ssl_engine_current_state(const br_ssl_engine_context *cc)","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_ssl.h\"`  \n\\\\brief Get the current engine state.  \nAn SSL engine (client or server) has, at any time, a state which is the combination of zero, one or more of these flags:  \n\\- `BR_SSL_CLOSED`  \nEngine is finished, no more I/O (until next reset).  \n\\- `BR_SSL_SENDREC`  \nEngine has some bytes to send to the peer.  \n\\- `BR_SSL_RECVREC`  \nEngine expects some bytes from the peer.  \n\\- `BR_SSL_SENDAPP`  \nEngine may receive application data to send (or flush).  \n\\- `BR_SSL_RECVAPP`  \nEngine has obtained some application data from the peer,  \nthat should be read by the caller.  \nIf no flag at all is set (state value is 0), then the engine is not fully initialised yet.  \nThe `BR_SSL_CLOSED` flag is exclusive; when it is set, no other flag is set. To distinguish between a normal closure and an error, use  \n`br_ssl_engine_last_error()`.  \nGenerally speaking, `BR_SSL_SENDREC` and `BR_SSL_SENDAPP` are mutually exclusive: the input buffer, at any point, either accumulates plaintext data, or contains an assembled record that is being sent.  \nSimilarly, `BR_SSL_RECVREC` and `BR_SSL_RECVAPP` are mutually exclusive.  \nThis may change in a future library version.  \n\\\\param cc SSL engine context.  \n\\\\return the current engine state."},"sortText":"40427db4br_ssl_engine_current_state","filterText":"br_ssl_engine_current_state","insertText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"station_status_t"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4065772estack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"4068a03fstack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stack_thunk_top"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"406a49d6STATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATUS"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4071b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"stat"}},{"label":"â€¢step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"4092d0aastep_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"step_A"}},{"label":"â€¢step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"4092d0aastep_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"step_a"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"station_info"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40b43d10wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢std::stable_partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Move elements for which a predicate is true to the beginning of a sequence, preserving relative ordering.  \n@ingroup mutating_algorithms  \n@param \\_\\_first A forward iterator.  \n@param \\_\\_last A forward iterator.  \n@param \\_\\_pred A predicate functor.  \n@return An iterator @p middle such that @p \\_\\_pred(i) is true for each iterator @p i in the range @p [first,middle) and false for each @p i in the range @p [middle,last).  \nPerforms the same function as @p partition() with the additional guarantee that the relative ordering of elements in each group is preserved, so any two elements @p x and @p y in the range  \n@p [\\_\\_first,\\_\\_last) such that @p \\_\\_pred(x)==\\_\\_pred(y) will have the same relative ordering after calling @p stable_partition()."},"sortText":"40b86274stable_partition","filterText":"stable_partition","insertText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::stable_partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"â€¢std::stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Sort the elements of a sequence using a predicate for comparison,  \npreserving the relative order of equivalent elements.  \n@ingroup sorting_algorithms  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_comp A comparison functor.  \n@return Nothing.  \nSorts the elements in the range @p [\\_\\_first,\\_\\_last) in ascending order,  \nsuch that for each iterator @p i in the range @p [\\_\\_first,\\_\\_last-1),  \n@p \\_\\_comp(\\*(i+1),\\*i) is false.  \nThe relative ordering of equivalent elements is preserved, so any two elements @p x and @p y in the range @p [\\_\\_first,\\_\\_last) such that  \n@p \\_\\_comp(x,y) is false and @p \\_\\_comp(y,x) is false will have the same relative ordering after calling @p stable_sort()."},"sortText":"40b86274stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::stable_sort($0)"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bdf103STATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢uart_start_detect_baudrate(int uart_nr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"uart.h\"`"},"sortText":"40cf659euart_start_detect_baudrate","filterText":"uart_start_detect_baudrate","insertText":"uart_start_detect_baudrate(${1:int uart_nr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"uart_start_detect_baudrate(${1:int uart_nr})"}},{"label":"â€¢system_os_task(ETSTask task, uint8 prio, ETSEvent *queue, uint8 qlen)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40d158easystem_os_task","filterText":"system_os_task","insertText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"system_os_task(${1:ETSTask task}, ${2:uint8 prio}, ${3:ETSEvent *queue}, ${4:uint8 qlen})"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40d9f877print_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40d9f877spiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40d9f877ummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"ummStats"}},{"label":"â€¢cont_repaint_stack(cont_t *cont)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"cont.h\"`  \nRepaint the stack from the current SP to the end, to allow individual routines' stack usages to be calculated by re-painting, checking current free, running the routine, then checking the max free"},"sortText":"40e8a03fcont_repaint_stack","filterText":"cont_repaint_stack","insertText":"cont_repaint_stack(${1:cont_t *cont})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"cont_repaint_stack(${1:cont_t *cont})"}},{"label":"â€¢Event_StaMode_AuthMode_Change_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_AuthMode_Change_t","filterText":"Event_StaMode_AuthMode_Change_t","insertText":"Event_StaMode_AuthMode_Change_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"Event_StaMode_AuthMode_Change_t"}},{"label":"â€¢Event_StaMode_Connected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Connected_t","filterText":"Event_StaMode_Connected_t","insertText":"Event_StaMode_Connected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"Event_StaMode_Connected_t"}},{"label":"â€¢Event_StaMode_Disconnected_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Disconnected_t","filterText":"Event_StaMode_Disconnected_t","insertText":"Event_StaMode_Disconnected_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"Event_StaMode_Disconnected_t"}},{"label":"â€¢Event_StaMode_Got_IP_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5Event_StaMode_Got_IP_t","filterText":"Event_StaMode_Got_IP_t","insertText":"Event_StaMode_Got_IP_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"Event_StaMode_Got_IP_t"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40f828b5wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":"â€¢std::is_standard_layout\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_standard_layout"},"sortText":"410f326bis_standard_layout","filterText":"is_standard_layout","insertText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢wifi_wps_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"41172137wifi_wps_start","filterText":"wifi_wps_start","insertText":"wifi_wps_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"wifi_wps_start()"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"411c96d9br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"br_eax_state"}},{"label":"â€¢esp2glue_dhcps_start(struct ip_info *info)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"glue.h\"`"},"sortText":"412c2d33esp2glue_dhcps_start","filterText":"esp2glue_dhcps_start","insertText":"esp2glue_dhcps_start(${1:struct ip_info *info})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"esp2glue_dhcps_start(${1:struct ip_info *info})"}},{"label":"â€¢ETSTask","kind":8,"documentation":{"kind":"markdown","value":"From `\"ets_sys.h\"`"},"sortText":"42543ef9ETSTask","filterText":"ETSTask","insertText":"ETSTask","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"ETSTask"}},{"label":"â€¢std::__stable_partition_adaptive(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pointer __buffer, _Distance __buffer_size)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_first != \\_\\_last and !\\_\\_pred(\\*\\_\\_first) and \\_\\_len == distance(\\_\\_first, \\_\\_last).  \n!\\_\\_pred(\\*\\_\\_first) allows us to guarantee that we don't move-assign an element onto itself."},"sortText":"42b79ecd__stable_partition_adaptive","filterText":"__stable_partition_adaptive","insertText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::__stable_partition_adaptive(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:_Predicate __pred}, ${4:_Distance __len}, ${5:_Pointer __buffer}, ${6:_Distance __buffer_size})"}},{"label":"â€¢std::__stable_sort_adaptive(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"42b79ecd__stable_sort_adaptive","filterText":"__stable_sort_adaptive","insertText":"std::__stable_sort_adaptive($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::__stable_sort_adaptive($0)"}},{"label":"â€¢std::__inplace_stable_partition(_ForwardIterator __first, _Predicate __pred, _Distance __len)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function...  \nRequires \\_\\_len != 0 and !\\_\\_pred(\\*\\_\\_first),  \nsame as \\_\\_stable_partition_adaptive."},"sortText":"42d43ef9__inplace_stable_partition","filterText":"__inplace_stable_partition","insertText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::__inplace_stable_partition(${1:_ForwardIterator __first}, ${2:_Predicate __pred}, ${3:_Distance __len})"}},{"label":"â€¢std::__inplace_stable_sort(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function for the stable sorting routines."},"sortText":"42d43ef9__inplace_stable_sort","filterText":"__inplace_stable_sort","insertText":"std::__inplace_stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::__inplace_stable_sort($0)"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42dae0be__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42dae0be__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}}]},"jsonrpc":"2.0"}Content-Length: 367

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'sta'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":242},"contentChanges":[{"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":24}},"rangeLength":0,"text":"t"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":75,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":23,"character":25},"context":{"triggerKind":3}}}
>>>
Content-Length: 45373

{"id":75,"result":{"isIncomplete":false,"items":[{"label":" status","kind":6,"detail":"boolean","sortText":"3e8c8687status","filterText":"status","insertText":"status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"status"}},{"label":"â€¢stat()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ece1c7fstat","filterText":"stat","insertText":"stat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stat()"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"â€¢twi_status()","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"twi.h\"`"},"sortText":"3f07e224twi_status","filterText":"twi_status","insertText":"twi_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"twi_status()"}},{"label":"â€¢stack_thunk_get_cont_sp()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f5a6f44stack_thunk_get_cont_sp","filterText":"stack_thunk_get_cont_sp","insertText":"stack_thunk_get_cont_sp()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_get_cont_sp()"}},{"label":"â€¢stack_thunk_get_max_usage()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f5a6f44stack_thunk_get_max_usage","filterText":"stack_thunk_get_max_usage","insertText":"stack_thunk_get_max_usage()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_get_max_usage()"}},{"label":"â€¢stack_thunk_get_refcnt()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f5a6f44stack_thunk_get_refcnt","filterText":"stack_thunk_get_refcnt","insertText":"stack_thunk_get_refcnt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_get_refcnt()"}},{"label":"â€¢stack_thunk_get_stack_bot()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f5a6f44stack_thunk_get_stack_bot","filterText":"stack_thunk_get_stack_bot","insertText":"stack_thunk_get_stack_bot()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_get_stack_bot()"}},{"label":"â€¢stack_thunk_get_stack_top()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f5a6f44stack_thunk_get_stack_top","filterText":"stack_thunk_get_stack_top","insertText":"stack_thunk_get_stack_top()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_get_stack_top()"}},{"label":"â€¢stack_thunk_refcnt","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"3f5a6f44stack_thunk_refcnt","filterText":"stack_thunk_refcnt","insertText":"stack_thunk_refcnt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_refcnt"}},{"label":"â€¢SPIFFS_stat(spiffs *fs, const char *path, spiffs_stat *s)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nGets file status by path  \n@param fs the file system struct  \n@param path the path of the file to stat  \n@param s the stat struct to populate"},"sortText":"3f8b6730SPIFFS_stat","filterText":"SPIFFS_stat","insertText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"SPIFFS_stat(${1:spiffs *fs}, ${2:const char *path}, ${3:spiffs_stat *s})"}},{"label":"â€¢wifi_station_get_ap_info(struct station_config *config)","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_ap_info","filterText":"wifi_station_get_ap_info","insertText":"wifi_station_get_ap_info(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_ap_info(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_auto_connect()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_auto_connect","filterText":"wifi_station_get_auto_connect","insertText":"wifi_station_get_auto_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_auto_connect()"}},{"label":"â€¢wifi_station_get_current_ap_id()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_current_ap_id","filterText":"wifi_station_get_current_ap_id","insertText":"wifi_station_get_current_ap_id()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_current_ap_id()"}},{"label":"â€¢wifi_station_get_rssi()","kind":3,"detail":"sint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_get_rssi","filterText":"wifi_station_get_rssi","insertText":"wifi_station_get_rssi()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_rssi()"}},{"label":"â€¢wifi_station_set_cert_key(uint8 *client_cert, int client_cert_len, uint8 *private_key, int private_key_len, uint8 *private_key_passwd, int private_key_passwd_len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_cert_key","filterText":"wifi_station_set_cert_key","insertText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_cert_key(${1:uint8 *client_cert}, ${2:int client_cert_len}, ${3:uint8 *private_key}, ${4:int private_key_len}, ${5:uint8 *private_key_passwd}, ${6:int private_key_passwd_len})"}},{"label":"â€¢wifi_station_set_username(uint8 *username, int len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fb7e08cwifi_station_set_username","filterText":"wifi_station_set_username","insertText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_username(${1:uint8 *username}, ${2:int len})"}},{"label":"â€¢spiffs_gc_erase_page_stats(spiffs *fs, spiffs_block_ix bix)","kind":3,"detail":"s32_t","documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs_nucleus.h\"`"},"sortText":"3fce1c7fspiffs_gc_erase_page_stats","filterText":"spiffs_gc_erase_page_stats","insertText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"spiffs_gc_erase_page_stats(${1:spiffs *fs}, ${2:spiffs_block_ix bix})"}},{"label":"â€¢br_md5_state(const br_md5_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5 running state.  \nThe running state for MD5 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3fce55dabr_md5_state","filterText":"br_md5_state","insertText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_md5_state(${1:const br_md5_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_md5sha1_state(const br_md5sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3fce55dabr_md5sha1_state","filterText":"br_md5sha1_state","insertText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_md5sha1_state(${1:const br_md5sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha1_state(const br_sha1_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-1 running state.  \nThe running state for SHA-1 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3fce55dabr_sha1_state","filterText":"br_sha1_state","insertText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_sha1_state(${1:const br_sha1_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha224_state(const br_sha224_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-224 running state.  \nThe running state for SHA-224 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3fce55dabr_sha224_state","filterText":"br_sha224_state","insertText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_sha224_state(${1:const br_sha224_context *ctx}, ${2:void *out})"}},{"label":"â€¢br_sha384_state(const br_sha384_context *ctx, void *out)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Save SHA-384 running state.  \nThe running state for SHA-384 (output of the last internal block processing) is written in the buffer pointed to by `out`. The number of bytes injected since the last initialisation or reset call is returned. The context is not modified.  \n\\\\param ctx pointer to the context structure.  \n\\\\param out destination buffer for the running state.  \n\\\\return the injected total byte length."},"sortText":"3fce55dabr_sha384_state","filterText":"br_sha384_state","insertText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_sha384_state(${1:const br_sha384_context *ctx}, ${2:void *out})"}},{"label":"â€¢wifi_softap_get_station_num()","kind":3,"detail":"uint8","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"3fdc435bwifi_softap_get_station_num","filterText":"wifi_softap_get_station_num","insertText":"wifi_softap_get_station_num()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_softap_get_station_num()"}},{"label":"â€¢stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ff1b066stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stat"}},{"label":"â€¢br_ssl_engine_current_state(const br_ssl_engine_context *cc)","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_ssl.h\"`  \n\\\\brief Get the current engine state.  \nAn SSL engine (client or server) has, at any time, a state which is the combination of zero, one or more of these flags:  \n\\- `BR_SSL_CLOSED`  \nEngine is finished, no more I/O (until next reset).  \n\\- `BR_SSL_SENDREC`  \nEngine has some bytes to send to the peer.  \n\\- `BR_SSL_RECVREC`  \nEngine expects some bytes from the peer.  \n\\- `BR_SSL_SENDAPP`  \nEngine may receive application data to send (or flush).  \n\\- `BR_SSL_RECVAPP`  \nEngine has obtained some application data from the peer,  \nthat should be read by the caller.  \nIf no flag at all is set (state value is 0), then the engine is not fully initialised yet.  \nThe `BR_SSL_CLOSED` flag is exclusive; when it is set, no other flag is set. To distinguish between a normal closure and an error, use  \n`br_ssl_engine_last_error()`.  \nGenerally speaking, `BR_SSL_SENDREC` and `BR_SSL_SENDAPP` are mutually exclusive: the input buffer, at any point, either accumulates plaintext data, or contains an assembled record that is being sent.  \nSimilarly, `BR_SSL_RECVREC` and `BR_SSL_RECVAPP` are mutually exclusive.  \nThis may change in a future library version.  \n\\\\param cc SSL engine context.  \n\\\\return the current engine state."},"sortText":"3ff1de48br_ssl_engine_current_state","filterText":"br_ssl_engine_current_state","insertText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_ssl_engine_current_state(${1:const br_ssl_engine_context *cc})"}},{"label":"â€¢station_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"405158e9station_status_t","filterText":"station_status_t","insertText":"station_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"station_status_t"}},{"label":"â€¢STATUS","kind":8,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`  \nprobably should not put STATUS here"},"sortText":"406e07feSTATUS","filterText":"STATUS","insertText":"STATUS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATUS"}},{"label":"â€¢stack_thunk_ptr","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`  \nGlobals required for thunking operation"},"sortText":"4078c848stack_thunk_ptr","filterText":"stack_thunk_ptr","insertText":"stack_thunk_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_ptr"}},{"label":"â€¢stack_thunk_add_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_add_ref","filterText":"stack_thunk_add_ref","insertText":"stack_thunk_add_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_add_ref()"}},{"label":"â€¢stack_thunk_del_ref()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_del_ref","filterText":"stack_thunk_del_ref","insertText":"stack_thunk_del_ref()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_del_ref()"}},{"label":"â€¢stack_thunk_dump_stack()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_dump_stack","filterText":"stack_thunk_dump_stack","insertText":"stack_thunk_dump_stack()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_dump_stack()"}},{"label":"â€¢stack_thunk_fatal_overflow()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_fatal_overflow","filterText":"stack_thunk_fatal_overflow","insertText":"stack_thunk_fatal_overflow()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_fatal_overflow()"}},{"label":"â€¢stack_thunk_repaint()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_repaint","filterText":"stack_thunk_repaint","insertText":"stack_thunk_repaint()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_repaint()"}},{"label":"â€¢stack_thunk_save","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_save","filterText":"stack_thunk_save","insertText":"stack_thunk_save","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_save"}},{"label":"â€¢stack_thunk_top","kind":6,"detail":"uint32_t *","documentation":{"kind":"markdown","value":"From `\"StackThunk.h\"`"},"sortText":"407b8c37stack_thunk_top","filterText":"stack_thunk_top","insertText":"stack_thunk_top","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"stack_thunk_top"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"dhcp_status"}},{"label":"â€¢wifi_station_dhcpc_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_station_dhcpc_status","filterText":"wifi_station_dhcpc_status","insertText":"wifi_station_dhcpc_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_dhcpc_status()"}},{"label":"â€¢wifi_station_get_connect_status()","kind":3,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_station_get_connect_status","filterText":"wifi_station_get_connect_status","insertText":"wifi_station_get_connect_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_connect_status()"}},{"label":"â€¢wifi_status_led_install(uint8 gpio_id, uint32 gpio_name, uint8 gpio_func)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_status_led_install","filterText":"wifi_status_led_install","insertText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_status_led_install(${1:uint8 gpio_id}, ${2:uint32 gpio_name}, ${3:uint8 gpio_func})"}},{"label":"â€¢wifi_status_led_uninstall()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"408fda41wifi_status_led_uninstall","filterText":"wifi_status_led_uninstall","insertText":"wifi_status_led_uninstall()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_status_led_uninstall()"}},{"label":"â€¢station_config","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_config","filterText":"station_config","insertText":"station_config","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"station_config"}},{"label":"â€¢station_info","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137station_info","filterText":"station_info","insertText":"station_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"station_info"}},{"label":"â€¢wps_cb_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40a5af23wps_cb_status","filterText":"wps_cb_status","insertText":"wps_cb_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wps_cb_status"}},{"label":"â€¢std::static_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40b86274static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"std::static_pointer_cast($0)"}},{"label":"â€¢wifi_softap_dhcps_status()","kind":3,"detail":"enum dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40bb8406wifi_softap_dhcps_status","filterText":"wifi_softap_dhcps_status","insertText":"wifi_softap_dhcps_status()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_softap_dhcps_status()"}},{"label":"â€¢print_stats(int force)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"umm_malloc/umm_local.h\"`"},"sortText":"40bc528dprint_stats","filterText":"print_stats","insertText":"print_stats(${1:int force})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"print_stats(${1:int force})"}},{"label":"â€¢spiffs_stat","kind":8,"documentation":{"kind":"markdown","value":"From `\"spiffs/spiffs.h\"`  \nspiffs file status struct"},"sortText":"40bc528dspiffs_stat","filterText":"spiffs_stat","insertText":"spiffs_stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"spiffs_stat"}},{"label":" ummStats","kind":6,"detail":"UMM_STATISTICS","sortText":"40bc528dummStats","filterText":"ummStats","insertText":"ummStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"ummStats"}},{"label":"â€¢STATION_CONNECTING","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECTING","filterText":"STATION_CONNECTING","insertText":"STATION_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATION_CONNECTING"}},{"label":"â€¢STATION_CONNECT_FAIL","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_CONNECT_FAIL","filterText":"STATION_CONNECT_FAIL","insertText":"STATION_CONNECT_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATION_CONNECT_FAIL"}},{"label":"â€¢STATION_GOT_IP","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_GOT_IP","filterText":"STATION_GOT_IP","insertText":"STATION_GOT_IP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATION_GOT_IP"}},{"label":"â€¢STATION_IDLE","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_IDLE","filterText":"STATION_IDLE","insertText":"STATION_IDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATION_IDLE"}},{"label":"â€¢STATION_NO_AP_FOUND","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_NO_AP_FOUND","filterText":"STATION_NO_AP_FOUND","insertText":"STATION_NO_AP_FOUND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATION_NO_AP_FOUND"}},{"label":"â€¢STATION_WRONG_PASSWORD","kind":20,"detail":"station_status_t","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40c2cafdSTATION_WRONG_PASSWORD","filterText":"STATION_WRONG_PASSWORD","insertText":"STATION_WRONG_PASSWORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"STATION_WRONG_PASSWORD"}},{"label":"â€¢wifi_station_ap_change(uint8 current_ap_id)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_ap_change","filterText":"wifi_station_ap_change","insertText":"wifi_station_ap_change(${1:uint8 current_ap_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_ap_change(${1:uint8 current_ap_id})"}},{"label":"â€¢wifi_station_ap_number_set(uint8 ap_number)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_ap_number_set","filterText":"wifi_station_ap_number_set","insertText":"wifi_station_ap_number_set(${1:uint8 ap_number})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_ap_number_set(${1:uint8 ap_number})"}},{"label":"â€¢wifi_station_clear_cert_key()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_cert_key","filterText":"wifi_station_clear_cert_key","insertText":"wifi_station_clear_cert_key()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_clear_cert_key()"}},{"label":"â€¢wifi_station_clear_username()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_clear_username","filterText":"wifi_station_clear_username","insertText":"wifi_station_clear_username()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_clear_username()"}},{"label":"â€¢wifi_station_connect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_connect","filterText":"wifi_station_connect","insertText":"wifi_station_connect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_connect()"}},{"label":"â€¢wifi_station_dhcpc_set_maxtry(uint8 num)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_set_maxtry","filterText":"wifi_station_dhcpc_set_maxtry","insertText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_dhcpc_set_maxtry(${1:uint8 num})"}},{"label":"â€¢wifi_station_dhcpc_start()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_start","filterText":"wifi_station_dhcpc_start","insertText":"wifi_station_dhcpc_start()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_dhcpc_start()"}},{"label":"â€¢wifi_station_dhcpc_stop()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_dhcpc_stop","filterText":"wifi_station_dhcpc_stop","insertText":"wifi_station_dhcpc_stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_dhcpc_stop()"}},{"label":"â€¢wifi_station_disconnect()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_disconnect","filterText":"wifi_station_disconnect","insertText":"wifi_station_disconnect()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_disconnect()"}},{"label":"â€¢wifi_station_get_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_config","filterText":"wifi_station_get_config","insertText":"wifi_station_get_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_config_default(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_config_default","filterText":"wifi_station_get_config_default","insertText":"wifi_station_get_config_default(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_config_default(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_get_hostname()","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_hostname","filterText":"wifi_station_get_hostname","insertText":"wifi_station_get_hostname()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_hostname()"}},{"label":"â€¢wifi_station_get_reconnect_policy()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_get_reconnect_policy","filterText":"wifi_station_get_reconnect_policy","insertText":"wifi_station_get_reconnect_policy()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_get_reconnect_policy()"}},{"label":"â€¢wifi_station_scan(struct scan_config *config, scan_done_cb_t cb)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_scan","filterText":"wifi_station_scan","insertText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_scan(${1:struct scan_config *config}, ${2:scan_done_cb_t cb})"}},{"label":"â€¢wifi_station_set_auto_connect(uint8 set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_auto_connect","filterText":"wifi_station_set_auto_connect","insertText":"wifi_station_set_auto_connect(${1:uint8 set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_auto_connect(${1:uint8 set})"}},{"label":"â€¢wifi_station_set_config(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_config","filterText":"wifi_station_set_config","insertText":"wifi_station_set_config(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_config(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_config_current(struct station_config *config)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_config_current","filterText":"wifi_station_set_config_current","insertText":"wifi_station_set_config_current(${1:struct station_config *config})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_config_current(${1:struct station_config *config})"}},{"label":"â€¢wifi_station_set_hostname(const char *name)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_hostname","filterText":"wifi_station_set_hostname","insertText":"wifi_station_set_hostname(${1:const char *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_hostname(${1:const char *name})"}},{"label":"â€¢wifi_station_set_reconnect_policy(bool set)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40dfe6d6wifi_station_set_reconnect_policy","filterText":"wifi_station_set_reconnect_policy","insertText":"wifi_station_set_reconnect_policy(${1:bool set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_station_set_reconnect_policy(${1:bool set})"}},{"label":" UMM_STATISTICS","kind":8,"sortText":"40f1b066UMM_STATISTICS","filterText":"UMM_STATISTICS","insertText":"UMM_STATISTICS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"UMM_STATISTICS"}},{"label":" UMM_STATISTICS_t","kind":22,"sortText":"40f1b066UMM_STATISTICS_t","filterText":"UMM_STATISTICS_t","insertText":"UMM_STATISTICS_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"UMM_STATISTICS_t"}},{"label":"â€¢br_eax_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_aead.h\"`  \n\\\\brief EAX captured state.  \nSome internal values computed by EAX may be captured at various points, and reused for another EAX run with the same secret key,  \nfor lower per-message overhead. Captured values do not depend on the nonce."},"sortText":"40f1de48br_eax_state","filterText":"br_eax_state","insertText":"br_eax_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_eax_state"}},{"label":"â€¢gpio_pin_intr_state_set(uint32 i, GPIO_INT_TYPE intr_state)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"40fd02afgpio_pin_intr_state_set","filterText":"gpio_pin_intr_state_set","insertText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"gpio_pin_intr_state_set(${1:uint32 i}, ${2:GPIO_INT_TYPE intr_state})"}},{"label":"â€¢wifi_softap_free_station_info()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_free_station_info","filterText":"wifi_softap_free_station_info","insertText":"wifi_softap_free_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_softap_free_station_info()"}},{"label":"â€¢wifi_softap_get_station_info()","kind":3,"detail":"struct station_info *","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40fd02afwifi_softap_get_station_info","filterText":"wifi_softap_get_station_info","insertText":"wifi_softap_get_station_info()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"wifi_softap_get_station_info()"}},{"label":"â€¢br_md5_set_state(br_md5_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5 running state.  \nThe running state for MD5 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5_set_state","filterText":"br_md5_set_state","insertText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_md5_set_state(${1:br_md5_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_md5sha1_set_state(br_md5sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore MD5+SHA-1 running state.  \nThe running state for MD5+SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_md5sha1_set_state","filterText":"br_md5sha1_set_state","insertText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_md5sha1_set_state(${1:br_md5sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha1_set_state(br_sha1_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-1 running state.  \nThe running state for SHA-1 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha1_set_state","filterText":"br_sha1_set_state","insertText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_sha1_set_state(${1:br_sha1_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha224_set_state(br_sha224_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-224 running state.  \nThe running state for SHA-224 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha224_set_state","filterText":"br_sha224_set_state","insertText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_sha224_set_state(${1:br_sha224_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢br_sha384_set_state(br_sha384_context *ctx, const void *stb, uint64_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"bearssl/bearssl_hash.h\"`  \n\\\\brief Restore SHA-384 running state.  \nThe running state for SHA-384 is set to the provided values.  \n\\\\param ctx pointer to the context structure.  \n\\\\param stb source buffer for the running state.  \n\\\\param count the injected total byte length."},"sortText":"410029b5br_sha384_set_state","filterText":"br_sha384_set_state","insertText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"br_sha384_set_state(${1:br_sha384_context *ctx}, ${2:const void *stb}, ${3:uint64_t count})"}},{"label":"â€¢std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"42b198ee__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"42b198ee__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"â€¢std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42c63cd7__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":25}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}Content-Length: 384

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'stat' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":243},"contentChanges":[{"range":{"start":{"line":23,"character":25},"end":{"line":23,"character":25}},"rangeLength":0,"text":"u"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":244},"contentChanges":[{"range":{"start":{"line":23,"character":26},"end":{"line":23,"character":26}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 706

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":26}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statu'; did you mean 'status'? (fix available)\n\ngiu_nut_dao_led.ino.cpp:15:9: note: 'status' declared here"},{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":14}},"severity":3,"message":"'status' declared here\n\ngiu_nut_dao_led.ino.cpp:31:22: error: use of undeclared identifier 'statu'; did you mean 'status'?"}]},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":23,"character":27},"end":{"line":23,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":244}}}Content-Length: 290

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 288

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":22,"character":5},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":78,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 288

{"jsonrpc":"2.0","id":79,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":15,"character":0},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 397

{"id":79,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/vantr/AppData/Local/Temp/arduino-language-server886891619/sketch/giu_nut_dao_led.ino.cpp","selection":{"start":{"line":22,"character":0},"end":{"line":29,"character":5}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 288

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":0},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 397

{"id":80,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/vantr/AppData/Local/Temp/arduino-language-server886891619/sketch/giu_nut_dao_led.ino.cpp","selection":{"start":{"line":23,"character":0},"end":{"line":29,"character":5}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 288

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":15,"character":0},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 397

{"id":81,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/vantr/AppData/Local/Temp/arduino-language-server886891619/sketch/giu_nut_dao_led.ino.cpp","selection":{"start":{"line":22,"character":0},"end":{"line":29,"character":5}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":245},"contentChanges":[{"range":{"start":{"line":15,"character":0},"end":{"line":22,"character":5}},"rangeLength":115,"text":""}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":245}}}Content-Length: 216

{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":24}}}
>>>
Content-Length: 304

{"id":82,"result":{"contents":{"kind":"markdown","value":"### variable `status`  \n\n---\nType: `boolean`  \nValue = `false`  \nPassed as val (converted to uint8_t)  \n\n---\n```cpp\nboolean status = 0\n```"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":83,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":24}}}
>>>
Content-Length: 304

{"id":83,"result":{"contents":{"kind":"markdown","value":"### variable `status`  \n\n---\nType: `boolean`  \nValue = `false`  \nPassed as val (converted to uint8_t)  \n\n---\n```cpp\nboolean status = 0\n```"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":84,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":27}}}
>>>
Content-Length: 210

{"id":85,"result":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":14}},"kind":1},{"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":16}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":86,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":246},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":27}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 706

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":26}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statu'; did you mean 'status'? (fix available)\n\ngiu_nut_dao_led.ino.cpp:15:9: note: 'status' declared here"},{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":14}},"severity":3,"message":"'status' declared here\n\ngiu_nut_dao_led.ino.cpp:24:22: error: use of undeclared identifier 'statu'; did you mean 'status'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":247},"contentChanges":[{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":26}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 384

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'stat' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":248},"contentChanges":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":25}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 367

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'sta'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":249},"contentChanges":[{"range":{"start":{"line":16,"character":23},"end":{"line":16,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 474

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":23},"end":{"line":16,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":24}},"message":"Use of undeclared identifier 'sta'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":87,"result":[],"jsonrpc":"2.0"}Content-Length: 366

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":250},"contentChanges":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":23}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 472

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":22}},"message":"Use of undeclared identifier 's'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":88,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 472

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":22}},"message":"Use of undeclared identifier 's'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":250}}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":251},"contentChanges":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":22}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":251}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":252},"contentChanges":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"rangeLength":0,"text":"!"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":23}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":23}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":91,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":23}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":252}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":253},"contentChanges":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"rangeLength":0,"text":"d"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":93,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":23},"context":{"triggerKind":1}}}
>>>
Content-Length: 28278

{"id":93,"result":{"isIncomplete":true,"items":[{"label":" delay(unsigned long)","kind":3,"detail":"void","sortText":"3efdffd9delay","filterText":"delay","insertText":"delay(${1:unsigned long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"delay(${1:unsigned long})"}},{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","sortText":"3efdffd9digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":" decltype(expression)","kind":15,"sortText":"3f000000decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"decltype(${0:expression})"}},{"label":" delete [] expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"delete [] ${0:expression}"}},{"label":" delete expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"delete ${0:expression}"}},{"label":" double","kind":14,"sortText":"3f000000double","filterText":"double","insertText":"double","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"double"}},{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","sortText":"3f05ef7ddigitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":" delayMicroseconds(unsigned int us)","kind":3,"detail":"void","sortText":"400c559bdelayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":"â€¢diprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bdiprintf","filterText":"diprintf","insertText":"diprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"diprintf()"}},{"label":"â€¢div()","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv","filterText":"div","insertText":"div()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"div()"}},{"label":"â€¢div_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"div_t"}},{"label":"â€¢double_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bdouble_t","filterText":"double_t","insertText":"double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"double_t"}},{"label":"â€¢dprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bdprintf","filterText":"dprintf","insertText":"dprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dprintf()"}},{"label":"â€¢drand48()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdrand48","filterText":"drand48","insertText":"drand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"drand48()"}},{"label":"â€¢drem()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bdrem","filterText":"drem","insertText":"drem()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"drem()"}},{"label":"â€¢dremf()","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"403f858bdremf","filterText":"dremf","insertText":"dremf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dremf()"}},{"label":"â€¢dtoa()","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdtoa","filterText":"dtoa","insertText":"dtoa()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dtoa()"}},{"label":"â€¢dtostrf(double val, signed char width, unsigned char prec, char *s)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"stdlib_noniso.h\"`"},"sortText":"403f858bdtostrf","filterText":"dtostrf","insertText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})"}},{"label":"â€¢daddr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"405d8e68daddr_t","filterText":"daddr_t","insertText":"daddr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"daddr_t"}},{"label":" detachInterrupt(uint8_t pin)","kind":3,"detail":"void","sortText":"405d8e68detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"detachInterrupt(${1:uint8_t pin})"}},{"label":"â€¢dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"405d8e68dev_t","filterText":"dev_t","insertText":"dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dev_t"}},{"label":"â€¢difftime()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fdifftime","filterText":"difftime","insertText":"difftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"difftime()"}},{"label":"â€¢disable_extra4k_at_link_time()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fdisable_extra4k_at_link_time","filterText":"disable_extra4k_at_link_time","insertText":"disable_extra4k_at_link_time()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"disable_extra4k_at_link_time()"}},{"label":"â€¢D0","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D0","filterText":"D0","insertText":"D0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D0"}},{"label":"â€¢D1","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D1","filterText":"D1","insertText":"D1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D1"}},{"label":"â€¢D10","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D10","filterText":"D10","insertText":"D10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D10"}},{"label":"â€¢D2","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D2","filterText":"D2","insertText":"D2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D2"}},{"label":"â€¢D3","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D3","filterText":"D3","insertText":"D3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D3"}},{"label":"â€¢D4","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D4","filterText":"D4","insertText":"D4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D4"}},{"label":"â€¢D5","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D5","filterText":"D5","insertText":"D5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D5"}},{"label":"â€¢D6","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D6","filterText":"D6","insertText":"D6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D6"}},{"label":"â€¢D7","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D7","filterText":"D7","insertText":"D7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D7"}},{"label":"â€¢D8","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D8","filterText":"D8","insertText":"D8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D8"}},{"label":"â€¢D9","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4071b066D9","filterText":"D9","insertText":"D9","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"D9"}},{"label":"â€¢dup()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066dup","filterText":"dup","insertText":"dup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dup()"}},{"label":"â€¢dup2()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"4071b066dup2","filterText":"dup2","insertText":"dup2()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dup2()"}},{"label":"â€¢Dir","kind":18,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"40766322Dir","filterText":"Dir","insertText":"Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"Dir"}},{"label":"â€¢fs::Dir","kind":7,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4079c6cfDir","filterText":"Dir","insertText":"fs::Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"fs::Dir"}},{"label":"â€¢fs::DirImpl","kind":7,"documentation":{"kind":"markdown","value":"From `\"FSImpl.h\"`"},"sortText":"4083b5beDirImpl","filterText":"DirImpl","insertText":"fs::DirImpl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"fs::DirImpl"}},{"label":"â€¢fs::DirImplPtr","kind":8,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4083b5beDirImplPtr","filterText":"DirImplPtr","insertText":"fs::DirImplPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"fs::DirImplPtr"}},{"label":"â€¢esp8266::polledTimeout::YieldPolicy::DoNothing","kind":22,"documentation":{"kind":"markdown","value":"From `\"PolledTimeout.h\"`"},"sortText":"4083b5beDoNothing","filterText":"DoNothing","insertText":"esp8266::polledTimeout::YieldPolicy::DoNothing","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"esp8266::polledTimeout::YieldPolicy::DoNothing"}},{"label":"â€¢DHCP_STARTED","kind":20,"detail":"dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137DHCP_STARTED","filterText":"DHCP_STARTED","insertText":"DHCP_STARTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DHCP_STARTED"}},{"label":"â€¢DHCP_STOPPED","kind":20,"detail":"dhcp_status","documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137DHCP_STOPPED","filterText":"DHCP_STOPPED","insertText":"DHCP_STOPPED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DHCP_STOPPED"}},{"label":"â€¢dhcp_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137dhcp_status","filterText":"dhcp_status","insertText":"dhcp_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dhcp_status"}},{"label":"â€¢dhcps_lease","kind":22,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137dhcps_lease","filterText":"dhcps_lease","insertText":"dhcps_lease","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dhcps_lease"}},{"label":"â€¢dhcps_offer_option","kind":13,"documentation":{"kind":"markdown","value":"From `\"user_interface.h\"`"},"sortText":"40972137dhcps_offer_option","filterText":"dhcps_offer_option","insertText":"dhcps_offer_option","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"dhcps_offer_option"}},{"label":" digitalPinToBitMask(pin)","kind":1,"sortText":"40a27c5fdigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalPinToBitMask(${1:pin})"}},{"label":" digitalPinToPort(pin)","kind":1,"sortText":"40a27c5fdigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalPinToPort(${1:pin})"}},{"label":" digitalPinToTimer(pin)","kind":1,"sortText":"40a27c5fdigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalPinToTimer(${1:pin})"}},{"label":"â€¢std::double_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \ntypes"},"sortText":"40a8609bdouble_t","filterText":"double_t","insertText":"std::double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::double_t"}},{"label":"â€¢std::decay\u003ctypename _Tp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \ndecay"},"sortText":"40b198efdecay","filterText":"decay","insertText":"std::decay\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::decay\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::declval\u003ctypename _Tp\u003e()","kind":3,"detail":"typename add_rvalue_reference\u003c_Tp\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n@brief Utility to simplify expressions used in unevaluated operands  \n@ingroup utilities"},"sortText":"40b198efdeclval","filterText":"declval","insertText":"std::declval\u003c${1:typename _Tp}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::declval\u003c${1:typename _Tp}\u003e()"}},{"label":"â€¢std::denorm_absent","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nThe type does not allow denormalized values."},"sortText":"40b198efdenorm_absent","filterText":"denorm_absent","insertText":"std::denorm_absent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::denorm_absent"}},{"label":"â€¢std::denorm_indeterminate","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nIndeterminate at compile time whether denormalized values are allowed."},"sortText":"40b198efdenorm_indeterminate","filterText":"denorm_indeterminate","insertText":"std::denorm_indeterminate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::denorm_indeterminate"}},{"label":"â€¢std::denorm_present","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nThe type allows denormalized values."},"sortText":"40b198efdenorm_present","filterText":"denorm_present","insertText":"std::denorm_present","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::denorm_present"}},{"label":"â€¢std::div(long __i, long __j)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40b198efdiv","filterText":"div","insertText":"std::div(${1:long __i}, ${2:long __j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::div(${1:long __i}, ${2:long __j})"}},{"label":"â€¢std::domain_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown by the library, or by you, to report domain errors (domain in the mathematical sense)."},"sortText":"40b198efdomain_error","filterText":"domain_error","insertText":"std::domain_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::domain_error"}},{"label":"â€¢std::default_delete\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nPrimary template, default_delete."},"sortText":"40b86274default_delete","filterText":"default_delete","insertText":"std::default_delete\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::default_delete\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::default_random_engine","kind":8,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`"},"sortText":"40b86274default_random_engine","filterText":"default_random_engine","insertText":"std::default_random_engine","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::default_random_engine"}},{"label":"â€¢std::discard_block_engine\u003ctypename _RandomNumberEngine, size_t __p, size_t __r\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \nProduces random numbers from some base engine by discarding blocks of data.  \n0 \u003c= @p \\_\\_r \u003c= @p \\_\\_p"},"sortText":"40b86274discard_block_engine","filterText":"discard_block_engine","insertText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e"}},{"label":"â€¢std::discrete_distribution\u003ctypename _IntType\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \n@brief A discrete_distribution random number distribution.  \nThe formula for the discrete probability mass function is"},"sortText":"40b86274discrete_distribution","filterText":"discrete_distribution","insertText":"std::discrete_distribution\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::discrete_distribution\u003c\u003e"}},{"label":"â€¢std::distance(_InputIterator __first, _InputIterator __last)","kind":3,"detail":"typename iterator_traits\u003c_InputIterator\u003e::difference_type","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief A generalization of pointer arithmetic.  \n@param \\_\\_first An input iterator.  \n@param \\_\\_last An input iterator.  \n@return The distance between them.  \nReturns @c n such that \\_\\_first + n == \\_\\_last. This requires that @p \\_\\_last must be reachable from @p \\_\\_first. Note that @c n may be negative.  \nFor random access iterators, this uses their @c + and @c - operations and are constant time. For other %iterator classes they are linear time."},"sortText":"40b86274distance","filterText":"distance","insertText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})"}},{"label":"â€¢std::divides\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link arithmetic_functors math functors@endlink."},"sortText":"40b86274divides","filterText":"divides","insertText":"std::divides\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::divides\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::dynamic_pointer_cast(â€¦)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nThe seemingly equivalent code:  \nshared_ptr\u003c\\_Tp, \\_Lp\u003e(dynamic_cast\u003c\\_Tp\\*\u003e(\\_\\_r.get())) will eventually result in undefined behaviour, attempting to delete the same object twice.  \ndynamic_pointer_cast"},"sortText":"40b86274dynamic_pointer_cast","filterText":"dynamic_pointer_cast","insertText":"std::dynamic_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::dynamic_pointer_cast($0)"}},{"label":"â€¢std::div","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv","filterText":"div","insertText":"std::div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::div"}},{"label":"â€¢std::div_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv_t","filterText":"div_t","insertText":"std::div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"std::div_t"}},{"label":" digitalPinHasPWM(p)","kind":1,"sortText":"40d057aedigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":" digitalPinToInterrupt(p)","kind":1,"sortText":"40d057aedigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":"â€¢DOMAIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"40d1050aDOMAIN","filterText":"DOMAIN","insertText":"DOMAIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DOMAIN"}},{"label":" DEFAULT","kind":1,"sortText":"40ec52eaDEFAULT","filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DEFAULT"}},{"label":" DEG_TO_RAD","kind":1,"sortText":"40ec52eaDEG_TO_RAD","filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DEG_TO_RAD"}},{"label":" DISPLAY","kind":1,"sortText":"40ec52eaDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DISPLAY"}},{"label":" degrees(rad)","kind":1,"sortText":"40ec52eadegrees","filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"degrees(${1:rad})"}},{"label":"â€¢DEBUGV(...)","kind":1,"documentation":{"kind":"markdown","value":"From `\"debug.h\"`"},"sortText":"40f66322DEBUGV","filterText":"DEBUGV","insertText":"DEBUGV(${1:...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DEBUGV(${1:...})"}},{"label":"â€¢DEC","kind":1,"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"sortText":"40f66322DEC","filterText":"DEC","insertText":"DEC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DEC"}},{"label":"â€¢DMEM_ATTR","kind":1,"documentation":{"kind":"markdown","value":"From `\"c_types.h\"`"},"sortText":"41263cddDMEM_ATTR","filterText":"DMEM_ATTR","insertText":"DMEM_ATTR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"DMEM_ATTR"}},{"label":" TIM_DIV256","kind":20,"detail":"TIM_DIV_ENUM","sortText":"80000000TIM_DIV256","filterText":"TIM_DIV256","insertText":"TIM_DIV256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"TIM_DIV256"}},{"label":" TIM_DIV265","kind":6,"detail":"const int","sortText":"80000000TIM_DIV265","filterText":"TIM_DIV265","insertText":"TIM_DIV265","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"TIM_DIV265"}},{"label":" TIM_DIV_ENUM","kind":13,"sortText":"80000000TIM_DIV_ENUM","filterText":"TIM_DIV_ENUM","insertText":"TIM_DIV_ENUM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":23}},"newText":"TIM_DIV_ENUM"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":254},"contentChanges":[{"range":{"start":{"line":16,"character":23},"end":{"line":16,"character":23}},"rangeLength":0,"text":"i"}]}}Content-Length: 249

{"jsonrpc":"2.0","id":94,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":24},"context":{"triggerKind":3}}}
>>>
Content-Length: 11015

{"id":94,"result":{"isIncomplete":false,"items":[{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","sortText":"3efdffd9digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","sortText":"3f05ef7ddigitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":"â€¢diprintf()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bdiprintf","filterText":"diprintf","insertText":"diprintf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"diprintf()"}},{"label":"â€¢div()","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv","filterText":"div","insertText":"div()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"div()"}},{"label":"â€¢div_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"div_t"}},{"label":" TIM_DIV256","kind":20,"detail":"TIM_DIV_ENUM","sortText":"40651eb8TIM_DIV256","filterText":"TIM_DIV256","insertText":"TIM_DIV256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"TIM_DIV256"}},{"label":" TIM_DIV_ENUM","kind":13,"sortText":"40651eb8TIM_DIV_ENUM","filterText":"TIM_DIV_ENUM","insertText":"TIM_DIV_ENUM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"TIM_DIV_ENUM"}},{"label":"â€¢difftime()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\u003cctime\u003e`"},"sortText":"4068a03fdifftime","filterText":"difftime","insertText":"difftime()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"difftime()"}},{"label":"â€¢disable_extra4k_at_link_time()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"coredecls.h\"`"},"sortText":"4068a03fdisable_extra4k_at_link_time","filterText":"disable_extra4k_at_link_time","insertText":"disable_extra4k_at_link_time()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"disable_extra4k_at_link_time()"}},{"label":"â€¢Dir","kind":18,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"40766322Dir","filterText":"Dir","insertText":"Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"Dir"}},{"label":"â€¢fs::Dir","kind":7,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4079c6cfDir","filterText":"Dir","insertText":"fs::Dir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"fs::Dir"}},{"label":"â€¢fs::DirImpl","kind":7,"documentation":{"kind":"markdown","value":"From `\"FSImpl.h\"`"},"sortText":"4083b5beDirImpl","filterText":"DirImpl","insertText":"fs::DirImpl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"fs::DirImpl"}},{"label":"â€¢fs::DirImplPtr","kind":8,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4083b5beDirImplPtr","filterText":"DirImplPtr","insertText":"fs::DirImplPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"fs::DirImplPtr"}},{"label":" detachInterrupt(uint8_t pin)","kind":3,"detail":"void","sortText":"408c559bdetachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"detachInterrupt(${1:uint8_t pin})"}},{"label":" digitalPinToBitMask(pin)","kind":1,"sortText":"40a27c5fdigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalPinToBitMask(${1:pin})"}},{"label":" digitalPinToPort(pin)","kind":1,"sortText":"40a27c5fdigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalPinToPort(${1:pin})"}},{"label":" digitalPinToTimer(pin)","kind":1,"sortText":"40a27c5fdigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalPinToTimer(${1:pin})"}},{"label":"â€¢std::div(long __i, long __j)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40b198efdiv","filterText":"div","insertText":"std::div(${1:long __i}, ${2:long __j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::div(${1:long __i}, ${2:long __j})"}},{"label":"â€¢std::discard_block_engine\u003ctypename _RandomNumberEngine, size_t __p, size_t __r\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \nProduces random numbers from some base engine by discarding blocks of data.  \n0 \u003c= @p \\_\\_r \u003c= @p \\_\\_p"},"sortText":"40b86274discard_block_engine","filterText":"discard_block_engine","insertText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::discard_block_engine\u003c${1:typename _RandomNumberEngine}, ${2:size_t __p}, ${3:size_t __r}\u003e"}},{"label":"â€¢std::discrete_distribution\u003ctypename _IntType\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \n@brief A discrete_distribution random number distribution.  \nThe formula for the discrete probability mass function is"},"sortText":"40b86274discrete_distribution","filterText":"discrete_distribution","insertText":"std::discrete_distribution\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::discrete_distribution\u003c\u003e"}},{"label":"â€¢std::distance(_InputIterator __first, _InputIterator __last)","kind":3,"detail":"typename iterator_traits\u003c_InputIterator\u003e::difference_type","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief A generalization of pointer arithmetic.  \n@param \\_\\_first An input iterator.  \n@param \\_\\_last An input iterator.  \n@return The distance between them.  \nReturns @c n such that \\_\\_first + n == \\_\\_last. This requires that @p \\_\\_last must be reachable from @p \\_\\_first. Note that @c n may be negative.  \nFor random access iterators, this uses their @c + and @c - operations and are constant time. For other %iterator classes they are linear time."},"sortText":"40b86274distance","filterText":"distance","insertText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})"}},{"label":"â€¢std::divides\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link arithmetic_functors math functors@endlink."},"sortText":"40b86274divides","filterText":"divides","insertText":"std::divides\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::divides\u003c${1:typename _Tp}\u003e"}},{"label":"â€¢std::div","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv","filterText":"div","insertText":"std::div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::div"}},{"label":"â€¢std::div_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40c45c7cdiv_t","filterText":"div_t","insertText":"std::div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::div_t"}},{"label":" digitalPinHasPWM(p)","kind":1,"sortText":"40d057aedigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":" digitalPinToInterrupt(p)","kind":1,"sortText":"40d057aedigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":"â€¢std::denorm_indeterminate","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nIndeterminate at compile time whether denormalized values are allowed."},"sortText":"40e532b3denorm_indeterminate","filterText":"denorm_indeterminate","insertText":"std::denorm_indeterminate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"std::denorm_indeterminate"}},{"label":" DISPLAY","kind":1,"sortText":"40fec88dDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"DISPLAY"}},{"label":" TIM_DIV265","kind":6,"detail":"const int","sortText":"42083126TIM_DIV265","filterText":"TIM_DIV265","insertText":"TIM_DIV265","insertTextFormat":2,"textEdit":{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":24}},"newText":"TIM_DIV265"}}]},"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":255},"contentChanges":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 366

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'di'"}]},"jsonrpc":"2.0"}Content-Length: 450

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":25}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dig'; did you mean 'div'? (fix available)\n\n:88:14:\nnote: 'div' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 557

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":25}},"message":"Use of undeclared identifier 'dig'; did you mean 'div'? (fix available)\n\n:88:14:\nnote: 'div' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":95,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":255}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":256},"contentChanges":[{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"rangeLength":0,"text":"i"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":257},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"rangeLength":0,"text":"t"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":258},"contentChanges":[{"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 370

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digita'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":259},"contentChanges":[{"range":{"start":{"line":16,"character":28},"end":{"line":16,"character":28}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digital'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 478

{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":29}},"message":"Use of undeclared identifier 'digital'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":96,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":259}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":260},"contentChanges":[{"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"rangeLength":0,"text":"R"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":30}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalR'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":261},"contentChanges":[{"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":31}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRe'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:180:5:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":262},"contentChanges":[{"range":{"start":{"line":16,"character":31},"end":{"line":16,"character":31}},"rangeLength":0,"text":"a"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":263},"contentChanges":[{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":32}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 588

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":32}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRea'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:180:5:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":264},"contentChanges":[{"range":{"start":{"line":16,"character":33},"end":{"line":16,"character":33}},"rangeLength":0,"text":"()"}]}}Content-Length: 295

{"jsonrpc":"2.0","id":97,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":16,"character":34},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 618

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":33}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalRead'\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:180:5:\nnote: candidate function not viable: requires single argument 'pin', but no arguments were provided"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":97,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":34},"end":{"line":16,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":98,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":264}}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":265},"contentChanges":[{"range":{"start":{"line":16,"character":34},"end":{"line":16,"character":34}},"rangeLength":0,"text":"1"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":266},"contentChanges":[{"range":{"start":{"line":16,"character":35},"end":{"line":16,"character":35}},"rangeLength":0,"text":"6"}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":36},"end":{"line":16,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":99,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":266}}}Content-Length: 291

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":38},"end":{"line":16,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":100,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":39},"end":{"line":16,"character":39}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":101,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":1,"character":43}}}
>>>
Content-Length: 40

{"id":102,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":103,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":267},"contentChanges":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":268},"contentChanges":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":18}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":269},"contentChanges":[{"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":270},"contentChanges":[{"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":16}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":271},"contentChanges":[{"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":15}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":272},"contentChanges":[{"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":273},"contentChanges":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":274},"contentChanges":[{"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":275},"contentChanges":[{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":276},"contentChanges":[{"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":277},"contentChanges":[{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":278},"contentChanges":[{"range":{"start":{"line":7,"character":7},"end":{"line":7,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":279},"contentChanges":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":7}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1303

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":6}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'boolea'; did you mean 'boolean'? (fix available)\n\nC:\\Users\\vantr\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266\\Arduino.h:170:14:\nnote: 'boolean' declared here"},{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'type-name' declaration specifier"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\ngiu_nut_dao_led.ino.cpp:6:6: note: previous declaration is here"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":3,"message":"Previous declaration is here\n\ngiu_nut_dao_led.ino.cpp:17:6: error: functions that differ only in their return type cannot be overloaded"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":280},"contentChanges":[{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":6}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1136

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":5}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'boole'; did you mean 'bool'? (fix available)"},{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'bool' declaration specifier"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\ngiu_nut_dao_led.ino.cpp:6:6: note: previous declaration is here"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":3,"message":"Previous declaration is here\n\ngiu_nut_dao_led.ino.cpp:17:6: error: functions that differ only in their return type cannot be overloaded"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":281},"contentChanges":[{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 920

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'bool' declaration specifier"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\ngiu_nut_dao_led.ino.cpp:6:6: note: previous declaration is here"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":3,"message":"Previous declaration is here\n\ngiu_nut_dao_led.ino.cpp:17:6: error: functions that differ only in their return type cannot be overloaded"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":282},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1134

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":3}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'boo'; did you mean 'bool'? (fix available)"},{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'bool' declaration specifier"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\ngiu_nut_dao_led.ino.cpp:6:6: note: previous declaration is here"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}},"severity":3,"message":"Previous declaration is here\n\ngiu_nut_dao_led.ino.cpp:17:6: error: functions that differ only in their return type cannot be overloaded"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":283},"contentChanges":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'bo'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":284},"contentChanges":[{"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":2}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'b'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":285},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 183

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":286},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":286}}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":287},"contentChanges":[{"range":{"start":{"line":5,"character":1},"end":{"line":6,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 287

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":287}}}Content-Length: 289

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":15,"character":3},"end":{"line":15,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":288},"contentChanges":[{"range":{"start":{"line":15,"character":3},"end":{"line":15,"character":3}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":288}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":289},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"rangeLength":0,"text":"-"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":3},"end":{"line":16,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":107,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":289}}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":290},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":290}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":291},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"rangeLength":0,"text":"/"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":292},"contentChanges":[{"range":{"start":{"line":16,"character":3},"end":{"line":16,"character":3}},"rangeLength":0,"text":"/"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":108,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":293},"contentChanges":[{"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":4}},"rangeLength":0,"text":"-"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":5},"end":{"line":16,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":294},"contentChanges":[{"range":{"start":{"line":16,"character":5},"end":{"line":16,"character":5}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":295},"contentChanges":[{"range":{"start":{"line":16,"character":6},"end":{"line":16,"character":6}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":296},"contentChanges":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":297},"contentChanges":[{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":8}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":298},"contentChanges":[{"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":299},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":10}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":300},"contentChanges":[{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":301},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":302},"contentChanges":[{"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":303},"contentChanges":[{"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":304},"contentChanges":[{"range":{"start":{"line":16,"character":15},"end":{"line":16,"character":15}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":305},"contentChanges":[{"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"rangeLength":0,"text":"-"}]}}Content-Length: 291

{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":110,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":306},"contentChanges":[{"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":307},"contentChanges":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":307}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":308},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":2}},"rangeLength":0,"text":"/"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":309},"contentChanges":[{"range":{"start":{"line":18,"character":3},"end":{"line":18,"character":3}},"rangeLength":0,"text":"/"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":310},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"rangeLength":0,"text":"-"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":311},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":312},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":313},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":314},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"rangeLength":0,"text":"-"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":315},"contentChanges":[{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":316},"contentChanges":[{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":10}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":317},"contentChanges":[{"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":318},"contentChanges":[{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":12}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":319},"contentChanges":[{"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":13}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":320},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":321},"contentChanges":[{"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":322},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"rangeLength":0,"text":"-"}]}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":323},"contentChanges":[{"range":{"start":{"line":18,"character":17},"end":{"line":18,"character":17}},"rangeLength":0,"text":"-"}]}}Content-Length: 291

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":18,"character":18},"end":{"line":18,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":323}}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":324},"contentChanges":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":324}}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":325},"contentChanges":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":326},"contentChanges":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":0}},"rangeLength":0,"text":"/"}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":327},"contentChanges":[{"range":{"start":{"line":17,"character":1},"end":{"line":17,"character":1}},"rangeLength":0,"text":"/"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":114,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":328},"contentChanges":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"rangeLength":0,"text":" "}]}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":328}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":329},"contentChanges":[{"range":{"start":{"line":17,"character":3},"end":{"line":17,"character":3}},"rangeLength":0,"text":"1"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":330},"contentChanges":[{"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":4}},"rangeLength":0,"text":"0"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":116,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":330}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":331},"contentChanges":[{"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":5}},"rangeLength":0,"text":"s"}]}}Content-Length: 289

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"range":{"start":{"line":17,"character":6},"end":{"line":17,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":117,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","version":331}}}Content-Length: 216

{"jsonrpc":"2.0","id":118,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino"},"position":{"line":17,"character":2}}}
>>>
Content-Length: 183

{"id":118,"error":{"code":0,"message":"Document is not available: file:///d%3A/TRAINING-PROJECT/IoT-K15/Module-2/SRC/giu_nut_dao_led/giu_nut_dao_led.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":119,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"id":119,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}